{"ast":null,"code":"var _jsxFileName = \"/Users/mariavetter/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/index.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { Container, ThemeProvider, CssBaseline } from '@material-ui/core'; //import firebase from 'firebase/app';\n//import 'firebase/auth';\n\nimport Header from './header/header'; //import CustomerList from './components/CustomerList';\n//import TransactionList from './components/TransactionList';\n//import About from './components/pages/About';\n//import AllAccountList from './components/AllAccountList';\n//import Theme from './Theme';\n\nimport SignIn from './pages/signin'; //import LoadingProgress from './components/dialogs/LoadingProgress';\n//import ContextErrorMessage from './components/dialogs/ContextErrorMessage';\n//import firebaseConfig from './firebaseconfig';\n\n/**\n * The main bank administration app. It uses Googles firebase to log into the bank end. For routing the\n * user to the respective pages, react-router-dom ist used.\n *\n * @see See Google [firebase.auth()](https://firebase.google.com/docs/reference/js/firebase.auth.Auth)\n * @see See Google [firebase.auth().signInWithRedirect](https://firebase.google.com/docs/reference/js/firebase.auth.Auth#signinwithredirect)\n * @see [react-router-dom](https://reacttraining.com/react-router/web/guides/quick-start)\n *\n * @author [Christoph Kunz](https://github.com/christophkunz)\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  /** Constructor of the app, which initializes firebase  */\n  constructor(props) {\n    super(props); // Init an empty state\n\n    this.handleAuthStateChange = user => {\n      if (user) {\n        this.setState({\n          authLoading: true\n        }); // The user is signed in\n\n        user.getIdToken().then(token => {\n          // Add the token to the browser's cookies. The server will then be\n          // able to verify the token against the API.\n          // SECURITY NOTE: As cookies can easily be modified, only put the\n          // token (which is verified server-side) in a cookie; do not add other\n          // user information.\n          document.cookie = `token=${token};path=/`; // Set the user not before the token arrived\n\n          this.setState({\n            currentUser: user,\n            authError: null,\n            authLoading: false\n          });\n        }).catch(e => {\n          this.setState({\n            authError: e,\n            authLoading: false\n          });\n        });\n      } else {\n        // User has logged out, so clear the id token\n        document.cookie = 'token=;path=/'; // Set the logged out user to null\n\n        this.setState({\n          currentUser: null,\n          authLoading: false\n        });\n      }\n    };\n\n    this.handleSignIn = () => {\n      this.setState({\n        authLoading: true\n      });\n      const provider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithRedirect(provider);\n    };\n\n    this.state = {\n      currentUser: null,\n      appError: null,\n      authError: null,\n      authLoading: false\n    };\n  }\n  /**\n   * Create an error boundary for this app and recieve all errors from below the component tree.\n   *\n   * @See See Reacts [Error Boundaries](https://reactjs.org/docs/error-boundaries.html)\n  \t */\n\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      appError: error\n    };\n  }\n  /** Handles firebase users logged in state changes  */\n\n\n  /**\n   * Lifecycle method, which is called when the component gets inserted into the browsers DOM.\n   * Initializes the firebase SDK.\n   *\n   * @see See Googles [firebase init process](https://firebase.google.com/docs/web/setup)\n   */\n  componentDidMount() {\n    firebase.initializeApp(firebaseConfig);\n    firebase.auth().languageCode = 'en';\n    firebase.auth().onAuthStateChanged(this.handleAuthStateChange);\n  }\n  /** Renders the whole app */\n\n\n  render() {\n    const {\n      currentUser,\n      appError,\n      authError,\n      authLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: Theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        basename: process.env.PUBLIC_URL,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"md\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            user: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 7\n          }, this), // Is a user signed in?\n          currentUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Redirect, {\n              from: \"/\",\n              to: \"customers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/customers\",\n              children: /*#__PURE__*/_jsxDEV(CustomerList, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/transactions\",\n              children: /*#__PURE__*/_jsxDEV(TransactionList, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/accounts\",\n              children: /*#__PURE__*/_jsxDEV(AllAccountList, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/about\",\n              component: About\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true) :\n          /*#__PURE__*/\n          // else show the sign in page\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/index.html\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(SignIn, {\n              onSignIn: this.handleSignIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(LoadingProgress, {\n            show: authLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(ContextErrorMessage, {\n            error: authError,\n            contextErrorMsg: `Something went wrong during sighn in process.`,\n            onReload: this.handleSignIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(ContextErrorMessage, {\n            error: appError,\n            contextErrorMsg: `Something went wrong inside the app. Please reload the page.`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mariavetter/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/index.js"],"names":["React","BrowserRouter","Router","Route","Redirect","Container","ThemeProvider","CssBaseline","Header","SignIn","App","Component","constructor","props","handleAuthStateChange","user","setState","authLoading","getIdToken","then","token","document","cookie","currentUser","authError","catch","e","handleSignIn","provider","firebase","auth","GoogleAuthProvider","signInWithRedirect","state","appError","getDerivedStateFromError","error","componentDidMount","initializeApp","firebaseConfig","languageCode","onAuthStateChanged","render","Theme","process","env","PUBLIC_URL","About"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,QAAzC,QAAyD,kBAAzD;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,WAAnC,QAAsD,mBAAtD,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,iBAAnB,C,CACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,gBAAnB,C,CACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA,MAAMC,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAkC;AAEjC;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN,EADkB,CAGlB;;AAHkB,SAuBnBC,qBAvBmB,GAuBKC,IAAI,IAAI;AAC/B,UAAIA,IAAJ,EAAU;AACT,aAAKC,QAAL,CAAc;AACbC,UAAAA,WAAW,EAAE;AADA,SAAd,EADS,CAIT;;AACAF,QAAAA,IAAI,CAACG,UAAL,GAAkBC,IAAlB,CAAuBC,KAAK,IAAI;AAC/B;AACA;AACA;AACA;AACA;AACAC,UAAAA,QAAQ,CAACC,MAAT,GAAmB,SAAQF,KAAM,SAAjC,CAN+B,CAQ/B;;AACA,eAAKJ,QAAL,CAAc;AACbO,YAAAA,WAAW,EAAER,IADA;AAEbS,YAAAA,SAAS,EAAE,IAFE;AAGbP,YAAAA,WAAW,EAAE;AAHA,WAAd;AAKA,SAdD,EAcGQ,KAdH,CAcSC,CAAC,IAAI;AACb,eAAKV,QAAL,CAAc;AACbQ,YAAAA,SAAS,EAAEE,CADE;AAEbT,YAAAA,WAAW,EAAE;AAFA,WAAd;AAIA,SAnBD;AAoBA,OAzBD,MAyBO;AACN;AACAI,QAAAA,QAAQ,CAACC,MAAT,GAAkB,eAAlB,CAFM,CAIN;;AACA,aAAKN,QAAL,CAAc;AACbO,UAAAA,WAAW,EAAE,IADA;AAEbN,UAAAA,WAAW,EAAE;AAFA,SAAd;AAIA;AACD,KA3DkB;;AAAA,SAkEnBU,YAlEmB,GAkEJ,MAAM;AACpB,WAAKX,QAAL,CAAc;AACbC,QAAAA,WAAW,EAAE;AADA,OAAd;AAGA,YAAMW,QAAQ,GAAG,IAAIC,QAAQ,CAACC,IAAT,CAAcC,kBAAlB,EAAjB;AACAF,MAAAA,QAAQ,CAACC,IAAT,GAAgBE,kBAAhB,CAAmCJ,QAAnC;AACA,KAxEkB;;AAIlB,SAAKK,KAAL,GAAa;AACZV,MAAAA,WAAW,EAAE,IADD;AAEZW,MAAAA,QAAQ,EAAE,IAFE;AAGZV,MAAAA,SAAS,EAAE,IAHC;AAIZP,MAAAA,WAAW,EAAE;AAJD,KAAb;AAMA;AAED;AACD;AACA;AACA;AACA;;;AACgC,SAAxBkB,wBAAwB,CAACC,KAAD,EAAQ;AACtC;AACA,WAAO;AAAEF,MAAAA,QAAQ,EAAEE;AAAZ,KAAP;AACA;AAED;;;AAoDA;AACD;AACA;AACA;AACA;AACA;AACCC,EAAAA,iBAAiB,GAAG;AACnBR,IAAAA,QAAQ,CAACS,aAAT,CAAuBC,cAAvB;AACAV,IAAAA,QAAQ,CAACC,IAAT,GAAgBU,YAAhB,GAA+B,IAA/B;AACAX,IAAAA,QAAQ,CAACC,IAAT,GAAgBW,kBAAhB,CAAmC,KAAK3B,qBAAxC;AACA;AAED;;;AACA4B,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEnB,MAAAA,WAAF;AAAeW,MAAAA,QAAf;AAAyBV,MAAAA,SAAzB;AAAoCP,MAAAA;AAApC,QAAoD,KAAKgB,KAA/D;AAEA,wBACC,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEU,KAAtB;AAAA,8BAEC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAA9B;AAAA,+BACC,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAC,IAApB;AAAA,kCACC,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAEvB;AAAd;AAAA;AAAA;AAAA;AAAA,kBADD,EAGE;AACAA,UAAAA,WAAW,gBACV;AAAA,oCACC,QAAC,QAAD;AAAU,cAAA,IAAI,EAAC,GAAf;AAAmB,cAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,oBADD,eAEC,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,YAAlB;AAAA,qCACC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,oBAFD,eAKC,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,eAAZ;AAAA,qCACC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,oBALD,eAQC,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,WAAZ;AAAA,qCACC,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,oBARD,eAWC,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,SAAS,EAAEwB;AAAhC;AAAA;AAAA;AAAA;AAAA,oBAXD;AAAA,0BADU;AAAA;AAeV;AACA;AAAA,oCACC,QAAC,QAAD;AAAU,cAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBADD,eAEC,QAAC,MAAD;AAAQ,cAAA,QAAQ,EAAE,KAAKpB;AAAvB;AAAA;AAAA;AAAA;AAAA,oBAFD;AAAA,0BApBH,eAyBC,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEV;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAzBD,eA0BC,QAAC,mBAAD;AAAqB,YAAA,KAAK,EAAEO,SAA5B;AAAuC,YAAA,eAAe,EAAG,+CAAzD;AAAyG,YAAA,QAAQ,EAAE,KAAKG;AAAxH;AAAA;AAAA;AAAA;AAAA,kBA1BD,eA2BC,QAAC,mBAAD;AAAqB,YAAA,KAAK,EAAEO,QAA5B;AAAsC,YAAA,eAAe,EAAG;AAAxD;AAAA;AAAA;AAAA;AAAA,kBA3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAqCA;;AAlIgC;;AAqIlC,eAAexB,GAAf","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { Container, ThemeProvider, CssBaseline } from '@material-ui/core';\n//import firebase from 'firebase/app';\n//import 'firebase/auth';\nimport Header from './header/header';\n//import CustomerList from './components/CustomerList';\n//import TransactionList from './components/TransactionList';\n//import About from './components/pages/About';\n//import AllAccountList from './components/AllAccountList';\n//import Theme from './Theme';\nimport SignIn from './pages/signin';\n//import LoadingProgress from './components/dialogs/LoadingProgress';\n//import ContextErrorMessage from './components/dialogs/ContextErrorMessage';\n//import firebaseConfig from './firebaseconfig';\n\n/**\n * The main bank administration app. It uses Googles firebase to log into the bank end. For routing the\n * user to the respective pages, react-router-dom ist used.\n *\n * @see See Google [firebase.auth()](https://firebase.google.com/docs/reference/js/firebase.auth.Auth)\n * @see See Google [firebase.auth().signInWithRedirect](https://firebase.google.com/docs/reference/js/firebase.auth.Auth#signinwithredirect)\n * @see [react-router-dom](https://reacttraining.com/react-router/web/guides/quick-start)\n *\n * @author [Christoph Kunz](https://github.com/christophkunz)\n */\nclass App extends React.Component {\n\n\t/** Constructor of the app, which initializes firebase  */\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// Init an empty state\n\t\tthis.state = {\n\t\t\tcurrentUser: null,\n\t\t\tappError: null,\n\t\t\tauthError: null,\n\t\t\tauthLoading: false\n\t\t};\n\t}\n\n\t/**\n\t * Create an error boundary for this app and recieve all errors from below the component tree.\n\t *\n\t * @See See Reacts [Error Boundaries](https://reactjs.org/docs/error-boundaries.html)\n \t */\n\tstatic getDerivedStateFromError(error) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { appError: error };\n\t}\n\n\t/** Handles firebase users logged in state changes  */\n\thandleAuthStateChange = user => {\n\t\tif (user) {\n\t\t\tthis.setState({\n\t\t\t\tauthLoading: true\n\t\t\t});\n\t\t\t// The user is signed in\n\t\t\tuser.getIdToken().then(token => {\n\t\t\t\t// Add the token to the browser's cookies. The server will then be\n\t\t\t\t// able to verify the token against the API.\n\t\t\t\t// SECURITY NOTE: As cookies can easily be modified, only put the\n\t\t\t\t// token (which is verified server-side) in a cookie; do not add other\n\t\t\t\t// user information.\n\t\t\t\tdocument.cookie = `token=${token};path=/`;\n\n\t\t\t\t// Set the user not before the token arrived\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrentUser: user,\n\t\t\t\t\tauthError: null,\n\t\t\t\t\tauthLoading: false\n\t\t\t\t});\n\t\t\t}).catch(e => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tauthError: e,\n\t\t\t\t\tauthLoading: false\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\t// User has logged out, so clear the id token\n\t\t\tdocument.cookie = 'token=;path=/';\n\n\t\t\t// Set the logged out user to null\n\t\t\tthis.setState({\n\t\t\t\tcurrentUser: null,\n\t\t\t\tauthLoading: false\n\t\t\t});\n\t\t}\n\t}\n\n  /**\n   * Handles the sign in request of the SignIn component uses the firebase.auth() component to sign in.\n\t * @see See Google [firebase.auth()](https://firebase.google.com/docs/reference/js/firebase.auth.Auth)\n\t * @see See Google [firebase.auth().signInWithRedirect](https://firebase.google.com/docs/reference/js/firebase.auth.Auth#signinwithredirect)\n\t */\n\thandleSignIn = () => {\n\t\tthis.setState({\n\t\t\tauthLoading: true\n\t\t});\n\t\tconst provider = new firebase.auth.GoogleAuthProvider();\n\t\tfirebase.auth().signInWithRedirect(provider);\n\t}\n\n\t/**\n\t * Lifecycle method, which is called when the component gets inserted into the browsers DOM.\n\t * Initializes the firebase SDK.\n\t *\n\t * @see See Googles [firebase init process](https://firebase.google.com/docs/web/setup)\n\t */\n\tcomponentDidMount() {\n\t\tfirebase.initializeApp(firebaseConfig);\n\t\tfirebase.auth().languageCode = 'en';\n\t\tfirebase.auth().onAuthStateChanged(this.handleAuthStateChange);\n\t}\n\n\t/** Renders the whole app */\n\trender() {\n\t\tconst { currentUser, appError, authError, authLoading } = this.state;\n\n\t\treturn (\n\t\t\t<ThemeProvider theme={Theme}>\n\t\t\t\t{/* Global CSS reset and browser normalization. CssBaseline kickstarts an elegant, consistent, and simple baseline to build upon. */}\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t<Container maxWidth='md'>\n\t\t\t\t\t\t<Header user={currentUser} />\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Is a user signed in?\n\t\t\t\t\t\t\tcurrentUser ?\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Redirect from='/' to='customers' />\n\t\t\t\t\t\t\t\t\t<Route exact path='/customers'>\n\t\t\t\t\t\t\t\t\t\t<CustomerList />\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Route path='/transactions'>\n\t\t\t\t\t\t\t\t\t\t<TransactionList />\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Route path='/accounts'>\n\t\t\t\t\t\t\t\t\t\t<AllAccountList />\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Route path='/about' component={About} />\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t// else show the sign in page\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Redirect to='/index.html' />\n\t\t\t\t\t\t\t\t\t<SignIn onSignIn={this.handleSignIn} />\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<LoadingProgress show={authLoading} />\n\t\t\t\t\t\t<ContextErrorMessage error={authError} contextErrorMsg={`Something went wrong during sighn in process.`} onReload={this.handleSignIn} />\n\t\t\t\t\t\t<ContextErrorMessage error={appError} contextErrorMsg={`Something went wrong inside the app. Please reload the page.`} />\n\t\t\t\t\t</Container>\n\t\t\t\t</Router>\n\t\t\t</ThemeProvider>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}