{"ast":null,"code":"var _jsxFileName = \"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/VorschlagListe.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI';\nimport { withStyles, Button, TextField, InputAdornment, IconButton, Grid, Typography } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\nimport VorschlagListeEintrag from './VorschlagListeEintrag'; //import SaveIcon from '@material-ui/icons/Save';\n//import Table from '@material-ui/core/Table';\n//import TableBody from '@material-ui/core/TableBody';\n//import TableCell from '@material-ui/core/TableCell';\n//import TableContainer from '@material-ui/core/TableContainer';\n//import TableHead from '@material-ui/core/TableHead';\n//import TableRow from '@material-ui/core/TableRow';\n//import Paper from '@material-ui/core/Paper';\n\n/**\n * Es werden alle Vorschläge des aktuell eingeloggten Studenten angezeigt\n * \n * @see See [VorschlagListeEintrag](#vorschaglisteeintrag)\n * \n * Hierfür werden alle Vorschläge des aktuell eingeloggten Student geladen und in die Componente VorschlagListeEintrag gemappt\n * \n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass VorschlagListe extends Component {\n  constructor(props) {\n    super(props); // console.log(props);\n\n    this.getVorschlaege = () => {\n      LernpartnerAPI.getAPI().getVorschlaege(this.props.currentPerson.id).then(vorschlagBOs => this.setState({\n        vorschlaege: vorschlagBOs,\n        error: null,\n        loadingInProgress: false\n      })).catch(e => this.setState({\n        vorschlaege: [],\n        error: e,\n        loadingInProgress: false\n      }));\n      this.setState({\n        error: null,\n        loadingInProgress: true,\n        loadingVorschlaegeError: null\n      });\n    };\n\n    this.onExpandedStateChange = vorschlag => {\n      // console.log(vorschlagID);\n      // Set expandend Vorschlag Eintrag to null by default\n      let newID = null; // If same vorschlag entry is clicked, collapse it else expand a new one\n\n      if (vorschlag.getID() !== this.state.expandedVorschlagID) {\n        // Expand the customer entry with customerID\n        newID = vorschlag.getID();\n      } // console.log(newID);\n\n\n      this.setState({\n        expandedVorschlagID: newID\n      });\n    };\n\n    let expandedID = null;\n\n    if (this.props.location.expandVorschlag) {\n      expandedID = this.props.location.expandVorschlag.getID();\n    } // initiiere einen leeren state\n\n\n    this.state = {\n      vorschlaege: [],\n      //currentPersonName: null,\n      error: null,\n      loadingInProgress: false,\n      expandedVorschlagID: expandedID\n    };\n  } // API Anbindung um Vorschläge des Students vom Backend zu bekommen \n\n\n  // Lifecycle methode, wird aufgerufen wenn componente in den DOM eingesetzt wird\n  componentDidMount() {\n    this.getVorschlaege();\n    this.setState({\n      currentStudentName: this.props.currentPerson.getname()\n    });\n  }\n  /** \n   * Handles onExpandedStateChange events from the VorschlagListeEintrag component. Toggels the expanded state of \n   * the VorschlagListeEintrag of the given VorschlagBO.\n   * \n   * @param {vorschlag} VorschlagBO of the VorschlagListeEintrag to be toggeled\n   */\n\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      vorschlaege,\n      expandedVorschlagID,\n      error,\n      loadingInProgress\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [// Show the list of VorschlagListeEintrag components\n      // Do not use strict comparison, since expandedVorschlagID maybe a string if given from the URL parameters\n      vorschlaege.map(vorschlag => /*#__PURE__*/_jsxDEV(VorschlagListeEintrag, {\n        vorschlag: vorschlag,\n        expandedState: expandedVorschlagID === vorschlag.getID(),\n        onExpandedStateChange: this.onExpandedStateChange\n      }, vorschlag.getID(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(LoadingProgress, {\n        show: loadingInProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ContextErrorMessage, {\n        error: error,\n        contextErrorMsg: `Sorry, deine Vorschläge konnten nicht geladen werden!`,\n        onReload: this.getVorschlaege\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n/** Component specific styles */\n\n\nconst styles = theme => ({\n  root: {\n    width: '100%'\n  },\n  customerFilter: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(1)\n  }\n});\n/** PropTypes */\n\n\nVorschlagListe.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n\n  /** @ignore */\n  location: PropTypes.object.isRequired\n};\nexport default withRouter(withStyles(styles)(VorschlagListe));","map":{"version":3,"sources":["/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/VorschlagListe.js"],"names":["React","Component","PropTypes","LernpartnerAPI","withStyles","Button","TextField","InputAdornment","IconButton","Grid","Typography","withRouter","ContextErrorMessage","LoadingProgress","VorschlagListeEintrag","VorschlagListe","constructor","props","getVorschlaege","getAPI","currentPerson","id","then","vorschlagBOs","setState","vorschlaege","error","loadingInProgress","catch","e","loadingVorschlaegeError","onExpandedStateChange","vorschlag","newID","getID","state","expandedVorschlagID","expandedID","location","expandVorschlag","componentDidMount","currentStudentName","getname","render","classes","root","map","styles","theme","width","customerFilter","marginTop","spacing","marginBottom","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'\nimport { withStyles, Button, TextField, InputAdornment, IconButton, Grid, Typography } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\nimport VorschlagListeEintrag from './VorschlagListeEintrag';\n//import SaveIcon from '@material-ui/icons/Save';\n//import Table from '@material-ui/core/Table';\n//import TableBody from '@material-ui/core/TableBody';\n//import TableCell from '@material-ui/core/TableCell';\n//import TableContainer from '@material-ui/core/TableContainer';\n//import TableHead from '@material-ui/core/TableHead';\n//import TableRow from '@material-ui/core/TableRow';\n//import Paper from '@material-ui/core/Paper';\n\n\n\n/**\n * Es werden alle Vorschläge des aktuell eingeloggten Studenten angezeigt\n * \n * @see See [VorschlagListeEintrag](#vorschaglisteeintrag)\n * \n * Hierfür werden alle Vorschläge des aktuell eingeloggten Student geladen und in die Componente VorschlagListeEintrag gemappt\n * \n */\n\n\nclass VorschlagListe extends Component {\n\n    constructor(props){\n        super(props);\n\n        // console.log(props);\n        let expandedID = null;\n\n        if (this.props.location.expandVorschlag) {\n        expandedID = this.props.location.expandVorschlag.getID();\n        }\n\n        // initiiere einen leeren state\n        this.state = {\n            vorschlaege : [],\n            //currentPersonName: null,\n            error: null,\n            loadingInProgress: false, \n            expandedVorschlagID: expandedID,\n        };\n    }\n\n\n    // API Anbindung um Vorschläge des Students vom Backend zu bekommen \n    getVorschlaege = () => {\n            LernpartnerAPI.getAPI().getVorschlaege(this.props.currentPerson.id)\n            .then(vorschlagBOs =>\n                this.setState({\n                    vorschlaege: vorschlagBOs,\n                    error: null,\n                    loadingInProgress: false,\n                })).catch(e =>\n                    this.setState({\n                        vorschlaege: [],\n                        error: e,\n                        loadingInProgress: false,\n                    }));\n            this.setState({\n                error: null,\n                loadingInProgress: true,\n                loadingVorschlaegeError: null\n            });\n    }\n\n    // Lifecycle methode, wird aufgerufen wenn componente in den DOM eingesetzt wird\n    componentDidMount() {\n        this.getVorschlaege();\n        this.setState({\n            currentStudentName: this.props.currentPerson.getname(),\n        })\n    }\n    \n    /** \n     * Handles onExpandedStateChange events from the VorschlagListeEintrag component. Toggels the expanded state of \n     * the VorschlagListeEintrag of the given VorschlagBO.\n     * \n     * @param {vorschlag} VorschlagBO of the VorschlagListeEintrag to be toggeled\n     */\n    onExpandedStateChange = vorschlag => {\n        // console.log(vorschlagID);\n        // Set expandend Vorschlag Eintrag to null by default\n        let newID = null;\n\n        // If same vorschlag entry is clicked, collapse it else expand a new one\n        if (vorschlag.getID() !== this.state.expandedVorschlagID) {\n        // Expand the customer entry with customerID\n        newID = vorschlag.getID();\n        }\n        // console.log(newID);\n        this.setState({\n        expandedVorschlagID: newID,\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { vorschlaege, expandedVorschlagID, error, loadingInProgress}  = this.state;\n    \n        return (\n          <div className={classes.root}>\n            { \n              // Show the list of VorschlagListeEintrag components\n              // Do not use strict comparison, since expandedVorschlagID maybe a string if given from the URL parameters\n              vorschlaege.map(vorschlag =>\n                <VorschlagListeEintrag key={vorschlag.getID()} vorschlag={vorschlag} expandedState={expandedVorschlagID === vorschlag.getID()}\n                  onExpandedStateChange={this.onExpandedStateChange}\n                />)\n            }\n            <LoadingProgress show={loadingInProgress} />\n            <ContextErrorMessage error={error} contextErrorMsg={`Sorry, deine Vorschläge konnten nicht geladen werden!`} onReload={this.getVorschlaege} />\n          </div>\n        );\n      }\n    }\n\n\n/** Component specific styles */\nconst styles = theme => ({\n    root: {\n      width: '100%',\n    },\n    customerFilter: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(1),\n    }\n  });\n\n/** PropTypes */\nVorschlagListe.propTypes = {\n    /** @ignore */\n    classes: PropTypes.object.isRequired,\n    /** @ignore */\n    location: PropTypes.object.isRequired,\n}\n\n\n\nexport default withRouter(withStyles(styles)(VorschlagListe));"]},"metadata":{},"sourceType":"module"}