{"ast":null,"code":"var _jsxFileName = \"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/VorschlagListeEintrag.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'; //import { withStyles } from '@material-ui/core';\n//import { withRouter } from 'react-router-dom';\n\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'; //import InputLabel from '@material-ui/core/InputLabel';\n//import MenuItem from '@material-ui/core/MenuItem';\n//import FormControl from '@material-ui/core/FormControl';\n//import Select from '@material-ui/core/Select';\n//import ContextErrorMessage from './dialogs/ContextErrorMessage';\n//import LoadingProgress from './dialogs/LoadingProgress';\n\n/**\n * Es wird ein einzelner Vorschlag für einen passenden Lernpartner oder /-gruppe mit allen not wendigen Informationen dargestellt\n * \n * Hierfür werden Profilname, Alter, Geschlecht, Semester, Lernfach und der Prozentsatz des Matches angezeigt\n * \n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass VorschlagListeEintrag extends Component {\n  constructor(props) {\n    super(props); // initiiere einen leeren state\n\n    this.expansionPanelStateChanged = () => {\n      this.props.onExpandedStateChange(this.props.vorschlag);\n    };\n\n    this.showProfilButtonClicked = event => {\n      event.stopPropagation();\n      this.setState({\n        showProfil: true\n      });\n    };\n\n    this.sendAnfrageButtonClicked = event => {\n      event.stopPropagation();\n      this.setState({\n        showAnfrageForm: true\n      });\n    };\n\n    this.getPerson = () => {\n      LernpartnerAPI.getAPI().getPerson(this.props.vorschlag.getmain_person_id()).then(personBO => this.setState({\n        person: personBO,\n        personName: personBO.name,\n        personVorname: personBO.vorname,\n        loadingInProgress: false,\n        error: null\n      })).catch(e => this.setState({\n        person: null,\n        personName: null,\n        personVorname: null,\n        loadingInProgress: false,\n        error: e\n      }));\n      this.setState({\n        loadingInProgress: true,\n        error: null\n      });\n    };\n\n    this.state = {\n      vorschlag: props.vorschlag,\n      //match: null,\n      profil: null,\n      person: null,\n      profilID: null,\n      personName: null,\n      personVorname: null,\n      showProfil: false,\n      showAnfrageForm: false,\n      loadingInProgress: false,\n      error: null\n    };\n  }\n  /** Handles onChange events of the underlying ExpansionPanel */\n\n\n  render() {\n    const {\n      classes,\n      expandedState\n    } = this.props;\n    const {\n      vorschlag,\n      profil,\n      profilID,\n      personName,\n      personVorname,\n      showProfil,\n      showAnfrageForm,\n      loadingInProgress,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        defaultExpanded: false,\n        expanded: expandedState,\n        onChange: this.expansionPanelStateChanged,\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 31\n          }, this),\n          id: `vorschlag${vorschlag.getId()}accountpanel-header`,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            justify: \"flex-start\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: classes.heading,\n                children: [personName, \", \", personVorname, \", \", vorschlag.getmatch()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                variant: \"text\",\n                size: \"small\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  onClick: this.showProfilButtonClicked,\n                  children: \"Profil ansehen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"secondary\",\n                  onClick: this.sendAnfrageButtonClicked,\n                  children: \"Kontaktanfrage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: 'textSecondary',\n                children: \"Profil und Kontaktanfrage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Profil, {\n          show: showProfil,\n          profil: profil\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AnfrageForm, {\n          show: showAnfrageForm,\n          profil: profil\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1)\n  },\n  content: {\n    margin: theme.spacing(1)\n  },\n  table: {\n    minWidth: 700\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n    textAlign: \"left\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  laden: {\n    padding: 0\n  },\n  breite: {\n    width: 220\n  }\n});\n/** PropTypes */\n\n\nVorschlagListeEintrag.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  vorschlag: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired\n};\nexport default withStyles(styles)(VorschlagListeEintrag);","map":{"version":3,"sources":["/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/VorschlagListeEintrag.js"],"names":["React","Component","PropTypes","LernpartnerAPI","withStyles","Typography","Accordion","AccordionSummary","AccordionDetails","Grid","Button","ButtonGroup","ExpandMoreIcon","VorschlagListeEintrag","constructor","props","expansionPanelStateChanged","onExpandedStateChange","vorschlag","showProfilButtonClicked","event","stopPropagation","setState","showProfil","sendAnfrageButtonClicked","showAnfrageForm","getPerson","getAPI","getmain_person_id","then","personBO","person","personName","name","personVorname","vorname","loadingInProgress","error","catch","e","state","profil","profilID","render","classes","expandedState","getId","heading","getmatch","styles","theme","root","width","marginTop","spacing","marginBottom","padding","content","margin","table","minWidth","formControl","textAlign","button","laden","breite","propTypes","object","isRequired","show","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'\n//import { withStyles } from '@material-ui/core';\n//import { withRouter } from 'react-router-dom';\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n//import InputLabel from '@material-ui/core/InputLabel';\n//import MenuItem from '@material-ui/core/MenuItem';\n//import FormControl from '@material-ui/core/FormControl';\n//import Select from '@material-ui/core/Select';\n//import ContextErrorMessage from './dialogs/ContextErrorMessage';\n//import LoadingProgress from './dialogs/LoadingProgress';\n\n/**\n * Es wird ein einzelner Vorschlag für einen passenden Lernpartner oder /-gruppe mit allen not wendigen Informationen dargestellt\n * \n * Hierfür werden Profilname, Alter, Geschlecht, Semester, Lernfach und der Prozentsatz des Matches angezeigt\n * \n */\n\nclass VorschlagListeEintrag extends Component {\n    constructor(props){\n        super(props);\n\n        // initiiere einen leeren state\n        this.state = {\n            vorschlag: props.vorschlag,\n            //match: null,\n            profil: null,\n            person: null,\n            profilID: null,\n            personName: null,\n            personVorname: null,\n            showProfil: false,\n            showAnfrageForm: false,\n            loadingInProgress: false,\n            error: null\n        };\n    }\n\n    /** Handles onChange events of the underlying ExpansionPanel */\n    expansionPanelStateChanged = () => {\n    this.props.onExpandedStateChange(this.props.vorschlag);\n    }\n    \n    //Handles the onClick event of the show profil button\n    showProfilButtonClicked = (event) => {\n      event.stopPropagation();\n      this.setState({\n        showProfil: true\n      });\n    }\n\n    /** Handles the onClick event of the send Anfrage button */\n    sendAnfrageButtonClicked = (event) => {\n      event.stopPropagation();\n      this.setState({\n        showAnfrageForm: true\n      });\n    }\n\n    // API Anbindung um Profil vom Backend zu bekommen \n    getPerson = () => {\n      LernpartnerAPI.getAPI().getPerson(this.props.vorschlag.getmain_person_id())\n      .then(personBO =>\n          this.setState({\n            person: personBO,\n            personName: personBO.name,\n            personVorname: personBO.vorname,\n            loadingInProgress: false,\n            error: null,\n          }))\n          .catch(e =>\n              this.setState({\n                person: null,\n                personName: null,\n                personVorname: null,\n                loadingInProgress: false,\n                error: e,\n              }));\n      this.setState({\n        loadingInProgress: true,\n        error: null\n      });\n    }\n\n\n    render(){\n\n          const { classes, expandedState } = this.props;\n          const {vorschlag, profil, profilID, personName, personVorname, showProfil, showAnfrageForm, loadingInProgress, error } = this.state;\n\n          return (\n            <div>\n              <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  id={`vorschlag${vorschlag.getId()}accountpanel-header`}\n                >\n                  <Grid container spacing={1} justify='flex-start' alignItems='center'>\n                    <Grid item>\n          <Typography variant='body1' className={classes.heading}>{personName}, {personVorname}, {vorschlag.getmatch()}\n                      </Typography>\n                    </Grid>\n                    <Grid item>\n                      <ButtonGroup variant='text' size='small'>\n                        <Button color='primary' onClick={this.showProfilButtonClicked}>\n                          Profil ansehen\n                        </Button>\n                        <Button color='secondary' onClick={this.sendAnfrageButtonClicked}>\n                          Kontaktanfrage\n                        </Button>\n                      </ButtonGroup>\n                    </Grid>\n                    <Grid item xs />\n                    <Grid item>\n                      <Typography variant='body2' color={'textSecondary'}>Profil und Kontaktanfrage</Typography>\n                    </Grid>\n                  </Grid>\n                </AccordionSummary>\n                <Profil show={showProfil} profil={profil}/>\n                <AnfrageForm show={showAnfrageForm} profil={profil}/>\n              </Accordion>\n            </div>\n          );\n        }\n}\n\n\nconst styles = theme => ({\n  root: {\n      width: '100%',\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n      padding: theme.spacing(1),\n  },\n  content: {\n      margin: theme.spacing(1),\n    },\n  table: {\n      minWidth: 700,\n    },\n  formControl: {\n      margin: theme.spacing(1),\n      minWidth: 200,\n      textAlign: \"left\"\n  },\n  button: {\n      margin: theme.spacing(1),\n      },\n  laden: {\n    padding: 0\n  },\n  breite: {\n    width: 220\n  }\n  });\n\n/** PropTypes */\nVorschlagListeEintrag.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  vorschlag: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired\n}\n\n\nexport default withStyles(styles)(VorschlagListeEintrag);"]},"metadata":{},"sourceType":"module"}