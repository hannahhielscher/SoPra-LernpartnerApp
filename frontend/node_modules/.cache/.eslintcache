[{"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/index.js":"1","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/App.js":"2","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/Theme.js":"3","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/firebaseconfig.js":"4","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/Profil.js":"5","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/GruppenListe.js":"6","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/layout/Header.js":"7","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/pages/SignIn.js":"8","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/LoadingProgress.js":"9","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ContextErrorMessage.js":"10","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/pages/About.js":"11","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/MeinProfil.js":"12","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernpartnerAPI.js":"13","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/KonversationListe.js":"14","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/RegistrierungForm.js":"15","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/LernfaecherForm.js":"16","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfileDropDown.js":"17","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/PersonBO.js":"18","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernvorliebenBO.js":"19","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/LerngruppeBO.js":"20","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/GruppenListeEintrag.js":"21","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/ProfilBO.js":"22","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/NachrichtBO.js":"23","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeChatBO.js":"24","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernfachBO.js":"25","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeGruppeBO.js":"26","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/MeinProfilForm.js":"27","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/VorschlagBO.js":"28","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/KonversationBO.js":"29","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/KonversationListeEintrag.js":"30","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/VorschlagListe.js":"31","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/index.js":"32","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/BusinessObject.js":"33","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/NamedBusinessObject.js":"34","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppeVerlassenDialog.js":"35","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/Nachricht.js":"36","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/VorschlagListeEintrag.js":"37","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/NachrichtenListeEintrag.js":"38","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppenBearbeitenForm.js":"39","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppenForm.js":"40","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/AnfrageForm.js":"41","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/MultiSelect.js":"42"},{"size":146,"mtime":1624026895222,"results":"43","hashOfConfig":"44"},{"size":6246,"mtime":1625075757303,"results":"45","hashOfConfig":"44"},{"size":1706,"mtime":1624026895215,"results":"46","hashOfConfig":"44"},{"size":579,"mtime":1624088008253,"results":"47","hashOfConfig":"44"},{"size":6022,"mtime":1624904619467,"results":"48","hashOfConfig":"44"},{"size":5487,"mtime":1624623262456,"results":"49","hashOfConfig":"44"},{"size":1839,"mtime":1624808503781,"results":"50","hashOfConfig":"44"},{"size":1816,"mtime":1624026895222,"results":"51","hashOfConfig":"44"},{"size":862,"mtime":1624026895220,"results":"52","hashOfConfig":"44"},{"size":2113,"mtime":1624026895219,"results":"53","hashOfConfig":"44"},{"size":844,"mtime":1624256670072,"results":"54","hashOfConfig":"44"},{"size":10786,"mtime":1625079003260,"results":"55","hashOfConfig":"44"},{"size":44135,"mtime":1625075757304,"results":"56","hashOfConfig":"44"},{"size":4298,"mtime":1625075757309,"results":"57","hashOfConfig":"44"},{"size":12593,"mtime":1625075757316,"results":"58","hashOfConfig":"44"},{"size":3922,"mtime":1624808503780,"results":"59","hashOfConfig":"44"},{"size":3271,"mtime":1624026895220,"results":"60","hashOfConfig":"44"},{"size":2525,"mtime":1624645622713,"results":"61","hashOfConfig":"44"},{"size":3591,"mtime":1624904619456,"results":"62","hashOfConfig":"44"},{"size":1027,"mtime":1624904619456,"results":"63","hashOfConfig":"44"},{"size":9111,"mtime":1625079259450,"results":"64","hashOfConfig":"44"},{"size":1373,"mtime":1625075757306,"results":"65","hashOfConfig":"44"},{"size":1315,"mtime":1624026895216,"results":"66","hashOfConfig":"44"},{"size":1231,"mtime":1625075757307,"results":"67","hashOfConfig":"44"},{"size":766,"mtime":1624808503771,"results":"68","hashOfConfig":"44"},{"size":1034,"mtime":1624904619459,"results":"69","hashOfConfig":"44"},{"size":22041,"mtime":1625079120752,"results":"70","hashOfConfig":"44"},{"size":1447,"mtime":1624808503773,"results":"71","hashOfConfig":"44"},{"size":813,"mtime":1624808503770,"results":"72","hashOfConfig":"44"},{"size":3500,"mtime":1625075757310,"results":"73","hashOfConfig":"44"},{"size":5203,"mtime":1625075757312,"results":"74","hashOfConfig":"44"},{"size":433,"mtime":1624904619460,"results":"75","hashOfConfig":"44"},{"size":761,"mtime":1624026895215,"results":"76","hashOfConfig":"44"},{"size":375,"mtime":1624026895216,"results":"77","hashOfConfig":"44"},{"size":3919,"mtime":1624623262461,"results":"78","hashOfConfig":"44"},{"size":7791,"mtime":1625075757311,"results":"79","hashOfConfig":"44"},{"size":8565,"mtime":1625075757312,"results":"80","hashOfConfig":"44"},{"size":5768,"mtime":1624815011710,"results":"81","hashOfConfig":"44"},{"size":15159,"mtime":1624906107665,"results":"82","hashOfConfig":"44"},{"size":14955,"mtime":1625075757314,"results":"83","hashOfConfig":"44"},{"size":11360,"mtime":1625075757313,"results":"84","hashOfConfig":"44"},{"size":1316,"mtime":1625078609252,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1ufahl7",{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/index.js",[],["180","181"],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/App.js",["182","183","184"],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/Theme.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/firebaseconfig.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/Profil.js",["185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Typography, Button, TableContainer, Table, TableHead, TableCell, Paper, TableRow, TableBody, Link, Grid } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport {LernpartnerAPI} from '../api';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\n\n\nclass Profil extends Component {\n\n    constructor(props){\n        super(props);\n\n        // initiiere einen leeren state\n        this.state = {\n            user: props.user,\n            profil: null,\n            lernvorlieben: null,\n            gruppe: false,\n            tageszeiten: null,\n            tage: null,\n            frequenz: null,\n            lernart: null,\n            gruppengroesse: null,\n            lernort: null,\n            gruppe: null,\n            personVorname: null,\n            personName: null,\n            personSemester: 0,\n            personStudiengang: null,\n            lerngruppe: false,\n            personProfilID: null,\n            personLernfaecher: null,\n            personLernvorliebenID: null,\n            loadingInProgress: false,\n            loadingError: null,\n        };\n    }\n\n\n\n/**   showVorschlagButtonClick = (event) => {\n      event.stopPropagation();\n      this.setState({\n        showVorschlag: true\n      });\n    }**/\n\n\n\n/**\n    // API Anbindung um Profil vom Backend zu bekommen\n    getPerson = () => {\n      LernpartnerAPI.getAPI().getPerson(this.props.person.getID())\n      .then(personBO =>\n          this.setState({\n            person: personBO,\n            personName: personBO.name,\n            personVorname: personBO.vorname,\n            personSemester: personBO.semester,\n            personStudiengang: personBO.studiengang,\n            personProfilID: personBO.personenprofil,\n            loadingInProgress: false,\n            error: null,\n          }))\n          .catch(e =>\n              this.setState({\n            person: null,\n            personName: null,\n            personVorname: null,\n            personSemester: null,\n            personStudiengang: null,\n            personProfilID: null,\n            loadingInProgress: false,\n            error: e,\n              }));\n      this.setState({\n        loadingInProgress: true,\n        error: null\n      });\n    }\n*/\n\n     getProfil = () => {\n    LernpartnerAPI.getAPI().getProfil(this.props.user.id).then(profilBO =>\n      this.setState({\n            profil: profilBO,\n            gruppe: profilBO.gruppe,\n            //profilLernfaecher: profilBO.lernfaecher,\n            profilLernvorliebenID: profilBO.lernvorlieben,\n            loadingInProgress: false,\n            error: null\n      })).catch(e =>\n        this.setState({ // Reset state with error from catch\n          profil: null,\n          gruppe: null,\n          //profilLernfaecher: null,\n          profilLernvorliebenID: null,\n          loadingInProgress: false,\n          error: e,\n        })\n      );\n\n    // set loading to true\n    this.setState({\n      loadingInProgress: true,\n      loadingError: null\n    });\n  }\n\n\n     getLernvorlieben = () => {\n    LernpartnerAPI.getAPI().getLernvorlieben(this.props.user.profil).then(lernvorliebenBO =>\n      this.setState({\n            lernvorlieben: lernvorliebenBO,\n            tageszeiten: lernvorliebenBO.tageszeiten_bez,\n            tage: lernvorliebenBO.tage_bez,\n            frequenz: lernvorliebenBO.frequenz_bez,\n            lernart: lernvorliebenBO.lernart_bez,\n            gruppengroesse: lernvorliebenBO.gruppengroesse_bez,\n            lernort: lernvorliebenBO.lernort_bez,\n            loadingInProgress: false,\n            error: null\n      })).catch(e =>\n        this.setState({ // Reset state with error from catch\n          lernvorlieben: null,\n          loadingInProgress: false,\n          error: e,\n        })\n      );\n\n    // set loading to true\n    this.setState({\n      loadingInProgress: true,\n      loadingError: null\n    });\n  }\n\n\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\n    componentDidMount() {\n        this.getProfil();\n        this.getLernvorlieben();\n  }\n\n\n   /** Renders the component */\n  render() {\n    const { classes, show } = this.props;\n    // Use the states customer\n    const { user, profil, lernvorlieben, tageszeiten, tage, frequenz, lernart, lernort, gruppengroesse, gruppe, personLernvorliebenID, loadingInProgress, error} = this.state;\n    console.log(user)\n\n    // console.log(this.props);\n    return (\n      <div className={classes.root}>\n            {\n            gruppe ?\n                <>\n                    <b> {user.vorname} {user.name} </b> <br />\n                    <b>Semester: </b> {user.semester} <br />\n                    <b>Studiengang: </b> {user.studiengang} <br />\n                    <b>Alter: </b> {user.alter} <br />\n                    <b>Geschlecht: </b> {user.geschlecht} <br />\n\n                </>\n\n                :\n                <>\n                    <b> Profilinformationen: </b> <br /><br />\n                    Tageszeiten: {tageszeiten}<br />\n                    Tage: {tage}<br />\n                    Frequenz: {frequenz}<br />\n                    Lernart: {lernart}<br />\n                    Lernort: {lernort}\n                </>\n           }\n\n\n\n\n\n      </div>\n    );\n  }\n}\n\nconst styles = theme => ({\n  root: {\n      width: '100%',\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n      padding: theme.spacing(1),\n  },\n  content: {\n      margin: theme.spacing(1),\n    },\n  table: {\n      minWidth: 700,\n    },\n  formControl: {\n      margin: theme.spacing(1),\n      minWidth: 200,\n      textAlign: \"left\"\n  },\n\n  laden: {\n    padding: 0\n  },\n  breite: {\n    width: 220\n  }\n});\n\n\n/** PropTypes */\nProfil.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired\n}\n\n\nexport default withStyles(styles)(Profil);\n\n","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/GruppenListe.js",["207","208","209","210","211","212"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'\nimport { withStyles, Button, TextField, InputAdornment, IconButton, Grid, Typography } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\nimport GruppenListeEintrag from './GruppenListeEintrag';\n//import SaveIcon from '@material-ui/icons/Save';\n//import Table from '@material-ui/core/Table';\n//import TableBody from '@material-ui/core/TableBody';\n//import TableCell from '@material-ui/core/TableCell';\n//import TableContainer from '@material-ui/core/TableContainer';\n//import TableHead from '@material-ui/core/TableHead';\n//import TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\n\n/**\n * Es werden alle Vorschläge des aktuell eingeloggten Studenten angezeigt\n *\n * @see See [VorschlagListeEintrag](#vorschaglisteeintrag)\n *\n * Hierfür werden alle Vorschläge des aktuell eingeloggten Student geladen und in die Componente VorschlagListeEintrag gemappt\n *\n */\n\n\nclass GruppenListe extends Component {\n\n    constructor(props){\n        super(props);\n\n        let expandedID = null;\n\n        if (this.props.location.expandLerngruppe) {\n          expandedID = this.props.location.expandLerngruppe.getID();\n        }\n\n        // Init an empty state\n        this.state = {\n          lerngruppen: [],\n          error: null,\n          loadingInProgress: false,\n          expandedLerngruppeID: expandedID,\n          //showCustomerForm: false\n        };\n\n    }\n\n    /** Fetches all LerngruppenBOs from the backend */\n    getLerngruppen = () => {\n        LernpartnerAPI.getAPI().getLerngruppe(this.props.currentPerson.id)\n            .then(lerngruppeBOs =>\n                this.setState({               // Set new state when LerngruppeBOs have been fetched\n                    lerngruppen: lerngruppeBOs,\n                    //name: lerngruppeBO.name\n                    loadingInProgress: false,   // disable loading indicator\n                    error: null\n                })).catch(e =>\n                    this.setState({             // Reset state with error from catch\n                        lerngruppen: [],\n                        loadingInProgress: false, // disable loading indicator\n                        error: e\n                    })\n                );\n\n        // set loading to true\n        this.setState({\n            loadingInProgress: true,\n            error: null\n        });\n    }\n\n    /**\n     * Handles onExpandedStateChange events from the GruppeListeEintrag component. Toggels the expanded state of\n     * the GruppeListeEintrag of the given LerngruppeBO.\n     *\n     * @param {lerngruppe} LerngruppeBO of the GruppeListeEintrag to be toggeled\n     */\n    onExpandedStateChange = lerngruppe => {\n        // console.log(vorschlagID);\n        // Set expandend Lerngruppe Eintrag to null by default\n        let newID = null;\n\n        // If same lerngruppe entry is clicked, collapse it else expand a new one\n        if (lerngruppe.getID() !== this.state.expandedLerngruppeID) {\n        // Expand the lerngruppe entry with lerngruppeID\n        newID = lerngruppe.getID();\n        }\n        // console.log(newID);\n        this.setState({\n        expandedLerngruppeID: newID,\n        });\n    }\n\n   /**\n   * Handles lerngruppeVerlassen events from the GruppenListeEintrag component\n   */\n    lerngruppeVerlassen = () => {\n        this.getLerngruppen();\n        this.setState({\n            lerngruppen: this.state.lerngruppen,\n            //showCustomerForm: false\n        });\n    }\n\n    /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\n    componentDidMount() {\n        this.getLerngruppen();\n    }\n\n    render() {\n        const { classes, currentPerson } = this.props;\n        const { lerngruppen, personID, expandedLerngruppeID, loadingInProgress, error }  = this.state;\n\n        return (\n            <div className={classes.root}>\n                <Grid container spacing={1} justify='flex-start' alignItems='center'>\n                    <Grid item >\n                        <Typography>\n                            <h1>Lerngruppen</h1>\n                        </Typography>\n                    </Grid>\n                </Grid>\n                {\n                    lerngruppen.map(lerngruppe =>\n                    <GruppenListeEintrag key={lerngruppe.getID()} lerngruppe={lerngruppe} currentPerson={currentPerson} expandedState={expandedLerngruppeID === lerngruppe.getID()}\n                      onExpandedStateChange={this.onExpandedStateChange}\n                      onTeilnahmeGruppeDeleted={this.lerngruppeVerlassen}\n                    />)\n                }\n                <LoadingProgress show={loadingInProgress} />\n                <ContextErrorMessage error={error} contextErrorMsg={`Sorry, deine Lerngruppen konnten nicht geladen werden!`} onReload={this.getLerngruppen} />\n            </div>\n        );\n      }\n    }\n\n/** Component specific styles */\nconst styles = theme => ({\n  root: {\n      width: '100%',\n  },\n  content: {\n      margin: theme.spacing(1),\n  }\n});\n\n/** PropTypes */\nGruppenListe.propTypes = {\n    /** @ignore */\n    classes: PropTypes.object.isRequired,\n    /** @ignore */\n    location: PropTypes.object.isRequired,\n}\n\n\nexport default withRouter(withStyles(styles)(GruppenListe));","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/layout/Header.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/pages/SignIn.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/LoadingProgress.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ContextErrorMessage.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/pages/About.js",["213"],"import React from 'react'\nimport { makeStyles, Paper, Typography, Link } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1)\n  },\n  content: {\n    margin: theme.spacing(1),\n  }\n}));\n\n/**\n * Shows the about page with the impressum\n */\n\n\nfunction About() {\n\n    const classes = useStyles();\n  \n    return (\n      <Paper elevation={0} className={classes.root}>\n        <div className={classes.content}>\n          <Typography variant='h6'>\n            App zum Auffinden von Lernpartnern\n          </Typography>\n          <Typography variant='body2'>\n            © Hochschule der Medien 2020, all rights reserved.\n          </Typography>\n        </div>\n      </Paper>\n    )\n  }\n  \n  export default About;","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/MeinProfil.js",["214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernpartnerAPI.js",["230"],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/KonversationListe.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/RegistrierungForm.js",["231","232"],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/LernfaecherForm.js",["233","234"],"import React, { Component } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport { LernpartnerAPI } from '../../api';\nimport VorschlagListe from '../VorschlagListe';\nimport ContextErrorMessage from './ContextErrorMessage';\nimport LoadingProgress from './LoadingProgress';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n  \nclass LernfaecherForm extends Component {\n  \n  constructor(props){\n    super(props);\n\n    // initiiere einen leeren state\n    this.state = {\n        profil: null,\n        lernfaecher: [],\n        lernfach: null,\n        showVorschlagListe: false,\n        loadingInProgress: false,\n        error: null\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({lernfach: event.target.value});\n    \n  }\n\n  getProfil = () => {\n    LernpartnerAPI.getAPI().getProfil(this.props.currentPerson.getprofil())\n    .then(profilBO =>\n        this.setState({\n          profil: profilBO,\n          lernfaecher: profilBO.lernfaecher,\n          loadingInProgress: false,\n          error: null,\n        }))\n        .catch(e =>\n            this.setState({\n              profil: null,\n              lernfaecher: null,\n              loadingInProgress: false,\n              error: e,\n            }));\n        this.setState({\n          loadingInProgress: true,\n          error: null\n        });\n  }\n\n  getLernfaecher = () => {\n    LernpartnerAPI.getAPI().getLernfaecherByProfil(this.props.currentPerson.getprofil())\n    .then(lernfaecherBOs =>\n      this.setState({\n            lernfaecher: lernfaecherBOs,\n            lernfaechernamen: lernfaecherBOs.map(lernfach=> lernfach.bezeichnung),\n            loadingInProgress: false,\n            error: null\n      }))\n      .catch(e =>\n        this.setState({ // Reset state with error from catch\n          lernfaecher: null,\n          loadingInProgress: false,\n          error: e,\n        })\n      );\n\n    // set loading to true\n    this.setState({\n      loadingInProgress: true,\n      loadingError: null\n    });\n  }\n\n  //Handles the onClick event of the show profil button\n  bestaetigenButtonClicked = (event) => {\n    this.setState({\n      showVorschlagListe: true\n    });\n  }\n\n  componentDidMount() {\n    this.getLernfaecher();\n  }\n\n  render() {\n    const { classes, currentPerson } = this.props;\n    const { profil, lernfaecher, lernfach, showVorschlagListe, loadingInProgress, error } = this.state;\n    \n    console.log(profil)\n    console.log(showVorschlagListe)\n    return (\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-native-simple\">Lernfach auswählen:</InputLabel>\n          <Select\n            native\n            value= {lernfach}\n            onChange={this.handleChange}\n          >\n           {lernfaecher.map(lernfach =>\n            <option key={lernfach.id} value={lernfach.id}>{lernfach.bezeichnung}</option>\n          )};\n           \n          </Select>\n        </FormControl>\n        <Button color=\"primary\" onClick= {this.bestaetigenButtonClicked}>Bestätigen</Button>\n        <VorschlagListe show={showVorschlagListe} currentPerson={currentPerson} lernfach={lernfach} />\n        <LoadingProgress show={loadingInProgress}></LoadingProgress>\n        <ContextErrorMessage error={error} contextErrorMsg = {'Hier ist ein Fehler aufgetreten'} onReload={this.getProfil} />\n      </div>\n    );\n  } \n}\n\nexport default withRouter(withStyles(useStyles)(LernfaecherForm));","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfileDropDown.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/PersonBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernvorliebenBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/LerngruppeBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/GruppenListeEintrag.js",["235","236","237","238","239","240","241","242"],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/ProfilBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/NachrichtBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeChatBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernfachBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeGruppeBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/MeinProfilForm.js",["243","244","245","246","247","248","249","250","251","252"],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/VorschlagBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/KonversationBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/KonversationListeEintrag.js",["253","254","255","256"],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/VorschlagListe.js",["257","258","259","260","261","262"],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/index.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/BusinessObject.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/NamedBusinessObject.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppeVerlassenDialog.js",["263"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ContextErrorMessage from './ContextErrorMessage';\nimport LoadingProgress from './LoadingProgress';\nimport LernpartnerAPI from '../../api/LernpartnerAPI'\n\n\nclass GruppeVerlassenDialog extends Component {\n\n  constructor(props) {\n    super(props);\n\n    // Init the state\n    this.state = {\n      verlassenInProgress: false,\n      verlassenError: null\n    };\n  }\n\n  /** Gruppe verlassen */\n  verlasseGruppe = () => {\n    LernpartnerAPI.getAPI().deleteTeilnahmeGruppe(this.props.teilnahmeGruppe.getID())\n    .then(teilnahmeGruppe => {\n      this.setState({\n        verlassenInProgress: false,              // disable loading indicator\n        verlassenError: null                     // no error message\n      });\n      this.props.onClose(this.props.teilnahmeGruppe);  // call the parent with the deleted customer\n    }).catch(e =>\n      this.setState({\n        verlassenInProgress: false,              // disable loading indicator\n        verlassenError: e                        // show error message\n      })\n    );\n\n    // set loading to true\n    this.setState({\n      verlassenInProgress: true,                 // show loading indicator\n      verlassenError: null                       // disable error message\n    });\n  }\n\n  /** Handles the close / cancel button click event */\n  handleClose = () => {\n    // console.log(event);\n    this.props.onClose(null);\n  }\n\n  /** Renders the component */\n  render() {\n    const { classes, teilnahmeGruppe, lerngruppeID, show } = this.props;\n    const { verlassenInProgress, verlassenError } = this.state;\n    //console.log(verlassenInProgress)\n    console.log(teilnahmeGruppe)\n    //console.log(teilnahmeGruppe.id)\n\n    return (\n      show ?\n        <Dialog open={show} onClose={this.handleClose}>\n          <DialogTitle id='delete-dialog-title'>Gruppe verlassen\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\n              <CloseIcon />\n            </IconButton>\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              <p>Möchtest du wirklich die Gruppe verlassen?</p>\n              <p style={{color: \"red\", fontSize: 14}}>!!!Achtung: Wenn du die Gruppe verlässt, verlässt du auch automatisch den Chat!!!</p>\n            </DialogContentText>\n            <LoadingProgress show={verlassenInProgress} />\n            <ContextErrorMessage error={verlassenError} contextErrorMsg={`Die Gruppe konnte nicht verlassen werden.`}\n              onReload={this.verlasseGruppe} />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color='secondary'>\n              Abbrechen\n            </Button>\n            <Button variant='contained' onClick={this.verlasseGruppe} color='primary'>\n              Verlassen\n            </Button>\n          </DialogActions>\n        </Dialog>\n        : null\n    );\n  }\n}\n\n\n/** Component specific styles */\nconst styles = theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  }\n});\n\n/** PropTypes */\nGruppeVerlassenDialog.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  /** The CustomerBO to be deleted */\n  teilnahmeGruppe: PropTypes.object.isRequired,\n  /** If true, the dialog is rendered */\n  show: PropTypes.bool.isRequired,\n  /**\n   * Handler function which is called, when the dialog is closed.\n   * Sends the deleted CustomerBO as parameter or null, if cancel was pressed.\n   *\n   * Signature: onClose(CustomerBO customer);\n   */\n  onClose: PropTypes.func.isRequired,\n}\n\nexport default withStyles(styles)(GruppeVerlassenDialog);\n","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/Nachricht.js",["264"],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/VorschlagListeEintrag.js",["265","266","267","268","269"],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/NachrichtenListeEintrag.js",["270","271","272","273","274"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'\n//import { withStyles } from '@material-ui/core';\n//import { withRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core';\n//import { Button, ButtonGroup } from '@material-ui/core';\n//import TextField from \"@material-ui/core/TextField\";\n\n//import InputLabel from '@material-ui/core/InputLabel';\n//import MenuItem from '@material-ui/core/MenuItem';\n//import FormControl from '@material-ui/core/FormControl';\n//import Select from '@material-ui/core/Select';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\n\nimport Nachricht from './Nachricht'\n//import NachrichtForm from './NachrichtForm'\n//import GruppeForm from './GruppeForm'\n\n/**\n * Es wird eine einzelne Nachricht von einer Person  dargestellt\n *\n * \n * Hierfür wird der Inhalt der Nachricht angezeigt \n * \n */\n\nclass NachrichtenListeEintrag extends Component {\n    constructor(props){\n        super(props);\n\n        // initiiere einen leeren state\n        this.state = {\n            nachrichten: [], //Liste mit den IDs aller Nachrichten \n            konversation_ID: null,  \n            inhalt: null, \n            person_id: null,\n            personName: null,\n            personVorname: null,\n            loadingInProgress: false,\n            error: null\n        };\n    }\n\n\n    \n    //open the onClick event of the show Nachricht button\n    showNachrichtButtonClicked = (event) => {\n      event.stopPropagation();\n      this.setState({\n        showNachrichtForm: true\n      });\n    }\n\n     //ruft die getNachrichten() Funktion in den Props auf\n     //getNachrichten = () => {\n      //this.props.getNachrichten(); }\n\n\n      // API Anbindung um Nachricht vom Backend zu bekommen \n    getNachrichten = () => {\n        LernpartnerAPI.getAPI().getNachrichten(this.props.nachrichten)\n        .then(nachrichtBO =>\n            this.setState({\n              nachrichten: nachrichtBO,\n              inhalt: nachrichtBO.inhalt,\n              loadingInProgress: false,\n              error: null,\n            })).then(()=>{\n              this.getNachrichten()\n            })\n            .catch(e =>\n                this.setState({\n                  nachrichten: null,\n                  inhalt: null,\n                  loadingInProgress: false,\n                  error: e,\n                }));\n        this.setState({\n          loadingInProgress: true,\n          error: null\n        });\n      }\n\n      // API Anbindung um Person vom Backend zu bekommen \n    getPerson = () => {\n      LernpartnerAPI.getAPI().getPerson(this.props.nachricht.getmain_person_id())\n      .then(personBO =>\n          this.setState({\n            person: personBO,\n            personName: personBO.name,\n            personVorname: personBO.vorname,\n            loadingInProgress: false,\n            error: null,\n          }))\n          .catch(e =>\n              this.setState({\n                person: null,\n                personName: null,\n                personVorname: null,\n                loadingInProgress: false,\n                error: e,\n              }));\n      this.setState({\n        loadingInProgress: true,\n        error: null\n      });\n    }\n\n\n   \n      /** Handles onChange events of the underlying ExpansionPanel */\n    expansionPanelStateChanged = () => {\n      this.props.onExpandedStateChange(this.props.nachricht);\n    }\n\n      /** Handles the onClick event of the delete nachricht button */\n    loescheNachrichtButtonClicked = (event) => {\n      event.stopPropagation();\n      this.setState({\n          showNachrichtLoeschenDialog: true\n      });\n    }\n\n     /** Handles the onClose event of the LoescheNachrichtDialog */\n    loescheNachrichtDialogClosed = (nachricht) => {\n    // if nachricht is not null, delete it\n      if (nachricht) {\n        this.props.onNachrichtDeleted(nachricht);\n    };\n\n     // Don´t show the dialog\n    this.setState({\n      showNachrichtLoeschenDialog: false\n    });\n    }\n\n       // Lifecycle methode, wird aufgerufen wenn componente in den DOM eingesetzt wird\n    componentDidMount() {\n        this.getNachrichten();\n    }\n\n      render() {\n        const { classes, currentperson } = this.props;\n        const {nachrichten, inhalt, konversation_ID, personName, personVorname, expandedNachrichtID, loadingInProgress, error} = this.state;\n\n        return(\n          <div>\n                  {\n                      nachrichten ?\n                      <>\n                      {\n                          nachrichten.map(nachricht =>\n                            <NachrichtenListeEintrag key={nachricht.getID()} nachricht={nachrichten} personName={personVorname + \" \" +personVorname} inhalt={inhalt} expandedState={expandedNachrichtID === nachricht.getID()}\n                              onExpandedStateChange={this.onExpandedStateChange}\n                            />)\n                      }\n                      </>\n                      :\n                      <></>\n                  }\n         \n          <LoadingProgress show={loadingInProgress} />\n          <ContextErrorMessage error={error} contextErrorMsg = {'Deine Nachricht konnte nicht geladen werden'} onReload={this.getNachrichten} /> \n          \n        </div>\n        )\n      }\n}\n\nconst styles = (theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    margin: 10,\n  },\n});\n  \n  /** PropTypes */\n  NachrichtenListeEintrag.propTypes = {\n    /** @ignore */\n    classes: PropTypes.object.isRequired,\n    NachrichtListeEintrag: PropTypes.object.isRequired,\n    show: PropTypes.bool.isRequired\n  }\n  \n  \n  export default withStyles(styles)(NachrichtenListeEintrag);",["275","276"],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppenBearbeitenForm.js",["277","278","279","280","281"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Card,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    } from '@material-ui/core';\n\nimport { LernpartnerAPI } from '../../api';\nimport { withRouter } from 'react-router-dom';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ContextErrorMessage from './ContextErrorMessage';\nimport LoadingProgress from './LoadingProgress';\n\n\n/**\n * Dieses Form zeigt ein Dialog zum erstellen/updaten von ProjektBO's. Falls ein Projekt bereits besteht wird das Formular als edit konfiguriert.\n * Falls das Projekt Objekt null ist wird das Formular zum erstellen eines PojektBO's konfiguriert.\n * Dafuer wird auf die API zugegriffen (Backend zugriff)\n *\n * @see See Matieral-UIs [Dialog] (https://material-ui.com/components/dialogs)\n */\n\nclass GruppenBearbeitenForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        //initiiere den state\n        this.state = {\n\n            lerngruppe: this.props.lerngruppe,\n            lernvorlieben: this.props.lernvorlieben,\n            name: null,\n            nameValidationFailed: false,\n            nameEdited: false,\n\n\n            tageszeiten: null,\n            tageszeitenValidationFailed: false,\n            tageszeitenEdited: false,\n\n            tage: null,\n            tageValidationFailed: false,\n            tageEdited: false,\n\n            frequenz: null,\n            frequenzValidationFailed: false,\n            frequenzEdited: false,\n\n            lernart: null,\n            lernartValidationFailed: false,\n            lernartEdited: false,\n\n            gruppengroesse: null,\n            gruppengroesseValidationFailed: false,\n            gruppengroesseEdited: false,\n\n            lernort: null,\n            lernortValidationFailed: false,\n            lernortEdited: false,\n\n            lernfaecher: null,\n            lernfaecherValidationFailed: false,\n            lernfaecherEdited: false,\n\n            updatingError: null,\n            updatingInProgress: false,\n\n\n        };\n        // State speichern falls cancel\n        this.baseState = this.state;\n        this.handleChangeTageszeiten = this.handleChangeTageszeiten.bind(this);\n        this.handleChangeTage = this.handleChangeTage.bind(this);\n        this.handleChangeFrequenz = this.handleChangeFrequenz.bind(this);\n        this.handleChangeLernart = this.handleChangeLernart.bind(this);\n        this.handleChangeGruppengroesse = this.handleChangeGruppengroesse.bind(this);\n        this.handleChangeLernort = this.handleChangeLernort.bind(this);\n        this.handleChangeLernfaecher = this.handleChangeLernfaecher.bind(this);\n\n    }\n\n\n\n    /** Updates the person */\n    updatenGruppe = () => {\n        let lerngruppe = this.props.lerngruppe;\n        lerngruppe.id = this.state.lerngruppe.id\n        lerngruppe.name = this.state.name\n        lerngruppe.profil = this.state.lerngruppe.profil\n\n        LernpartnerAPI.getAPI().updateLerngruppe(this.state.lerngruppe.id, this.state.name, this.state.lerngruppe.profil).then(lerngruppe => {\n            // Backend call sucessfull\n            // reinit the dialogs state for a new empty customer\n            this.setState(this.baseState);\n            this.props.onClose(lerngruppe); // call the parent with the customer object from backend\n        }).catch(e =>\n            this.setState({\n                updatingInProgress: false,    // disable loading indicator\n                updatingError: e              // show error message\n            })\n        );\n\n        // set loading to true\n        this.setState({\n            updatingInProgress: true,       // show loading indicator\n            updatingError: null             // disable error message\n      });\n    }\n\n\n\n\n  /** Updates the person */\n    updatenLernvorlieben = () => {\n        let lernvorlieben = this.props.lernvorlieben;\n        lernvorlieben.tageszeiten_id = this.state.tageszeiten\n        lernvorlieben.tage_id = this.state.tage\n        lernvorlieben.frequenz_id = this.state.frequenz\n        lernvorlieben.lernart_id = this.state.lernart\n        lernvorlieben.gruppengroesse_id = this.state.gruppengroesse\n        lernvorlieben.lernort_id = this.state.lernort\n\n        LernpartnerAPI.getAPI().updateLernvorlieben(lernvorlieben.id, this.state.tageszeiten, this.state.tage, this.state.frequenz, this.state.lernart, this.state.gruppengroesse, this.state.lernort)\n        .then(lernvorlieben => {\n            // Backend call sucessfull\n            // reinit the dialogs state for a new empty customer\n            this.setState(this.baseState);\n            this.props.onClose(lernvorlieben); // call the parent with the customer object from backend\n        }).catch(e =>\n            this.setState({\n                updatingInProgress: false,    // disable loading indicator\n                updatingError: e              // show error message\n            })\n        );\n\n        // set loading to true\n        this.setState({\n            updatingInProgress: true,       // show loading indicator\n            updatingError: null             // disable error message\n      });\n    }\n\n\n\t/**\n\t * Handles the click event of the sign in button an calls the prop onSignIn handler\n\n\thandleSignInButtonClicked = () => {\n\t\tthis.props.onSignIn();\n\t}\n    */\n   /** Handles value changes of the forms textfields and validates them */\n    textFieldValueChange = (event) => {\n        const value = event.target.value;\n\n        let error = false;\n        if (value.trim().length === 0) {\n        error = true;\n        }\n\n        this.setState({\n        [event.target.id]: event.target.value,\n        [event.target.id + 'ValidationFailed']: error,\n        [event.target.id + 'Edited']: true\n        });\n    }\n\n    //Setzen der Werte aus der Validierung\n    setStateValueChange(event, error) {\n      this.setState({\n          [event.target.id]: event.target.value,\n          [event.target.id + 'ValidationFailed']: error,\n          [event.target.id + 'Edited']: true\n      });\n  }\n\n    // Validierung der Textfeldaenderungen nur numerische Werte\n    numberValueChange = (event) => {\n        const value = event.target.value;\n        const re = /^[0-9]{1,10}$/;\n\n        let error = false;\n        if (value.trim().length === 0) {\n            error = true;\n        }\n        if (re.test(event.target.value) === false) {\n            error = true;\n        }\n        this.setStateValueChange(event, error);\n    }\n\n    //Setzen des Status, bei schließen des Dialogs\n      handleClose = () => {\n        this.setState(this.baseState);\n        this.props.onClose();\n    }\n\n\n    handleChangeTageszeiten(event) {\n      this.setState({tageszeiten: event.target.value});\n    }\n\n    handleChangeTage(event) {\n      this.setState({tage: event.target.value});\n    }\n\n    handleChangeFrequenz(event) {\n      this.setState({frequenz: event.target.value});\n    }\n\n    handleChangeLernart(event) {\n      this.setState({lernart: event.target.value});\n    }\n\n    handleChangeGruppengroesse(event) {\n      this.setState({gruppengroesse: event.target.value});\n    }\n\n    handleChangeLernort(event) {\n      this.setState({lernort: event.target.value});\n    }\n\n    handleChangeLernfaecher(event) {\n      this.setState({lernfaecher: event.target.value});\n    }\n\n\n\n\t/** Renders the sign in page, if user objext is null */\n\t/** Renders the component */\n    render() {\n        const { classes, show, currentPerson, lerngruppe, lernvorlieben } = this.props;\n        console.log()\n        const { name, nameValidationFailed, tageszeiten, tageszeitenValidationFailed, tage, tageValidationFailed, frequenz, frequenzValidationFailed, lernart, lernartValidationFailed, gruppengroesse, gruppengroesseValidationFailed,\n          lernort, lernortValidationFailed, lernfaecher, lernfaecherValidationFailed, addingInProgress, updatingInProgress, updatingError} = this.state;\n\n\n        let title = 'Registriere dich zuerst, bevor du die App nutzen kannst!';\n        let header = 'Bitte gib deine neuen Daten ein:';\n\n        return (\n            show ?\n            <Dialog open={show}>\n              <DialogTitle id='form-dialog-title'>{title}\n                  <IconButton className={classes.closeButton} onClick={this.handleClose}>\n                      <CloseIcon />\n                  </IconButton>\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  {header}\n                </DialogContentText>\n                <form className={classes.root} noValidate autoComplete='off'>\n\n                  <TextField className={classes.textfield} autoFocus type='text' required fullWidth margin='normal' id='name' label='Nachname:' value={name}\n                    onChange={this.textFieldValueChange} error={nameValidationFailed}\n                    helperText={nameValidationFailed ? 'The last name must contain at least one character' : ' '} />\n                  <br/>\n                   <FormControl className={classes.formControl}>\n                            <InputLabel>Welche Tageszeit präferierst du?</InputLabel>\n                             <Select required error={tageszeitenValidationFailed} value={tageszeiten} onChange={this.handleChangeTageszeiten}>\n                                <MenuItem value='1'>Morgens</MenuItem>\n                                <MenuItem value='2'>Mittags</MenuItem>\n                                <MenuItem value='3'>Abends</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/>\n\n                   <FormControl className={classes.formControl}>\n                            <InputLabel>Welche Tage präferierst du?</InputLabel>\n                             <Select required error={tageValidationFailed} value={tage} onChange={this.handleChangeTage}>\n                                <MenuItem value='1'>Unter der Woche</MenuItem>\n                                <MenuItem value='2'>Am Wochenende</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/>\n\n                   <FormControl className={classes.formControl}>\n                            <InputLabel>Welche Frequenz präferierst du?</InputLabel>\n                             <Select required error={frequenzValidationFailed} value={frequenz} onChange={this.handleChangeFrequenz}>\n                                <MenuItem value='1'>Wöchentlich</MenuItem>\n                                <MenuItem value='2'>Mehrmals die Woche</MenuItem>\n                                <MenuItem value='3'>Alle zwei Wochen</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/>\n\n                   <FormControl className={classes.formControl}>\n                            <InputLabel>Welche Lernart präferierst du?</InputLabel>\n                             <Select required error={lernartValidationFailed} value={lernart} onChange={this.handleChangeLernart}>\n                                <MenuItem value='1'>Visuell</MenuItem>\n                                <MenuItem value='2'>Auditiv</MenuItem>\n                                <MenuItem value='3'>Motorisch</MenuItem>\n                                <MenuItem value='4'>Kommunikativ</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/>\n\n                   <FormControl className={classes.formControl}>\n                            <InputLabel>Welche Gruppengroesse präferierst du?</InputLabel>\n                             <Select required error={gruppengroesseValidationFailed} value={gruppengroesse} onChange={this.handleChangeGruppengroesse}>\n                                <MenuItem value='1'>Bis zu 3 Personen</MenuItem>\n                                <MenuItem value='2'>3-5 Personen</MenuItem>\n                                <MenuItem value='3'>Über 5 Personen</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/>\n\n                   <FormControl className={classes.formControl}>\n                            <InputLabel>Welchen Lernort präferierst du?</InputLabel>\n                             <Select required error={lernortValidationFailed} value={lernort} onChange={this.handleChangeLernort}>\n                                <MenuItem value='1'>Remote</MenuItem>\n                                <MenuItem value='2'>Hochschule</MenuItem>\n                                <MenuItem value='3'>Bibliothek</MenuItem>\n                                <MenuItem value='4'>Cafe</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/>\n\n                   <FormControl className={classes.formControl}>\n                            <InputLabel>Welche Lernfaecher präferierst du?</InputLabel>\n                             <Select required error={lernfaecherValidationFailed} value={lernfaecher} onChange={this.handleChangeLernfaecher}>\n                                <MenuItem value='1'>Software Entwicklung</MenuItem>\n                                <MenuItem value='2'>Data Science</MenuItem>\n                                <MenuItem value='3'>Führungsorientiertes Rechnungswesen</MenuItem>\n                                <MenuItem value='4'>Medienrecht</MenuItem>\n                                <MenuItem value='5'>Crossmedia-Konzeption</MenuItem>\n                                <MenuItem value='6'>Web-Technologie</MenuItem>\n                                <MenuItem value='7'>Datenbanken</MenuItem>\n                                <MenuItem value='8'>IT-Security</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/>\n\n\n\n                </form>\n                <LoadingProgress show={addingInProgress || updatingInProgress} />\n                {\n\n                  <ContextErrorMessage error={updatingError}\n                      contextErrorMsg={`Dein Profil konnte nicht bearbeitet werden :/`}\n                      onReload={this.updatenPerson} />\n\n                }\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.handleClose} color='secondary'>\n                            Abbrechen\n                </Button>\n                {\n                    <Button disabled={nameValidationFailed } variant='contained'\n                          onClick={ () => {this.updatenGruppe(); this.updatenLernvorlieben();}} color='primary'>\n                          Änderungen abschließen\n                    </Button>\n                }\n              </DialogActions>\n            </Dialog>\n            : null\n        );\n      }\n\n}\n\n/** Component specific styles */\nconst styles = theme => ({\n\troot: {\n\t\tmargin: theme.spacing(2)\n\t}\n});\n\n/** PropTypes */\nGruppenBearbeitenForm.propTypes = {\n\t/** @ignore */\n  classes: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired,\n\t/**\n\t * Handler function, which is called if the user wants to sign in.\n\t */\n\n\tonSignIn: PropTypes.func.isRequired,\n}\n\nexport default withStyles(styles)(GruppenBearbeitenForm);","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppenForm.js",["282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Card,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Typography\n    } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { TeachingbeeAPI, GroupBO } from '../../api';\nimport { withRouter } from 'react-router-dom';\nimport ContextErrorMessage from './ContextErrorMessage';\nimport LoadingProgress from './LoadingProgress';\nimport LerngruppeBO from '../../api/LerngruppeBO';\nimport LernvorliebenBO from '../../api/LernvorliebenBO';\nimport TeilnahmeGruppeBO from '../../api/TeilnahmeGruppeBO';\nimport ProfilBO from '../../api/ProfilBO';\nimport LernpartnerAPI from '../../api/LernpartnerAPI';\nimport GruppenListeEintrag from '../GruppenListeEintrag';\n\n\nclass GruppenForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lernvorlieben: null,\n            profil: null,\n            lerngruppe: null,\n\n            gruppenName: null,\n            gruppenNameValidationFailed: null,\n            gruppenNameEdited: null,\n\n            gruppe: 1,\n\n            lernfaecher: null,\n            lernfachListe: [],\n            lernfaecherValidationFailed: null,\n            lernfaecherNameEdited: null,\n\n            tageszeiten: null,\n            tageszeitenValidationFailed: null,\n            tageszeitenEdited: null,\n\n            tage: null,\n            tageValidationFailed: false,\n            tageEdited: null,\n\n            frequenz: null,\n            frequenzValidationFailed: null,\n            frequenzEdited: null,\n\n            gruppengroesse: 4,\n\n            lernart: null,\n            lernartValidationFailed: null,\n            lernartEdited: null,\n\n            lernort: null,\n            lernortValidationFailed: null,\n            lernortEdited: null,\n\n            addingInProgress: false,\n            updatingInProgress: false,\n            addingError: null,\n            updatingError: null\n\n        };\n\n        // save this state for canceling\n        this.baseState = this.state;\n        this.lernfaecherSelectionChange = this.lernfaecherSelectionChange.bind(this);\n        this.tageszeitenSelectionChange = this.tageszeitenSelectionChange.bind(this);\n        this.tageSelectionChange = this.tageSelectionChange.bind(this);\n        this.frequenzSelectionChange = this.frequenzSelectionChange.bind(this);\n        this.lernartSelectionChange = this.lernartSelectionChange.bind(this);\n        this.lernortSelectionChange = this.lernortSelectionChange.bind(this);\n    }\n\n  /** Add Lerngruppe */\n  addLernvorlieben = () => {\n    let newLernvorlieben = new LernvorliebenBO(this.state.tageszeiten, 'null', this.state.tage, 'null', this.state.frequenz, 'null', this.state.lernart, 'null', this.state.gruppengroesse, 'null', this.state.lernort, 'null');\n    LernpartnerAPI.getAPI().addLernvorlieben(newLernvorlieben)\n    .then(lernvorliebenBO =>\n      // Backend call sucessfull\n      // reinit the dialogs state for a new empty customer\n        this.setState({\n            lernvorlieben: lernvorliebenBO,\n            lernfachListe: [this.state.lernfaecher]\n        })).then(() => {\n            this.addProfil();\n\n    }).catch(e =>\n      this.setState({\n        updatingInProgress: false,    // disable loading indicator\n        updatingError: e              // show error message\n      })\n    );\n\n    // set loading to true\n    this.setState({\n      updatingInProgress: true,       // show loading indicator\n      updatingError: null             // disable error message\n    });\n  }\n\n  /** Add Lerngruppe */\n  addProfil = () => {\n    let newProfil = new ProfilBO(this.state.gruppe, this.state.lernfachListe, this.state.lernvorlieben.id)\n    console.log(this.state.gruppe)\n    console.log(this.state.lernfachListe)\n    console.log(this.state.lernvorlieben.id)\n    console.log(typeof(this.state.gruppe))\n    console.log(typeof(this.state.lernfachListe))\n    console.log(typeof(this.state.lernvorlieben.id))\n    LernpartnerAPI.getAPI().addProfil(newProfil)\n    .then(profilBO =>\n      // Backend call sucessfull\n      // reinit the dialogs state for a new empty customer\n      this.setState({\n        profil: profilBO\n      })).then(() => {\n            this.addLerngruppe();\n            //console.log(this.state.profil.id)\n    }).catch(e =>\n      this.setState({\n        updatingInProgress: false,    // disable loading indicator\n        updatingError: e              // show error message\n      })\n    );\n\n    // set loading to true\n    this.setState({\n      updatingInProgress: true,       // show loading indicator\n      updatingError: null             // disable error message\n    });\n  }\n\n  /** Add Lerngruppe */\n  addLerngruppe = () => {\n    let newLerngruppe = new LerngruppeBO();\n    newLerngruppe.setID(0)\n    newLerngruppe.setname(this.state.gruppenName)\n    newLerngruppe.setprofil(this.state.profil.id)\n    LernpartnerAPI.getAPI().addLerngruppe(newLerngruppe)\n    .then(lerngruppeBO =>\n      // Backend call sucessfull\n      // reinit the dialogs state for a new empty customer\n      this.setState({\n        lerngruppe: lerngruppeBO\n      })).then(() => {\n            this.addTeilnahmeGruppe();\n            //console.log(this.state.profil.id)\n    }).catch(e =>\n      this.setState({\n        updatingInProgress: false,    // disable loading indicator\n        updatingError: e              // show error message\n      })\n    );\n\n    // set loading to true\n    this.setState({\n      updatingInProgress: true,       // show loading indicator\n      updatingError: null             // disable error message\n    });\n  }\n\n\n  /** Add Teilnahme an Lerngruppe */\n  addTeilnahmeGruppe = () => {\n    let newTeilnahmeGruppe = new TeilnahmeGruppeBO(this.props.currentPerson.id, this.state.lerngruppe.id);\n    LernpartnerAPI.getAPI().addTeilnahmeGruppe(newTeilnahmeGruppe)\n    .then(teilnahmeGruppeBO => {\n      // Backend call sucessfull\n      // reinit the dialogs state for a new empty customer\n      this.setState(this.baseState);\n      this.props.onClose(teilnahmeGruppeBO); // call the parent with the lerngruppe object from backend\n    }).catch(e =>\n      this.setState({\n        updatingInProgress: false,    // disable loading indicator\n        updatingError: e              // show error message\n      })\n    );\n\n    // set loading to true\n    this.setState({\n      updatingInProgress: true,       // show loading indicator\n      updatingError: null             // disable error message\n    });\n  }\n\n  /** Handles value changes of the forms textfields and validates them */\n  textFieldValueChange = (event) => {\n    const value = event.target.value;\n\n    let error = false;\n    if (value.trim().length === 0) {\n      error = true;\n    }\n\n    this.setState({\n      [event.target.id]: event.target.value,\n      [event.target.id + 'ValidationFailed']: error,\n      [event.target.id + 'Edited']: true\n    });\n  }\n\n  //Setzen der Werte aus der Validierung\n  setStateValueChange(event, error) {\n    this.setState({\n        [event.target.id]: event.target.value,\n        [event.target.id + 'ValidationFailed']: error,\n        [event.target.id + 'Edited']: true\n    });\n  }\n\n  /** Handles the close / cancel button click event */\n  handleClose = () => {\n    // Reset the state\n    this.setState(this.baseState);\n    this.props.onClose(null);\n  }\n\n    /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\n    componentDidMount() {\n\n    }\n\n  /** Handles value changes of the customer select textfield */\n  lernfaecherSelectionChange = (event) => {\n      this.setState({lernfaecher: event.target.value});\n  }\n\n    /** Handles value changes of the customer select textfield */\n  tageszeitenSelectionChange = (event) => {\n      this.setState({tageszeiten: event.target.value});\n  }\n\n    /** Handles value changes of the customer select textfield */\n  tageSelectionChange = (event) => {\n      this.setState({tage: event.target.value});\n  }\n\n    /** Handles value changes of the customer select textfield */\n  frequenzSelectionChange = (event) => {\n      this.setState({frequenz: event.target.value});\n  }\n\n    /** Handles value changes of the customer select textfield */\n  lernartSelectionChange = (event) => {\n      this.setState({lernart: event.target.value});\n  }\n\n    /** Handles value changes of the customer select textfield */\n  lernortSelectionChange = (event) => {\n      this.setState({lernort: event.target.value});\n  }\n\n\n  /** Renders the component */\n  render() {\n    const { classes, show } = this.props;\n    const { lernvorlieben, profil, lerngruppe, gruppenName, gruppenNameValidationFailed, gruppenNameEdited, lernfaecher, lernfachListe, lernfaecherValidationFailed, lernfaecherNameEdited, tageszeiten, tageszeitenValidationFailed, tageszeitenEdited, tage, tageValidationFailed, tageEdited,\n    frequenz, frequenzValidationFailed, frequenzEdited, lernart, lernartValidationFailed, lernartEdited, lernort, lernortValidationFailed, lernortEdited, addingInProgress, addingError,\n    updatingInProgress, updatingError } = this.state;\n    //console.log(lernfaecher)\n    //console.log(typeof(lernfaecher))\n    //parseInt(lernfaecher, 10)\n    //console.log(parseInt(\"lernfaecher\", 10))\n    //console.log(typeof(lernfaecher))\n    //console.log(profil)\n    //console.log(lernvorlieben.getID())\n    console.log(lernfachListe)\n\n    return (\n      show ?\n        <Dialog open={show} onClose={this.handleClose} maxWidth='xs'>\n          <DialogTitle>Neue Lerngruppe anlegen\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\n              <CloseIcon />\n            </IconButton>\n          </DialogTitle>\n          <DialogContent>\n            <form className={classes.root} noValidate autoComplete='off'>\n              <TextField autoFocus type='text' required fullWidth margin='normal' id='gruppenName' label='Gruppenname:' value={gruppenName}\n                onChange={this.textFieldValueChange} error={gruppenNameValidationFailed}\n                helperText={gruppenNameValidationFailed ? 'Der Gruppenname muss mindestens ein Zeichen enthalten' : ' '} />\n\n              Bitte fülle für deine neue Lerngruppe folgende Profilinformationen mit euren Präferenzen vollständig aus.\n              <br/>\n              <FormControl required className={classes.formControl}>\n                <InputLabel>Lernfach:</InputLabel>\n                <Select error={lernfaecherValidationFailed} value={lernfaecher} onChange={this.lernfaecherSelectionChange}>\n                <MenuItem value={1}>Software Entwicklung</MenuItem>\n                <MenuItem value={2}>Data Science</MenuItem>\n                <MenuItem value={3}>Führungsorientiertes Rechnungswesen</MenuItem>\n                <MenuItem value={4}>Medienrecht</MenuItem>\n                <MenuItem value={5}>Crossmedia-Konzeption</MenuItem>\n                <MenuItem value={6}>Web-Technologie</MenuItem>\n                <MenuItem value={7}>Datenbanken</MenuItem>\n                <MenuItem value={8}>IT-Security</MenuItem>\n                </Select>\n              </FormControl>\n              <br/>\n\n              <FormControl required className={classes.formControl}>\n                <InputLabel>Tageszeiten:</InputLabel>\n                <Select error={tageszeitenValidationFailed} value={tageszeiten} onChange={this.tageszeitenSelectionChange}>\n                <MenuItem value={1}>Morgens</MenuItem>\n                <MenuItem value={2}>Mittags</MenuItem>\n                <MenuItem value={3}>Abends</MenuItem>\n                </Select>\n              </FormControl>\n              <br/>\n\n              <FormControl required className={classes.formControl}>\n                <InputLabel>Tage:</InputLabel>\n                <Select error={tageValidationFailed} value={tage} onChange={this.tageSelectionChange}>\n                <MenuItem value={1}>Unter der Woche</MenuItem>\n                <MenuItem value={2}>Am Wochenende</MenuItem>\n                </Select>\n              </FormControl>\n              <br/>\n\n              <FormControl required className={classes.formControl}>\n                <InputLabel>Frequenz:</InputLabel>\n                <Select error={frequenzValidationFailed} value={frequenz} onChange={this.frequenzSelectionChange}>\n                <MenuItem value={1}>Mehrmals die Woche</MenuItem>\n                <MenuItem value={2}>Wöchentlich</MenuItem>\n                <MenuItem value={3}>Alle zwei Wochen</MenuItem>\n                </Select>\n              </FormControl>\n              <br/>\n\n              <FormControl required className={classes.formControl}>\n                <InputLabel>Lernart:</InputLabel>\n                <Select error={lernartValidationFailed} value={lernart} onChange={this.lernartSelectionChange}>\n                <MenuItem value={1}>Visuell</MenuItem>\n                <MenuItem value={2}>Auditiv</MenuItem>\n                <MenuItem value={3}>Motorisch</MenuItem>\n                <MenuItem value={4}>Kommunikativ</MenuItem>\n                </Select>\n              </FormControl>\n              <br/>\n\n              <FormControl required className={classes.formControl}>\n                <InputLabel >Lernort:</InputLabel>\n                <Select error={lernortValidationFailed} value={lernort} onChange={this.lernortSelectionChange}>\n                <MenuItem value={1}>Remote</MenuItem>\n                <MenuItem value={2}>Hochschule</MenuItem>\n                <MenuItem value={3}>Bibliothek</MenuItem>\n                <MenuItem value={4}>Cafe</MenuItem>\n                </Select>\n              </FormControl>\n            </form>\n            <LoadingProgress show={addingInProgress} />\n\n                <ContextErrorMessage error={addingError} contextErrorMsg={`Die Gruppe konnte nicht angelegt werden.`} onReload={this.addLerngruppe} />\n\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color='secondary'>\n              Cancel\n            </Button>\n\n                <Button disabled={gruppenNameValidationFailed || !gruppenNameEdited || !lernfaecher || !tageszeiten || !tage || !frequenz || !lernart || !lernort} variant='contained' onClick={this.addLernvorlieben} color='primary'>\n                  Gruppe erstellen\n             </Button>\n\n          </DialogActions>\n        </Dialog>\n        : null\n    );\n  }\n}\n\n/** Component specific styles */\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  formControl: {\n    marginBottom: theme.spacing(1),\n    minWidth: 120,\n  },\n  content: {\n    margin: theme.spacing(1),\n    }\n});\n\n/** PropTypes */\nGruppenForm.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  /** The CustomerBO to be edited */\n  /**lerngruppe: PropTypes.object,*/\n  /** If true, the form is rendered */\n  show: PropTypes.bool.isRequired,\n  /**\n   * Handler function which is called, when the dialog is closed.\n   * Sends the edited or created CustomerBO as parameter or null, if cancel was pressed.\n   *\n   * Signature: onClose(CustomerBO customer);\n   */\n  onClose: PropTypes.func.isRequired,\n}\n\nexport default withStyles(styles)(GruppenForm);","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/AnfrageForm.js",["300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319"],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/MultiSelect.js",[],{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","replacedBy":"323"},{"ruleId":"324","severity":1,"message":"325","line":1,"column":17,"nodeType":"326","messageId":"327","endLine":1,"endColumn":26},{"ruleId":"324","severity":1,"message":"328","line":13,"column":8,"nodeType":"326","messageId":"327","endLine":13,"endColumn":25},{"ruleId":"324","severity":1,"message":"329","line":19,"column":8,"nodeType":"326","messageId":"327","endLine":19,"endColumn":14},{"ruleId":"324","severity":1,"message":"330","line":3,"column":22,"nodeType":"326","messageId":"327","endLine":3,"endColumn":32},{"ruleId":"324","severity":1,"message":"331","line":3,"column":34,"nodeType":"326","messageId":"327","endLine":3,"endColumn":40},{"ruleId":"324","severity":1,"message":"332","line":3,"column":42,"nodeType":"326","messageId":"327","endLine":3,"endColumn":56},{"ruleId":"324","severity":1,"message":"333","line":3,"column":58,"nodeType":"326","messageId":"327","endLine":3,"endColumn":63},{"ruleId":"324","severity":1,"message":"334","line":3,"column":65,"nodeType":"326","messageId":"327","endLine":3,"endColumn":74},{"ruleId":"324","severity":1,"message":"335","line":3,"column":76,"nodeType":"326","messageId":"327","endLine":3,"endColumn":85},{"ruleId":"324","severity":1,"message":"336","line":3,"column":87,"nodeType":"326","messageId":"327","endLine":3,"endColumn":92},{"ruleId":"324","severity":1,"message":"337","line":3,"column":94,"nodeType":"326","messageId":"327","endLine":3,"endColumn":102},{"ruleId":"324","severity":1,"message":"338","line":3,"column":104,"nodeType":"326","messageId":"327","endLine":3,"endColumn":113},{"ruleId":"324","severity":1,"message":"339","line":3,"column":115,"nodeType":"326","messageId":"327","endLine":3,"endColumn":119},{"ruleId":"324","severity":1,"message":"340","line":3,"column":121,"nodeType":"326","messageId":"327","endLine":3,"endColumn":125},{"ruleId":"324","severity":1,"message":"341","line":4,"column":10,"nodeType":"326","messageId":"327","endLine":4,"endColumn":20},{"ruleId":"324","severity":1,"message":"342","line":6,"column":8,"nodeType":"326","messageId":"327","endLine":6,"endColumn":27},{"ruleId":"324","severity":1,"message":"343","line":7,"column":8,"nodeType":"326","messageId":"327","endLine":7,"endColumn":23},{"ruleId":"344","severity":1,"message":"345","line":27,"column":13,"nodeType":"346","messageId":"347","endLine":27,"endColumn":19},{"ruleId":"324","severity":1,"message":"348","line":150,"column":22,"nodeType":"326","messageId":"327","endLine":150,"endColumn":26},{"ruleId":"324","severity":1,"message":"349","line":152,"column":19,"nodeType":"326","messageId":"327","endLine":152,"endColumn":25},{"ruleId":"324","severity":1,"message":"350","line":152,"column":27,"nodeType":"326","messageId":"327","endLine":152,"endColumn":40},{"ruleId":"324","severity":1,"message":"351","line":152,"column":89,"nodeType":"326","messageId":"327","endLine":152,"endColumn":103},{"ruleId":"324","severity":1,"message":"352","line":152,"column":113,"nodeType":"326","messageId":"327","endLine":152,"endColumn":134},{"ruleId":"324","severity":1,"message":"353","line":152,"column":136,"nodeType":"326","messageId":"327","endLine":152,"endColumn":153},{"ruleId":"324","severity":1,"message":"354","line":152,"column":155,"nodeType":"326","messageId":"327","endLine":152,"endColumn":160},{"ruleId":"324","severity":1,"message":"331","line":4,"column":22,"nodeType":"326","messageId":"327","endLine":4,"endColumn":28},{"ruleId":"324","severity":1,"message":"355","line":4,"column":30,"nodeType":"326","messageId":"327","endLine":4,"endColumn":39},{"ruleId":"324","severity":1,"message":"356","line":4,"column":41,"nodeType":"326","messageId":"327","endLine":4,"endColumn":55},{"ruleId":"324","severity":1,"message":"357","line":4,"column":57,"nodeType":"326","messageId":"327","endLine":4,"endColumn":67},{"ruleId":"324","severity":1,"message":"336","line":16,"column":8,"nodeType":"326","messageId":"327","endLine":16,"endColumn":13},{"ruleId":"324","severity":1,"message":"358","line":116,"column":30,"nodeType":"326","messageId":"327","endLine":116,"endColumn":38},{"ruleId":"324","severity":1,"message":"339","line":2,"column":41,"nodeType":"326","messageId":"327","endLine":2,"endColumn":45},{"ruleId":"324","severity":1,"message":"332","line":3,"column":34,"nodeType":"326","messageId":"327","endLine":3,"endColumn":48},{"ruleId":"324","severity":1,"message":"333","line":3,"column":50,"nodeType":"326","messageId":"327","endLine":3,"endColumn":55},{"ruleId":"324","severity":1,"message":"334","line":3,"column":57,"nodeType":"326","messageId":"327","endLine":3,"endColumn":66},{"ruleId":"324","severity":1,"message":"335","line":3,"column":68,"nodeType":"326","messageId":"327","endLine":3,"endColumn":77},{"ruleId":"324","severity":1,"message":"337","line":3,"column":86,"nodeType":"326","messageId":"327","endLine":3,"endColumn":94},{"ruleId":"324","severity":1,"message":"338","line":3,"column":96,"nodeType":"326","messageId":"327","endLine":3,"endColumn":105},{"ruleId":"324","severity":1,"message":"339","line":3,"column":107,"nodeType":"326","messageId":"327","endLine":3,"endColumn":111},{"ruleId":"324","severity":1,"message":"340","line":3,"column":113,"nodeType":"326","messageId":"327","endLine":3,"endColumn":117},{"ruleId":"324","severity":1,"message":"342","line":9,"column":8,"nodeType":"326","messageId":"327","endLine":9,"endColumn":27},{"ruleId":"324","severity":1,"message":"343","line":10,"column":8,"nodeType":"326","messageId":"327","endLine":10,"endColumn":23},{"ruleId":"324","severity":1,"message":"359","line":272,"column":80,"nodeType":"326","messageId":"327","endLine":272,"endColumn":92},{"ruleId":"324","severity":1,"message":"360","line":272,"column":169,"nodeType":"326","messageId":"327","endLine":272,"endColumn":186},{"ruleId":"324","severity":1,"message":"361","line":272,"column":188,"nodeType":"326","messageId":"327","endLine":272,"endColumn":196},{"ruleId":"324","severity":1,"message":"352","line":272,"column":217,"nodeType":"326","messageId":"327","endLine":272,"endColumn":238},{"ruleId":"324","severity":1,"message":"353","line":272,"column":439,"nodeType":"326","messageId":"327","endLine":272,"endColumn":456},{"ruleId":"324","severity":1,"message":"354","line":272,"column":458,"nodeType":"326","messageId":"327","endLine":272,"endColumn":463},{"ruleId":"362","severity":1,"message":"363","line":609,"column":9,"nodeType":"364","messageId":"347","endLine":616,"endColumn":10},{"ruleId":"324","severity":1,"message":"365","line":3,"column":123,"nodeType":"326","messageId":"327","endLine":3,"endColumn":127},{"ruleId":"324","severity":1,"message":"366","line":168,"column":32,"nodeType":"326","messageId":"327","endLine":168,"endColumn":45},{"ruleId":"324","severity":1,"message":"367","line":5,"column":8,"nodeType":"326","messageId":"327","endLine":5,"endColumn":22},{"ruleId":"324","severity":1,"message":"368","line":8,"column":8,"nodeType":"326","messageId":"327","endLine":8,"endColumn":20},{"ruleId":"324","severity":1,"message":"341","line":5,"column":10,"nodeType":"326","messageId":"327","endLine":5,"endColumn":20},{"ruleId":"324","severity":1,"message":"369","line":6,"column":10,"nodeType":"326","messageId":"327","endLine":6,"endColumn":20},{"ruleId":"324","severity":1,"message":"370","line":7,"column":18,"nodeType":"326","messageId":"327","endLine":7,"endColumn":29},{"ruleId":"324","severity":1,"message":"342","line":13,"column":8,"nodeType":"326","messageId":"327","endLine":13,"endColumn":27},{"ruleId":"324","severity":1,"message":"343","line":14,"column":8,"nodeType":"326","messageId":"327","endLine":14,"endColumn":23},{"ruleId":"324","severity":1,"message":"371","line":214,"column":19,"nodeType":"326","messageId":"327","endLine":214,"endColumn":26},{"ruleId":"324","severity":1,"message":"372","line":218,"column":46,"nodeType":"326","messageId":"327","endLine":218,"endColumn":56},{"ruleId":"324","severity":1,"message":"373","line":218,"column":93,"nodeType":"326","messageId":"327","endLine":218,"endColumn":103},{"ruleId":"324","severity":1,"message":"365","line":3,"column":123,"nodeType":"326","messageId":"327","endLine":3,"endColumn":127},{"ruleId":"324","severity":1,"message":"341","line":12,"column":10,"nodeType":"326","messageId":"327","endLine":12,"endColumn":20},{"ruleId":"324","severity":1,"message":"350","line":304,"column":62,"nodeType":"326","messageId":"327","endLine":304,"endColumn":75},{"ruleId":"324","severity":1,"message":"374","line":305,"column":17,"nodeType":"326","messageId":"327","endLine":305,"endColumn":30},{"ruleId":"324","severity":1,"message":"375","line":305,"column":32,"nodeType":"326","messageId":"327","endLine":305,"endColumn":48},{"ruleId":"324","severity":1,"message":"376","line":305,"column":50,"nodeType":"326","messageId":"327","endLine":305,"endColumn":54},{"ruleId":"324","severity":1,"message":"377","line":305,"column":89,"nodeType":"326","messageId":"327","endLine":305,"endColumn":107},{"ruleId":"324","severity":1,"message":"349","line":305,"column":109,"nodeType":"326","messageId":"327","endLine":305,"endColumn":115},{"ruleId":"324","severity":1,"message":"361","line":308,"column":45,"nodeType":"326","messageId":"327","endLine":308,"endColumn":53},{"ruleId":"324","severity":1,"message":"378","line":308,"column":55,"nodeType":"326","messageId":"327","endLine":308,"endColumn":82},{"ruleId":"324","severity":1,"message":"379","line":8,"column":8,"nodeType":"326","messageId":"327","endLine":8,"endColumn":22},{"ruleId":"324","severity":1,"message":"371","line":63,"column":11,"nodeType":"326","messageId":"327","endLine":63,"endColumn":18},{"ruleId":"324","severity":1,"message":"366","line":63,"column":35,"nodeType":"326","messageId":"327","endLine":63,"endColumn":48},{"ruleId":"324","severity":1,"message":"380","line":64,"column":43,"nodeType":"326","messageId":"327","endLine":64,"endColumn":64},{"ruleId":"324","severity":1,"message":"355","line":4,"column":30,"nodeType":"326","messageId":"327","endLine":4,"endColumn":39},{"ruleId":"324","severity":1,"message":"356","line":4,"column":41,"nodeType":"326","messageId":"327","endLine":4,"endColumn":55},{"ruleId":"324","severity":1,"message":"357","line":4,"column":57,"nodeType":"326","messageId":"327","endLine":4,"endColumn":67},{"ruleId":"324","severity":1,"message":"340","line":4,"column":69,"nodeType":"326","messageId":"327","endLine":4,"endColumn":73},{"ruleId":"324","severity":1,"message":"330","line":4,"column":75,"nodeType":"326","messageId":"327","endLine":4,"endColumn":85},{"ruleId":"324","severity":1,"message":"361","line":103,"column":47,"nodeType":"326","messageId":"327","endLine":103,"endColumn":55},{"ruleId":"324","severity":1,"message":"381","line":53,"column":39,"nodeType":"326","messageId":"327","endLine":53,"endColumn":51},{"ruleId":"382","severity":1,"message":"383","line":169,"column":17,"nodeType":"384","messageId":"385","endLine":203,"endColumn":18},{"ruleId":"324","severity":1,"message":"329","line":4,"column":8,"nodeType":"326","messageId":"327","endLine":4,"endColumn":14},{"ruleId":"324","severity":1,"message":"349","line":187,"column":30,"nodeType":"326","messageId":"327","endLine":187,"endColumn":36},{"ruleId":"324","severity":1,"message":"386","line":187,"column":46,"nodeType":"326","messageId":"327","endLine":187,"endColumn":52},{"ruleId":"324","severity":1,"message":"387","line":187,"column":81,"nodeType":"326","messageId":"327","endLine":187,"endColumn":91},{"ruleId":"324","severity":1,"message":"373","line":187,"column":128,"nodeType":"326","messageId":"327","endLine":187,"endColumn":138},{"ruleId":"324","severity":1,"message":"388","line":17,"column":8,"nodeType":"326","messageId":"327","endLine":17,"endColumn":17},{"ruleId":"324","severity":1,"message":"371","line":145,"column":17,"nodeType":"326","messageId":"327","endLine":145,"endColumn":24},{"ruleId":"324","severity":1,"message":"389","line":145,"column":26,"nodeType":"326","messageId":"327","endLine":145,"endColumn":39},{"ruleId":"324","severity":1,"message":"390","line":146,"column":37,"nodeType":"326","messageId":"327","endLine":146,"endColumn":52},{"ruleId":"324","severity":1,"message":"391","line":146,"column":54,"nodeType":"326","messageId":"327","endLine":146,"endColumn":64},{"ruleId":"320","replacedBy":"392"},{"ruleId":"322","replacedBy":"393"},{"ruleId":"324","severity":1,"message":"365","line":3,"column":123,"nodeType":"326","messageId":"327","endLine":3,"endColumn":127},{"ruleId":"324","severity":1,"message":"341","line":11,"column":10,"nodeType":"326","messageId":"327","endLine":11,"endColumn":20},{"ruleId":"324","severity":1,"message":"366","line":234,"column":32,"nodeType":"326","messageId":"327","endLine":234,"endColumn":45},{"ruleId":"324","severity":1,"message":"387","line":234,"column":47,"nodeType":"326","messageId":"327","endLine":234,"endColumn":57},{"ruleId":"324","severity":1,"message":"350","line":234,"column":59,"nodeType":"326","messageId":"327","endLine":234,"endColumn":72},{"ruleId":"324","severity":1,"message":"394","line":3,"column":78,"nodeType":"326","messageId":"327","endLine":3,"endColumn":95},{"ruleId":"324","severity":1,"message":"365","line":3,"column":123,"nodeType":"326","messageId":"327","endLine":3,"endColumn":127},{"ruleId":"324","severity":1,"message":"330","line":8,"column":5,"nodeType":"326","messageId":"327","endLine":8,"endColumn":15},{"ruleId":"324","severity":1,"message":"395","line":11,"column":10,"nodeType":"326","messageId":"327","endLine":11,"endColumn":24},{"ruleId":"324","severity":1,"message":"396","line":11,"column":26,"nodeType":"326","messageId":"327","endLine":11,"endColumn":33},{"ruleId":"324","severity":1,"message":"341","line":12,"column":10,"nodeType":"326","messageId":"327","endLine":12,"endColumn":20},{"ruleId":"324","severity":1,"message":"397","line":20,"column":8,"nodeType":"326","messageId":"327","endLine":20,"endColumn":27},{"ruleId":"324","severity":1,"message":"350","line":266,"column":13,"nodeType":"326","messageId":"327","endLine":266,"endColumn":26},{"ruleId":"324","severity":1,"message":"349","line":266,"column":28,"nodeType":"326","messageId":"327","endLine":266,"endColumn":34},{"ruleId":"324","severity":1,"message":"387","line":266,"column":36,"nodeType":"326","messageId":"327","endLine":266,"endColumn":46},{"ruleId":"324","severity":1,"message":"398","line":266,"column":166,"nodeType":"326","messageId":"327","endLine":266,"endColumn":187},{"ruleId":"324","severity":1,"message":"399","line":266,"column":231,"nodeType":"326","messageId":"327","endLine":266,"endColumn":248},{"ruleId":"324","severity":1,"message":"400","line":266,"column":278,"nodeType":"326","messageId":"327","endLine":266,"endColumn":288},{"ruleId":"324","severity":1,"message":"401","line":267,"column":41,"nodeType":"326","messageId":"327","endLine":267,"endColumn":55},{"ruleId":"324","severity":1,"message":"402","line":267,"column":91,"nodeType":"326","messageId":"327","endLine":267,"endColumn":104},{"ruleId":"324","severity":1,"message":"403","line":267,"column":140,"nodeType":"326","messageId":"327","endLine":267,"endColumn":153},{"ruleId":"324","severity":1,"message":"404","line":268,"column":5,"nodeType":"326","messageId":"327","endLine":268,"endColumn":23},{"ruleId":"324","severity":1,"message":"405","line":268,"column":25,"nodeType":"326","messageId":"327","endLine":268,"endColumn":38},{"ruleId":"324","severity":1,"message":"394","line":3,"column":78,"nodeType":"326","messageId":"327","endLine":3,"endColumn":95},{"ruleId":"324","severity":1,"message":"355","line":3,"column":112,"nodeType":"326","messageId":"327","endLine":3,"endColumn":121},{"ruleId":"324","severity":1,"message":"365","line":3,"column":123,"nodeType":"326","messageId":"327","endLine":3,"endColumn":127},{"ruleId":"324","severity":1,"message":"406","line":4,"column":5,"nodeType":"326","messageId":"327","endLine":4,"endColumn":16},{"ruleId":"324","severity":1,"message":"407","line":5,"column":5,"nodeType":"326","messageId":"327","endLine":5,"endColumn":15},{"ruleId":"324","severity":1,"message":"408","line":6,"column":5,"nodeType":"326","messageId":"327","endLine":6,"endColumn":11},{"ruleId":"324","severity":1,"message":"409","line":7,"column":5,"nodeType":"326","messageId":"327","endLine":7,"endColumn":13},{"ruleId":"324","severity":1,"message":"330","line":8,"column":5,"nodeType":"326","messageId":"327","endLine":8,"endColumn":15},{"ruleId":"324","severity":1,"message":"395","line":11,"column":10,"nodeType":"326","messageId":"327","endLine":11,"endColumn":24},{"ruleId":"324","severity":1,"message":"396","line":11,"column":26,"nodeType":"326","messageId":"327","endLine":11,"endColumn":33},{"ruleId":"324","severity":1,"message":"341","line":12,"column":10,"nodeType":"326","messageId":"327","endLine":12,"endColumn":20},{"ruleId":"324","severity":1,"message":"410","line":15,"column":8,"nodeType":"326","messageId":"327","endLine":15,"endColumn":20},{"ruleId":"324","severity":1,"message":"411","line":18,"column":8,"nodeType":"326","messageId":"327","endLine":18,"endColumn":16},{"ruleId":"324","severity":1,"message":"412","line":19,"column":8,"nodeType":"326","messageId":"327","endLine":19,"endColumn":16},{"ruleId":"324","severity":1,"message":"413","line":21,"column":8,"nodeType":"326","messageId":"327","endLine":21,"endColumn":29},{"ruleId":"324","severity":1,"message":"414","line":298,"column":54,"nodeType":"326","messageId":"327","endLine":298,"endColumn":67},{"ruleId":"324","severity":1,"message":"415","line":298,"column":113,"nodeType":"326","messageId":"327","endLine":298,"endColumn":126},{"ruleId":"324","severity":1,"message":"416","line":298,"column":128,"nodeType":"326","messageId":"327","endLine":298,"endColumn":148},{"ruleId":"324","severity":1,"message":"404","line":298,"column":181,"nodeType":"326","messageId":"327","endLine":298,"endColumn":199},{"ruleId":"324","severity":1,"message":"405","line":298,"column":201,"nodeType":"326","messageId":"327","endLine":298,"endColumn":214},"no-native-reassign",["417"],"no-negated-in-lhs",["418"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'RegistrierungForm' is defined but never used.","'Profil' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'TableContainer' is defined but never used.","'Table' is defined but never used.","'TableHead' is defined but never used.","'TableCell' is defined but never used.","'Paper' is defined but never used.","'TableRow' is defined but never used.","'TableBody' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'withRouter' is defined but never used.","'ContextErrorMessage' is defined but never used.","'LoadingProgress' is defined but never used.","no-dupe-keys","Duplicate key 'gruppe'.","ObjectExpression","unexpected","'show' is assigned a value but never used.","'profil' is assigned a value but never used.","'lernvorlieben' is assigned a value but never used.","'gruppengroesse' is assigned a value but never used.","'personLernvorliebenID' is assigned a value but never used.","'loadingInProgress' is assigned a value but never used.","'error' is assigned a value but never used.","'TextField' is defined but never used.","'InputAdornment' is defined but never used.","'IconButton' is defined but never used.","'personID' is assigned a value but never used.","'personProfil' is assigned a value but never used.","'personLernfaecher' is assigned a value but never used.","'lernfach' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'getNachrichten'.","MethodDefinition","'Card' is defined but never used.","'currentPerson' is assigned a value but never used.","'FormHelperText' is defined but never used.","'NativeSelect' is defined but never used.","'withStyles' is defined but never used.","'ButtonGroup' is defined but never used.","'classes' is assigned a value but never used.","'gruppeName' is assigned a value but never used.","'showProfil' is assigned a value but never used.","'selectedValue' is assigned a value but never used.","'setSelectedValue' is assigned a value but never used.","'data' is assigned a value but never used.","'lernfaecherauswahl' is assigned a value but never used.","'lernfaecherValidationFailed' is assigned a value but never used.","'LernpartnerAPI' is defined but never used.","'showChatVerlassenForm' is assigned a value but never used.","'lerngruppeID' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'person' is assigned a value but never used.","'lerngruppe' is assigned a value but never used.","'Nachricht' is defined but never used.","'currentperson' is assigned a value but never used.","'konversation_ID' is assigned a value but never used.","'personName' is assigned a value but never used.",["417"],["418"],"'DialogContentText' is defined but never used.","'TeachingbeeAPI' is defined but never used.","'GroupBO' is defined but never used.","'GruppenListeEintrag' is defined but never used.","'lernfaecherNameEdited' is assigned a value but never used.","'tageszeitenEdited' is assigned a value but never used.","'tageEdited' is assigned a value but never used.","'frequenzEdited' is assigned a value but never used.","'lernartEdited' is assigned a value but never used.","'lernortEdited' is assigned a value but never used.","'updatingInProgress' is assigned a value but never used.","'updatingError' is assigned a value but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'LerngruppeBO' is defined but never used.","'ProfilBO' is defined but never used.","'PersonBO' is defined but never used.","'VorschlagListeEintrag' is defined but never used.","'personVorname' is assigned a value but never used.","'teilnahmeChat' is assigned a value but never used.","'teilnahmeChatPartner' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]