[{"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/index.js":"1","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/App.js":"2","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/firebaseconfig.js":"3","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/Theme.js":"4","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/pages/About.js":"5","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/Profil.js":"6","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/layout/Header.js":"7","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/GruppenListe.js":"8","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ContextErrorMessage.js":"9","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/LoadingProgress.js":"10","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/RegistrierungForm.js":"11","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/LernfaecherForm.js":"12","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/pages/SignIn.js":"13","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/KonversationListe.js":"14","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/MeinProfil.js":"15","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernpartnerAPI.js":"16","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfileDropDown.js":"17","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/VorschlagListe.js":"18","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/GruppenListeEintrag.js":"19","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/NachrichtBO.js":"20","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppenForm.js":"21","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/AnfrageEingangForm.js":"22","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/ProfilBO.js":"23","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/MeinProfilForm.js":"24","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/PersonBO.js":"25","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/VorschlagBO.js":"26","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernvorliebenBO.js":"27","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeChatBO.js":"28","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/KonversationBO.js":"29","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeGruppeBO.js":"30","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/LerngruppeBO.js":"31","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernfachBO.js":"32","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/KonversationListeEintrag.js":"33","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/index.js":"34","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/VorschlagListeEintrag.js":"35","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppeVerlassenDialog.js":"36","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppenBearbeitenForm.js":"37","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/BusinessObject.js":"38","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/NamedBusinessObject.js":"39","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/AnfrageEingangFormEintrag.js":"40","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/MultiSelectLernfaecher.js":"41","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ChatVerlassenForm.js":"42","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/AnfrageForm.js":"43","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/NachrichtListe.js":"44","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/NachrichtListeEintrag.js":"45","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/AnfrageAusstehendEintrag.js":"46","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfilDialog.js":"47","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfilLoeschenForm.js":"48"},{"size":146,"mtime":1620224527838,"results":"49","hashOfConfig":"50"},{"size":6455,"mtime":1625235220998,"results":"51","hashOfConfig":"50"},{"size":579,"mtime":1624392897666,"results":"52","hashOfConfig":"50"},{"size":1798,"mtime":1625387790765,"results":"53","hashOfConfig":"50"},{"size":844,"mtime":1625355382212,"results":"54","hashOfConfig":"50"},{"size":8136,"mtime":1625403445671,"results":"55","hashOfConfig":"50"},{"size":1961,"mtime":1625301507891,"results":"56","hashOfConfig":"50"},{"size":5520,"mtime":1625158227974,"results":"57","hashOfConfig":"50"},{"size":2113,"mtime":1622130118194,"results":"58","hashOfConfig":"50"},{"size":862,"mtime":1622130118194,"results":"59","hashOfConfig":"50"},{"size":22784,"mtime":1625337024421,"results":"60","hashOfConfig":"50"},{"size":4800,"mtime":1625403445683,"results":"61","hashOfConfig":"50"},{"size":1877,"mtime":1625397509538,"results":"62","hashOfConfig":"50"},{"size":7467,"mtime":1625403445666,"results":"63","hashOfConfig":"50"},{"size":13580,"mtime":1625391603064,"results":"64","hashOfConfig":"50"},{"size":51650,"mtime":1625397343409,"results":"65","hashOfConfig":"50"},{"size":3435,"mtime":1625397343334,"results":"66","hashOfConfig":"50"},{"size":4942,"mtime":1625403445673,"results":"67","hashOfConfig":"50"},{"size":8853,"mtime":1625403445664,"results":"68","hashOfConfig":"50"},{"size":1501,"mtime":1625397343320,"results":"69","hashOfConfig":"50"},{"size":20516,"mtime":1625403445772,"results":"70","hashOfConfig":"50"},{"size":9338,"mtime":1625403541950,"results":"71","hashOfConfig":"50"},{"size":1391,"mtime":1625397343323,"results":"72","hashOfConfig":"50"},{"size":22308,"mtime":1625403445685,"results":"73","hashOfConfig":"50"},{"size":2690,"mtime":1625397343322,"results":"74","hashOfConfig":"50"},{"size":1632,"mtime":1625397343327,"results":"75","hashOfConfig":"50"},{"size":4120,"mtime":1625397343319,"results":"76","hashOfConfig":"50"},{"size":1670,"mtime":1625397343325,"results":"77","hashOfConfig":"50"},{"size":900,"mtime":1625388617249,"results":"78","hashOfConfig":"50"},{"size":1171,"mtime":1625397343326,"results":"79","hashOfConfig":"50"},{"size":1043,"mtime":1625388617250,"results":"80","hashOfConfig":"50"},{"size":869,"mtime":1625388617249,"results":"81","hashOfConfig":"50"},{"size":5690,"mtime":1625403445667,"results":"82","hashOfConfig":"50"},{"size":435,"mtime":1625388617251,"results":"83","hashOfConfig":"50"},{"size":11508,"mtime":1625403445674,"results":"84","hashOfConfig":"50"},{"size":4186,"mtime":1625403445678,"results":"85","hashOfConfig":"50"},{"size":16148,"mtime":1625403445680,"results":"86","hashOfConfig":"50"},{"size":774,"mtime":1625388617248,"results":"87","hashOfConfig":"50"},{"size":375,"mtime":1622130118189,"results":"88","hashOfConfig":"50"},{"size":10972,"mtime":1625404573440,"results":"89","hashOfConfig":"50"},{"size":2582,"mtime":1625397343332,"results":"90","hashOfConfig":"50"},{"size":3891,"mtime":1625235221003,"results":"91","hashOfConfig":"50"},{"size":12282,"mtime":1625403445676,"results":"92","hashOfConfig":"50"},{"size":9379,"mtime":1625403445778,"results":"93","hashOfConfig":"50"},{"size":5573,"mtime":1625403445669,"results":"94","hashOfConfig":"50"},{"size":7404,"mtime":1625403445661,"results":"95","hashOfConfig":"50"},{"size":10519,"mtime":1625350020717,"results":"96","hashOfConfig":"50"},{"size":7859,"mtime":1625403445687,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1h9qmix",{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"100"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"100"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"100"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"100"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"100"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/index.js",[],["205","206"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/App.js",["207","208","209"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { Container, ThemeProvider, CssBaseline } from '@material-ui/core';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport Header from './components/layout/Header';\nimport KonversationListe from './components/KonversationListe';\n//import VorschlagListe from './components/VorschlagListe';\nimport LernpartnerAPI from './api/LernpartnerAPI';\nimport About from './components/pages/About';\nimport Theme from './Theme';\nimport SignIn from './components/pages/SignIn';\nimport RegistrierungForm from './components/dialogs/RegistrierungForm';\nimport MeinProfil from './components/MeinProfil';\nimport LoadingProgress from './components/dialogs/LoadingProgress';\nimport ContextErrorMessage from './components/dialogs/ContextErrorMessage';\nimport firebaseConfig from './firebaseconfig';\nimport LernfaecherForm from './components/dialogs/LernfaecherForm';\nimport Profil from './components/Profil';\nimport GruppenListe from './components/GruppenListe';\nimport NachrichtListe from './components/NachrichtListe';\n\nclass App extends React.Component {\n\n\t/** Constructor of the app, which initializes firebase  */\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// Init an empty state\n\t\tthis.state = {\n\t\t\tcurrentUser: null,\n\t\t\tpersonName: null,\n\t\t\tpersonneu: false,\n\t\t\tappError: null,\n\t\t\tauthError: null,\n\t\t\tauthLoading: false,\n\t\t\tUserneu: null,\n\t\t\tcurrentPerson: null,\n\t\t\t\n\t\t};\n\t}\n\n\t/** \n\t * Create an error boundary for this app and recieve all errors from below the component tree.\n\t * \n\t * @See See Reacts [Error Boundaries](https://reactjs.org/docs/error-boundaries.html)\n \t */\n\tstatic getDerivedStateFromError(error) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { appError: error };\n\t}\n\n\t/** Handles firebase users logged in state changes  */\n\thandleAuthStateChange = user => {\n\t\tif (user) {\n\t\t\tthis.setState({\n\t\t\t\tauthLoading: true\n\t\t\t});\n\t\t\t// The user is signed in\n\t\t\tuser.getIdToken().then(token => {\n\t\t\t\t// Add the token to the browser's cookies. The server will then be\n\t\t\t\t// able to verify the token against the API.\n\t\t\t\t// SECURITY NOTE: As cookies can easily be modified, only put the\n\t\t\t\t// token (which is verified server-side) in a cookie; do not add other\n\t\t\t\t// user information.\n\t\t\t\tdocument.cookie = `token=${token};path=/`;\n\n\t\t\t\t// Set the user not before the token arrived \n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrentUser: user,\n\t\t\t\t\tauthError: null,\n\t\t\t\t\tauthLoading: false\n\t\t\t\t\n\t\t\t\t})}).then(() => {\n\t\t\t\tthis.getPersonByGoogleID()\n\t\t\t}).catch(e => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tauthError: e,\n\t\t\t\t\tauthLoading: false\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\t// User has logged out, so clear the id token\n\t\t\tdocument.cookie = 'token=;path=/';\n\n\t\t\t// Set the logged out user to null\n\t\t\tthis.setState({\n\t\t\t\tcurrentUser: null,\n\t\t\t\tauthLoading: false\n\t\t\t});\n\t\t}\n\t}\n\n  /** \n   * Handles the sign in request of the SignIn component uses the firebase.auth() component to sign in.\n\t * @see See Google [firebase.auth()](https://firebase.google.com/docs/reference/js/firebase.auth.Auth)\n\t * @see See Google [firebase.auth().signInWithRedirect](https://firebase.google.com/docs/reference/js/firebase.auth.Auth#signinwithredirect)\n\t */\n\thandleSignIn = () => {\n\t\tthis.setState({\n\t\t\tauthLoading: true\n\t\t});\n\t\tconst provider = new firebase.auth.GoogleAuthProvider();\n\t\tfirebase.auth().signInWithRedirect(provider);\n\t}\n\n\t//aktuell eingeloggten Student vom Backend abfragen\n\t\n\tgetPersonByGoogleID = () => {\n\t\tLernpartnerAPI.getAPI().getPersonByGoogleID(this.state.currentUser.uid)\n\t\t\t.then(personBO =>\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrentPerson: personBO,\n\t\t\t\t\tpersonName: personBO.getvorname(),\n\t\t\t\t\terror: null,\n\t\t\t\t\tloadingInProgress: false,\n\t\t\t\t}))\n\t\t\t\t.catch(e =>\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tcurrentPerson: null,\n\t\t\t\t\t\terror: e,\n\t\t\t\t\t\tloadingInProgress: false,\n\t\t\t\t\t}));\n\t\t\tthis.setState({\n\t\t\t\terror: null,\n\t\t\t\tloadingInProgress: true\n\t\t\t});\n\t\t\n\t\tsetTimeout(()=>{\n\t\t  console.log(this.state);\n\t\t},1000);\n\t\t}\n\t\n\t/**\n\t * Lifecycle method, which is called when the component gets inserted into the browsers DOM.\n\t * Initializes the firebase SDK.\n\t * \n\t * @see See Googles [firebase init process](https://firebase.google.com/docs/web/setup)\n\t */\n\tcomponentDidMount() {\n\t\tfirebase.initializeApp(firebaseConfig);\n\t\tfirebase.auth().languageCode = 'en';\n\t\tfirebase.auth().onAuthStateChanged(this.handleAuthStateChange);\n\t\n\t}\n\n\t/** Renders the whole app */\n\trender() {\n\t\tconst { currentUser, currentPerson, personneu, personName, appError, authError, authLoading} = this.state;\n\t\tconsole.log(personName)\n\t\tconsole.log(personneu)\n\t\treturn (\n\t\t\t<ThemeProvider theme={Theme}>\n\t\t\t\t{/* Global CSS reset and browser normalization. CssBaseline kickstarts an elegant, consistent, and simple baseline to build upon. */}\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t<Container maxWidth='md'>\n\t\t\t\t\t\n\t\t\t\t\t\t<Header user={currentUser} currentPerson={currentPerson}/>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Is a user signed in?\n\t\t\t\t\t\t\tcurrentUser && (currentPerson) ?\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Redirect from='/' to='meinProfil'/>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<Route exact path='/meinprofil' component={MeinProfil}>\n\t\t\t\t\t\t\t\t\t\t<MeinProfil currentPerson={currentPerson}/>\n\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t<Route path='/meinelerngruppen'>\n                                    \t<GruppenListe currentPerson={currentPerson}/>\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<Route path='/meinevorschlaege'>\n\t\t\t\t\t\t\t\t\t\t<LernfaecherForm currentPerson={currentPerson}/>\n\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t<Route path='/meinechats'>\n\t\t\t\t\t\t\t\t\t\t<KonversationListe currentPerson={currentPerson} />\n\t\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t\t<Route path='/chat'>\n\t\t\t\t\t\t\t\t\t\t<NachrichtListe currentPerson={currentPerson} />\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<Route path='/about' component={About} />\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t// else show the sign in page\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Redirect to='/index.html' />\n\t\t\t\t\t\t\t\t\t<SignIn onSignIn={this.handleSignIn} />\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t<LoadingProgress show={authLoading} />\n\t\t\t\t\t\t<ContextErrorMessage error={authError} contextErrorMsg={`Something went wrong during sign in process.`} onReload={this.handleSignIn} />\n\t\t\t\t\t\t<ContextErrorMessage error={appError} contextErrorMsg={`Something went wrong inside the app. Please reload the page.`} />\n\t\t\t\t\t</Container>\n\t\t\t\t\n\t\t\t\t</Router>\n\t\t\t</ThemeProvider>\n\t\t);\n\t}\n}\n\nexport default App;\n","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/firebaseconfig.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/Theme.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/pages/About.js",["210"],"import React from 'react'\nimport { makeStyles, Paper, Typography, Link } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1)\n  },\n  content: {\n    margin: theme.spacing(1),\n  }\n}));\n\n/**\n * Shows the about page with the impressum\n */\n\n\nfunction About() {\n\n    const classes = useStyles();\n  \n    return (\n      <Paper elevation={0} className={classes.root}>\n        <div className={classes.content}>\n          <Typography variant='h6'>\n            App zum Auffinden von Lernpartnern\n          </Typography>\n          <Typography variant='body2'>\n            © Hochschule der Medien 2020, all rights reserved.\n          </Typography>\n        </div>\n      </Paper>\n    )\n  }\n  \n  export default About;","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/Profil.js",["211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/layout/Header.js",["227","228"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Paper, Typography, Tabs, Tab, AppBar, Toolbar, Box } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport ProfileDropDown from '../dialogs/ProfileDropDown';\nimport logo from './Logo.png';\n\nclass Header extends Component {\n\n  constructor(props) {\n    super(props);\n\n    // Init an empty state\n    this.state = {\n      tabindex: 0\n    };\n  }\n\n  /** Handles onChange events of the Tabs component */\n handleTabChange = (e, newIndex) => {\n    // console.log(newValue)\n    this.setState({\n      tabindex: newIndex\n    })\n  };\n\n  /** Renders the component */\n  render() {\n    const { user, currentPerson } = this.props;\n\n    return (\n    <div style={{ width: '100%'}}>\n      <AppBar style={{ backgroundColor: '#cdb79e'}}>\n      <Toolbar>\n        <img src={logo} alt=\"Easy Learn\" style={{ width : 150, margin: 5}}/>\n\n        {\n          user ?\n        <>\n        <Box display=\"flex\" flexDirection=\"row-reverse\" justifyContent=\"flex-end\" p={1} marginLeft={40}>\n            <Tabs indicatorColor='primary' textColor='tab' variant=\"fullWidth\" onChange={this.handleTabChange} right>\n              <Tab label='Profil' component={RouterLink} to={`/meinprofil`}/>\n              <Tab label='Lerngruppen' component={RouterLink} to={`/meinelerngruppen`}/>\n              <Tab label='Vorschläge' component={RouterLink} to={`/meinevorschlaege`}/>\n              <Tab label='Chats' component={RouterLink} to={`/meinechats`}/>\n              <Tab label='About' component={RouterLink} to={`/about`} />\n            </Tabs>\n         </Box>\n         <ProfileDropDown user={currentPerson} />\n         </>\n         : null\n          \n\n          }\n\n\n      </Toolbar>\n      </AppBar>\n      <Toolbar />\n      </div>\n    )\n  }\n}\n\n/** PropTypes */\nHeader.propTypes = {\n  /** The logged in firesbase currentPerson */\n  currentPerson: PropTypes.object,\n}\n\nexport default Header;","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/GruppenListe.js",["229","230","231","232","233","234"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'\nimport { withStyles, Button, TextField, InputAdornment, IconButton, Grid, Typography } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\nimport GruppenListeEintrag from './GruppenListeEintrag';\n//import SaveIcon from '@material-ui/icons/Save';\n//import Table from '@material-ui/core/Table';\n//import TableBody from '@material-ui/core/TableBody';\n//import TableCell from '@material-ui/core/TableCell';\n//import TableContainer from '@material-ui/core/TableContainer';\n//import TableHead from '@material-ui/core/TableHead';\n//import TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\n\n/**\n * Es werden alle Vorschläge des aktuell eingeloggten Studenten angezeigt\n *\n * @see See [VorschlagListeEintrag](#vorschaglisteeintrag)\n *\n * Hierfür werden alle Vorschläge des aktuell eingeloggten Student geladen und in die Componente VorschlagListeEintrag gemappt\n *\n */\n\n\nclass GruppenListe extends Component {\n\n    constructor(props){\n        super(props);\n\n        let expandedID = null;\n\n        if (this.props.location.expandLerngruppe) {\n          expandedID = this.props.location.expandLerngruppe.getID();\n        }\n\n        // Init an empty state\n        this.state = {\n          lerngruppen: [],\n          error: null,\n          loadingInProgress: false,\n          expandedLerngruppeID: expandedID,\n          //showCustomerForm: false\n        };\n\n    }\n\n    /** Fetches all LerngruppenBOs from the backend */\n    getLerngruppen = () => {\n        LernpartnerAPI.getAPI().getLerngruppe(this.props.currentPerson.id)\n            .then(lerngruppeBOs =>\n                this.setState({               // Set new state when LerngruppeBOs have been fetched\n                    lerngruppen: lerngruppeBOs,\n                    //name: lerngruppeBO.name\n                    loadingInProgress: false,   // disable loading indicator\n                    error: null\n                })).catch(e =>\n                    this.setState({             // Reset state with error from catch\n                        lerngruppen: [],\n                        loadingInProgress: false, // disable loading indicator\n                        error: e\n                    })\n                );\n\n        // set loading to true\n        this.setState({\n            loadingInProgress: true,\n            error: null\n        });\n    }\n\n    /**\n     * Handles onExpandedStateChange events from the GruppeListeEintrag component. Toggels the expanded state of\n     * the GruppeListeEintrag of the given LerngruppeBO.\n     *\n     * @param {lerngruppe} LerngruppeBO of the GruppeListeEintrag to be toggeled\n     */\n    onExpandedStateChange = lerngruppe => {\n        // console.log(vorschlagID);\n        // Set expandend Lerngruppe Eintrag to null by default\n        let newID = null;\n\n        // If same lerngruppe entry is clicked, collapse it else expand a new one\n        if (lerngruppe.getID() !== this.state.expandedLerngruppeID) {\n        // Expand the lerngruppe entry with lerngruppeID\n        newID = lerngruppe.getID();\n        }\n        // console.log(newID);\n        this.setState({\n        expandedLerngruppeID: newID,\n        });\n    }\n\n   /**\n   * Handles lerngruppeVerlassen events from the GruppenListeEintrag component\n   */\n    lerngruppeVerlassen = () => {\n        this.getLerngruppen();\n        this.setState({\n            lerngruppen: this.state.lerngruppen,\n            //showCustomerForm: false\n        });\n    }\n\n    /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\n    componentDidMount() {\n        this.getLerngruppen();\n    }\n\n    render() {\n        const { classes, currentPerson } = this.props;\n        const { lerngruppen, personID, expandedLerngruppeID, loadingInProgress, error }  = this.state;\n        console.log(lerngruppen)\n\n        return (\n            <div className={classes.root}>\n                <Grid container spacing={1} justify='flex-start' alignItems='center'>\n                    <Grid item >\n                        <Typography>\n                            <h1>Lerngruppen</h1>\n                        </Typography>\n                    </Grid>\n                </Grid>\n                {\n                    lerngruppen.map(lerngruppe =>\n                    <GruppenListeEintrag key={lerngruppe.getID()} lerngruppe={lerngruppe} currentPerson={currentPerson} expandedState={expandedLerngruppeID === lerngruppe.getID()}\n                      onExpandedStateChange={this.onExpandedStateChange}\n                      onTeilnahmeGruppeDeleted={this.lerngruppeVerlassen}\n                    />)\n                }\n                <LoadingProgress show={loadingInProgress} />\n                <ContextErrorMessage error={error} contextErrorMsg={`Sorry, deine Lerngruppen konnten nicht geladen werden!`} onReload={this.getLerngruppen} />\n            </div>\n        );\n      }\n    }\n\n/** Component specific styles */\nconst styles = theme => ({\n  root: {\n      width: '100%',\n  },\n  content: {\n      margin: theme.spacing(1),\n  }\n});\n\n/** PropTypes */\nGruppenListe.propTypes = {\n    /** @ignore */\n    classes: PropTypes.object.isRequired,\n    /** @ignore */\n    location: PropTypes.object.isRequired,\n}\n\n\nexport default withRouter(withStyles(styles)(GruppenListe));","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ContextErrorMessage.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/LoadingProgress.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/RegistrierungForm.js",["235","236","237","238","239"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Card,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    } from '@material-ui/core';\nimport { LernpartnerAPI } from '../../api';\nimport { withRouter } from 'react-router-dom';\nimport MultiSelectLernfaecher from './MultiSelectLernfaecher';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ContextErrorMessage from './ContextErrorMessage';\nimport LoadingProgress from './LoadingProgress';\n/** \n * Renders a landing page for users who are not signed in. Provides a sign in button \n * for using an existing google account to sign in. The component uses firebase to \n * do redirect based signin process.\n * \n * @see See Googles [firebase authentication](https://firebase.google.com/docs/web/setup)\n * @see See Googles [firebase API reference](https://firebase.google.com/docs/reference/js)\n * \n */\nclass RegistrierungForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        // Init the state\n        this.state = {\n            name: '',\n            nameValidationFailed: false,\n            nameEdited: false,\n\n            vorname: null,\n            vornameValidationFailed: false,\n            vornameEdited: false,\n\n            alter: null,\n            alterValidationFailed: false,\n            alterEdited: false,\n\n            geschlecht: null,\n            geschlechtValidationFailed: false,\n            geschlechtEdited: false,\n\n            semester: null,\n            semesterValidationFailed: false,\n            semesterEdited: false,\n\n            studiengang: null,\n            studiengangValidationFailed: false,\n            studiengangEdited: false,\n\n            lerngruppe: null,\n            lerngruppeValidationFailed: false,\n            lerngruppeEdited: false,\n\n            tageszeiten: null,\n            tageszeitenValidationFailed: false,\n            tageszeitenEdited: false,\n\n            tage: null,\n            tageValidationFailed: false,\n            tageEdited: false,\n\n            frequenz: null,\n            frequenzValidationFailed: false,\n            frequenzEdited: false,\n\n            lernart: null,\n            lernartValidationFailed: false,\n            lernartEdited: false,\n\n            gruppengroesse: null,\n            gruppengroesseValidationFailed: false,\n            gruppengroesseEdited: false,\n\n            lernort: null,\n            lernortValidationFailed: false,\n            lernortEdited: false,\n\n            lernfaecher: [],\n            lernfaecherValidationFailed: false,\n            lernfaecherEdited: false,\n\n            gruppe: 0,\n            profil: null,\n            personLernvorliebenID: null,\n\n            addingError: null,\n            addingInProgress: false,\n\n            updatingError: null,\n            updatingInProgress: false,\n            \n            \n        };\n        // save this state for canceling\n        this.baseState = this.state;\n\n        //Binding der handleChange Methoden an die Komponente\n        this.handleChangeStudiengang = this.handleChangeStudiengang.bind(this);\n        this.handleChangeLerngruppe = this.handleChangeLerngruppe.bind(this);\n        this.handleChangeGeschlecht = this.handleChangeGeschlecht.bind(this);\n        this.handleChangeTageszeiten = this.handleChangeTageszeiten.bind(this);\n        this.handleChangeTage = this.handleChangeTage.bind(this);\n        this.handleChangeFrequenz = this.handleChangeFrequenz.bind(this);\n        this.handleChangeLernart = this.handleChangeLernart.bind(this);\n        this.handleChangeGruppengroesse = this.handleChangeGruppengroesse.bind(this);\n        this.handleChangeLernort = this.handleChangeLernort.bind(this);\n        this.onChangeLernfaecher = this.onChangeLernfaecher.bind(this);\n        }\n    \n\n    /** Updaten der Person. Über Security Decorator wurde bereits ein Person, Profil und\n     * Lernvorlieben Objekt erstellt, weswegen die \"Registrierung\" hier ein Update ist\n     */\n    updatenPerson = () => {\n        let person = this.props.currentPerson;\n        LernpartnerAPI.getAPI().updatePerson(person.id, this.state.name, this.state.vorname, this.state.semester, this.state.studiengang, this.state.alter, this.state.geschlecht,\n          this.state.lerngruppe).then(person => {\n            // Backend call erfolgreich\n            // Initialisiert State neu\n            this.setState(this.baseState);\n            this.props.onClose(person); // Ruft parent Komponente auf mit neuem Person-Objekt aus Backend\n        }).catch(e =>\n            this.setState({\n                updatingInProgress: false,    // disable loading indicator \n                updatingError: e              // show error message\n            })\n        );\n        // set loading to true\n        this.setState({\n            updatingInProgress: true,       // show loading indicator\n            updatingError: null             // disable error message\n      });\n    }\n\n    // API Anbindung um das Profil der Person vom Backend zu bekommen, um dieses dann zu updaten\n   getProfil = () => {\n\t\tLernpartnerAPI.getAPI().getProfil(this.props.currentPerson.getprofil())\n\t\t\t.then(profilBO =>\n\t\t\t\tthis.setState({\n            profil: profilBO,\n            personLernvorliebenID: profilBO.lernvorlieben_id,\n            error: null,\n            loadingInProgress: false,\n          })).catch(e =>\n            this.setState({\n              profil: null,\n              personLernvorliebenID: null,\n              error: e,\n              loadingInProgress: false,\n            }));\n      // set loading to true\n      this.setState({\n        loadingInProgress: true,\n        loadingError: null\n      });\n    }\n\n  /** Updaten des Profils mit den ausgewählten Daten */\n  updatenProfil = () => {\n    LernpartnerAPI.getAPI().updateProfil(this.state.profil.id, this.state.gruppe, this.state.lernfaecher, this.state.personLernvorliebenID\n    ).then(profil => {\n        // Backend call erfolgreich\n        // Initialisiert State neu für nächste Registrierung\n        this.setState(this.baseState);\n    }).catch(e =>\n        this.setState({\n            updatingInProgress: false,    // disable loading indicator\n            updatingError: e              // show error message\n        })\n    );\n\n    // set loading to true\n    this.setState({\n        updatingInProgress: true,       // show loading indicator\n        updatingError: null             // disable error message\n  });\n}\n\n  /** Updaten der zugehörigen Lervorlieben über ID aus Profil */\n    updatenLernvorlieben = () => {\n        LernpartnerAPI.getAPI().updateLernvorlieben(this.state.personLernvorliebenID, this.state.tageszeiten, this.state.tage, this.state.frequenz, this.state.lernart, this.state.gruppengroesse, this.state.lernort)\n        .then(lernvorlieben => {\n            // Backend call erfolgreich\n            // Initialisiert State neu für nächste Registrierung\n            this.setState(this.baseState);\n        }).catch(e =>\n            this.setState({\n                updatingInProgress: false,    // disable loading indicator\n                updatingError: e              // show error message\n            })\n        );\n        // set loading to true\n        this.setState({\n            updatingInProgress: true,       // show loading indicator\n            updatingError: null             // disable error message\n      });\n    }\n\t/** \n\t * Handles the click event of the sign in button an calls the prop onSignIn handler\n\t \n\thandleSignInButtonClicked = () => {\n\t\tthis.props.onSignIn();\n\t}\n    */\n   /** Handles value changes of the forms textfields and validates them */\n    textFieldValueChange = (event) => {\n        const value = event.target.value;\n\n        let error = false;\n        if (value.trim().length === 0) {\n        error = true;\n        }\n\n        this.setState({\n        [event.target.id]: event.target.value,\n        [event.target.id + 'ValidationFailed']: error,\n        [event.target.id + 'Edited']: true\n        });\n    }\n\n    //Setzen der Werte aus der Validierung\n    setStateValueChange(event, error) {\n      this.setState({\n          [event.target.id]: event.target.value,\n          [event.target.id + 'ValidationFailed']: error,\n          [event.target.id + 'Edited']: true\n      });\n  }\n\n    // Validierung der Textfeldaenderungen nur numerische Werte\n    numberValueChange = (event) => {\n        const value = event.target.value;\n        const re = /^[0-9]{1,10}$/;\n\n        let error = false;\n        if (value.trim().length === 0) {\n            error = true;\n        }\n        if (re.test(event.target.value) === false) {\n            error = true;\n        }\n        this.setStateValueChange(event, error);\n    }\n\n    //Setzen des Status, bei schließen des Dialogs\n    handleClose = () => {\n        this.setState(this.baseState);\n        this.props.onClose(null);\n    }\n\n    //Handle Change des Studiengang-Dropdowns\n    handleChangeStudiengang(event) {\n      this.setState({studiengang: event.target.value});\n    }\n\n    //Handle Change des Lerngruppen-Dropdowns\n    handleChangeLerngruppe(event) {\n      this.setState({lerngruppe: event.target.value});\n    }\n\n    //Handle Change des Geschlecht-Dropdowns\n    handleChangeGeschlecht(event) {\n      this.setState({geschlecht: event.target.value});\n    }\n\n    //Handle Change des Tageszeiten-Dropdowns\n    handleChangeTageszeiten(event) {\n      this.setState({tageszeiten: event.target.value});\n    }\n\n    //Handle Change des Tage-Dropdowns\n    handleChangeTage(event) {\n      this.setState({tage: event.target.value});\n    }\n\n    //Handle Change des Frequenz-Dropdowns\n    handleChangeFrequenz(event) {\n      this.setState({frequenz: event.target.value});\n    }\n\n    //Handle Change des Lernart-Dropdowns\n    handleChangeLernart(event) {\n      this.setState({lernart: event.target.value});\n    }\n\n    //Handle Change des Gruppengroesse-Dropdowns\n    handleChangeGruppengroesse(event) {\n      this.setState({gruppengroesse: event.target.value});\n    }\n\n    //Handle Change des Lernort-Dropdowns\n    handleChangeLernort(event) {\n      this.setState({lernort: event.target.value});\n    }\n\n    //Handle Change des Lernfaecher-Dropdowns\n    onChangeLernfaecher(newLernfaecher) {\n      console.log(newLernfaecher)\n      this.setState({\n        lernfaecher: newLernfaecher\n      \n    })\n  }\n\n  \n\t/** Rendert den Dialog, wenn CurrentPerson Vorname gleich null, sprich die Person neu im System ist */\n\t/** Renders the component */\n    render() {\n        const { classes, show, currentPerson, } = this.props;\n        const { \n          profil, \n          personLernvorliebenID, \n          name, \n          nameValidationFailed, \n          vorname, \n          vornameValidationFailed, \n          semester, \n          semesterValidationFailed, \n          studiengang, \n          studiengangValidationFailed,\n          alter, \n          alterValidationFailed, \n          geschlecht, \n          geschlechtValidationFailed, \n          lerngruppe, \n          lerngruppeValidationFailed, \n          tageszeiten,\n          tageszeitenValidationFailed, \n          tage, \n          tageValidationFailed, \n          frequenz, \n          frequenzValidationFailed, \n          lernart, \n          lernartValidationFailed, \n          gruppengroesse, \n          gruppengroesseValidationFailed,\n          lernort, \n          lernortValidationFailed,\n          lernfach, \n          lernfaecherValidationFailed, \n          addingInProgress,\n          updatingInProgress, \n          updatingError} = this.state;\n    \n        console.log(profil)\n        console.log(personLernvorliebenID)\n        let title = 'Registriere dich zuerst, bevor du die App nutzen kannst!';\n        let header = 'Bitte gib deine Daten ein:';\n    \n        return (\n            show ?\n            <Dialog open={show} onEnter={this.getProfil}>\n              <DialogTitle id='form-dialog-title'>{title}\n                  \n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  {header}\n                </DialogContentText>\n                <form className={classes.root} noValidate autoComplete='off'>\n\n                  <TextField className={classes.textfield} autoFocus type='text' required fullWidth margin='normal' id='name' label='Nachname:' value={name}\n                    onChange={this.textFieldValueChange} error={nameValidationFailed}\n                    helperText={nameValidationFailed ? 'The last name must contain at least one character' : ' '} />\n\n                  <TextField className={classes.textfield} autoFocus type='text' required fullWidth margin='normal' id='vorname' label='Vorname:' value={vorname} \n                    onChange={this.textFieldValueChange} error={vornameValidationFailed} \n                    helperText={vornameValidationFailed ? 'The first name must contain at least one character' : ' '} />\n                  \n                  <TextField className={classes.textfield} autoFocus type='text' required fullWidth margin='normal' id='semester' label='Semester:' value={semester} \n                    onChange={this.numberValueChange} error={semesterValidationFailed} \n                    helperText={geschlechtValidationFailed ? 'The semester must contain at least one character' : ' '} /> \n                    \n                  <FormControl required fullWidth margin='normal' className={classes.formControl}>\n                            <InputLabel>Studiengang</InputLabel>\n                             <Select  error={studiengangValidationFailed} value={studiengang} onChange={this.handleChangeStudiengang}>\n                                <MenuItem value='Audiovisuelle Medien'>Audiovisuelle Medien</MenuItem>\n                                <MenuItem value='Crossmedia-Redaktion/Public Relations'>Crossmedia-Redaktion/Public Relations</MenuItem>\n                                <MenuItem value='Deutsch-chinesischer Studiengang Medien und Technologie'>Deutsch-chinesischer Studiengang Medien und Technologie</MenuItem>\n                                <MenuItem value='Informationsdesign'>Informationsdesign</MenuItem>\n                                <MenuItem value='Infomationswissenschaften'>Infomationswissenschaften</MenuItem>\n                                <MenuItem value='Integriertes Produktdesign'>Integriertes Produktdesign</MenuItem>\n                                <MenuItem value='Mediapublishing'>Mediapublishing</MenuItem>\n                                <MenuItem value='Medieninformatik'>Medieninformatik</MenuItem>\n                                <MenuItem value='Medienwirtschaft'>Medienwirtschaft</MenuItem>\n                                <MenuItem value='Mobile Medien'>Mobile Medien</MenuItem>\n                                <MenuItem value='Online-Medien-Management'>Online-Medien-Management</MenuItem>\n                                <MenuItem value='Print Media Technologies'>Print Media Technologies</MenuItem>\n                                <MenuItem value='Verpackungstechnik'>Verpackungstechnik</MenuItem>\n                                <MenuItem value='Werbung & Marktkommunikation'>Werbung & Marktkommunikation</MenuItem>\n                                <MenuItem value='Wirtschaftsinformatik und digitale Medien'>Wirtschaftsinformatik und digitale Medien</MenuItem>\n                                <MenuItem value='Wirtschaftsingenieurwesen Medien'>Wirtschaftsingenieurwesen Medien</MenuItem>\n                            </Select>\n                   </FormControl>\n                   \n                  <TextField className={classes.textfield} autoFocus type='text' required fullWidth margin='normal' id='alter' label='Alter:' value={alter} \n                    onChange={this.numberValueChange} error={alterValidationFailed} \n                    helperText={alterValidationFailed ? 'The age must contain at least one character' : ' '} />\n  \n                  <FormControl required fullWidth margin='normal' className={classes.formControl}>\n                            <InputLabel>Geschlecht:</InputLabel>\n                             <Select  error={geschlechtValidationFailed} value={geschlecht} onChange={this.handleChangeGeschlecht}>\n                                <MenuItem value='weiblich'>Weiblich</MenuItem>\n                                <MenuItem value='männlich'>Männlich</MenuItem>\n                                <MenuItem value='divers'>Divers</MenuItem>\n                            </Select>\n                   </FormControl>\n\n                  <FormControl required fullWidth className={classes.formControl}>\n                            <InputLabel>Interesse an einer Lerngruppe?</InputLabel>\n                             <Select required error={lerngruppeValidationFailed} value={lerngruppe} onChange={this.handleChangeLerngruppe}>\n                                <MenuItem value='1'>Ja!</MenuItem>\n                                <MenuItem value='0'>Nein!</MenuItem>\n                            </Select>\n                   </FormControl>\n                  <br/><br/>\n                  <b>Deine Lernvorlieben:</b><br/>\n                  <FormControl required fullWidth margin='normal'className={classes.formControl}>\n                            <InputLabel >Welche Tageszeit präferierst du? </InputLabel>\n                             <Select error={tageszeitenValidationFailed} value={tageszeiten}\n                             onChange={this.handleChangeTageszeiten}>\n                                <MenuItem value='1'>Morgens</MenuItem>\n                                <MenuItem value='2'>Mittags</MenuItem>\n                                <MenuItem value='3'>Abends</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/>\n                   <FormControl required fullWidth margin='normal' className={classes.formControl}>\n                            <InputLabel>Welche Tage präferierst du?</InputLabel>\n                             <Select error={tageValidationFailed} value={tage} onChange={this.handleChangeTage}>\n                                <MenuItem value='1'>Unter der Woche</MenuItem>\n                                <MenuItem value='2'>Am Wochenende</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/>\n                   <FormControl required fullWidth margin='normal' className={classes.formControl}>\n                            <InputLabel>Welche Frequenz präferierst du?</InputLabel>\n                             <Select error={frequenzValidationFailed} value={frequenz} onChange={this.handleChangeFrequenz}>\n                                <MenuItem value='1'>Wöchentlich</MenuItem>\n                                <MenuItem value='2'>Mehrmals die Woche</MenuItem>\n                                <MenuItem value='3'>Alle zwei Wochen</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/> \n                   <FormControl required fullWidth margin='normal' className={classes.formControl}>\n                            <InputLabel>Welche Lernart präferierst du?</InputLabel>\n                             <Select error={lernartValidationFailed} value={lernart} onChange={this.handleChangeLernart}>\n                                <MenuItem value='1'>Visuell</MenuItem>\n                                <MenuItem value='2'>Auditiv</MenuItem>\n                                <MenuItem value='3'>Motorisch</MenuItem>\n                                <MenuItem value='4'>Kommunikativ</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/>\n                   <FormControl required fullWidth margin='normal' className={classes.formControl}>\n                            <InputLabel>Welche Gruppengroesse präferierst du?</InputLabel>\n                             <Select error={gruppengroesseValidationFailed} value={gruppengroesse} onChange={this.handleChangeGruppengroesse}>\n                                <MenuItem value='1'>Bis zu 3 Personen</MenuItem>\n                                <MenuItem value='2'>3-5 Personen</MenuItem>\n                                <MenuItem value='3'>Über 5 Personen</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/>\n                   <FormControl required fullWidth margin='normal' className={classes.formControl}>\n                            <InputLabel>Welchen Lernort präferierst du?</InputLabel>\n                             <Select error={lernortValidationFailed} value={lernort} onChange={this.handleChangeLernort}>\n                                <MenuItem value='1'>Remote</MenuItem>\n                                <MenuItem value='2'>Hochschule</MenuItem>\n                                <MenuItem value='3'>Bibliothek</MenuItem>\n                                <MenuItem value='4'>Cafe</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/>\n                   <FormControl required fullWidth margin='normal' className={classes.formControl}>\n                        <MultiSelectLernfaecher lernfaecher = {lernfach} onChangeLernfaecher = {this.onChangeLernfaecher}/>\n                    </FormControl>\n                </form>\n                <LoadingProgress show={addingInProgress || updatingInProgress} />\n                {\n\n                  <ContextErrorMessage error={updatingError}\n                      contextErrorMsg={`Du konntest leider nicht registriert werden :/`}\n                      onReload={() => {this.updatenPerson(); this.updatenProfil(); this.updatenLernvorlieben();}} />\n\n                }\n              </DialogContent>\n              <DialogActions>\n                {\n                    <Button disabled={nameValidationFailed || vornameValidationFailed || semesterValidationFailed || studiengangValidationFailed || alterValidationFailed || geschlechtValidationFailed || lerngruppeValidationFailed } variant='contained'\n                          onClick={() => {this.updatenPerson(); this.updatenProfil(); this.updatenLernvorlieben();}} color='primary'>\n                          Jetzt registrieren\n                    </Button>\n                }\n              </DialogActions>\n            </Dialog>\n            : null\n        );\n      }\n    \n}\n\n/** Component specific styles */\nconst styles = theme => ({\n\troot: {\n\t\tmargin: theme.spacing(2)\n\t}\n});\n\n/** PropTypes */\nRegistrierungForm.propTypes = {\n\t/** @ignore */\n  classes: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired,\n\t/** \n\t * Handler function, which is called if the user wants to sign in.\n\t */\n  \n\tonSignIn: PropTypes.func.isRequired,\n}\n\nexport default withRouter(withStyles(styles)(RegistrierungForm));","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/LernfaecherForm.js",["240","241","242","243","244","245"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/pages/SignIn.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/KonversationListe.js",["246","247"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/MeinProfil.js",["248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Typography, TableContainer, Table, TableHead, TableCell, Paper, TableRow, TableBody, Link, Grid, Container } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport RegistrierungForm from './dialogs/RegistrierungForm';\nimport MeinProfilForm from './dialogs/MeinProfilForm';\nimport ProfilLoeschenForm from './dialogs/ProfilLoeschenForm';\nimport { LernpartnerAPI } from '../api';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\nimport Button from '@material-ui/core/Button';\n\n/**\n* Es wird das eigene Profil mit den persönlichen Daten, Lernfächern und Lernvorlieben angezeigt.\n* Die Daten werden bei der Registrierung oder der Bearbeitung des Profils eingegeben.\n*\n* @see See MeinProfilForm [Dialog] (https://material-ui.com/components/dialogs)\n*/\n\nclass MeinProfil extends Component {\n\n    constructor(props){\n        super(props);\n\n        // initiiere einen leeren state\n        this.state = {\n            person: null,\n            \n            personVorname: null,\n            personName: this.props.personName,\n            personSemester: null,\n            personAlter: null,\n            personStudiengang: null,\n            lerngruppe: false,\n\n            personProfilID: null,\n            personLernfaecher: [],\n            lernfaechernamen: [],\n\n            personLernvorliebenID: null,\n            profil: null,\n            teilnahmeGruppe: null,\n            lernvorlieben: null,\n\n            lernvorliebentageszeiten: null,\n            lernvorliebentage: null,\n            lernvorliebenfrequenz: null,\n            lernvorliebenlernart: null,\n            lernvorliebengruppengroesse: null,\n            lernvorliebenlernort: null,\n\n            gruppe: false,\n            showMeinProfilForm: false,\n            showProfilLoeschenForm: false,\n            showRegistrierungForm: false,\n            loadingInProgress: false,\n            loadingError: null,\n            \n            \n        };\n    }\n\n    // API Anbindung um die persönlichen Daten der Person vom Backend zu bekommen\n    getPerson = () => {\n    LernpartnerAPI.getAPI().getPersonByGoogleID(this.props.currentPerson.getgoogle_user_id())\n      .then(personBO =>\n          this.setState({\n            person: personBO,\n            personName: personBO.name,\n            personVorname: personBO.vorname,\n            personAlter: personBO.alter,\n            personSemester: personBO.semester,\n            personStudiengang: personBO.studiengang,\n            personProfilID: personBO.profil,\n            loadingInProgress: false,\n            error: null,\n          })).then(() => {\n            if (this.state.personName === 'Null'){\n              this.setState({\n                showRegistrierungForm: true\n              })\n            }\n          })\n          .catch(e =>\n              this.setState({\n            person: null,\n            personName: null,\n            personVorname: null,\n            personSemester: null,\n            personStudiengang: null,\n            personProfilID: null,\n            loadingInProgress: false,\n            error: e,\n              }));\n      this.setState({\n        loadingInProgress: true,\n        error: null\n      });\n    }\n    \n    // API Anbindung um das Profil der Person vom Backend zu bekommen\n   getProfil = () => {\n\t\tLernpartnerAPI.getAPI().getProfil(this.props.currentPerson.getprofil())\n\t\t\t.then(profilBO =>\n\t\t\t\tthis.setState({\n            profil: profilBO,\n            personLernvorliebenID: profilBO.lernvorlieben_id,\n            error: null,\n            loadingInProgress: false,\n          })).then(() => {\n            this.getLernvorlieben();\n           \n          }).catch(e =>\n            this.setState({\n              profil: null,\n              personLernfaecher: null,\n              error: e,\n              loadingInProgress: false,\n            }));\n\n      // set loading to true\n      this.setState({\n        loadingInProgress: true,\n        loadingError: null\n      });\n    }\n\n    // API Anbindung um die Lernfächer der Person vom Backend zu bekommen\n    getLernfaecher = () => {\n      LernpartnerAPI.getAPI().getLernfaecherByProfil(this.props.currentPerson.getprofil())\n      .then(lernfaecherBOs =>\n        this.setState({\n              personLernfaecher: lernfaecherBOs,\n              lernfaechernamen: lernfaecherBOs.map(lernfach=> lernfach.bezeichnung + \"  \"),\n              loadingInProgress: false,\n              error: null\n        }))\n        .catch(e =>\n          this.setState({ // Reset state with error from catch\n            personLernfaecher: null,\n            loadingInProgress: false,\n            error: e,\n          })\n        );\n  \n      // set loading to true\n      this.setState({\n        loadingInProgress: true,\n        loadingError: null\n      });\n    }\n\n    getalleLernfaecher = () => {\n      LernpartnerAPI.getAPI().getLernfaecher()\n      .then(lernfaecherBOs =>\n        this.setState({\n              lernfaechergesamt: lernfaecherBOs,\n              lernfaecher_id: lernfaecherBOs.map(lernfach => lernfach.id),\n              lernfaecher_bez: lernfaecherBOs.map(lernfach => lernfach.bezeichnung),\n              loadingInProgress: false,\n              error: null\n        }))\n        .catch(e =>\n          this.setState({ // Reset state with error from catch\n            lernfaechergesamt: null,\n            lernfaechertest: null,\n            loadingInProgress: false,\n            error: e,\n          })\n        );\n  \n      // set loading to true\n      this.setState({\n        loadingInProgress: true,\n        loadingError: null\n      });\n    }\n\n    // API Anbindung um die Lernvorlieben der Person vom Backend zu bekommen\n    getLernvorlieben = () => {\n    LernpartnerAPI.getAPI().getLernvorlieben(this.state.personLernvorliebenID)\n    .then(lernvorliebenBO =>\n      this.setState({\n            lernvorlieben: lernvorliebenBO,\n            lernvorliebentageszeiten: lernvorliebenBO.tageszeiten_bez,\n            lernvorliebentage: lernvorliebenBO.tage_bez,\n            lernvorliebenfrequenz: lernvorliebenBO.frequenz_bez,\n            lernvorliebenlernart: lernvorliebenBO.lernart_bez,\n            lernvorliebengruppengroesse: lernvorliebenBO.gruppengroesse_bez,\n            lernvorliebenlernort: lernvorliebenBO.lernort_bez,\n            loadingInProgress: false,\n            error: null\n      }))\n      .catch(e =>\n        this.setState({ // Reset state with error from catch\n          lernvorlieben: null,\n          loadingInProgress: false,\n          error: e,\n        })\n      );\n\n    // set loading to true\n    this.setState({\n      loadingInProgress: true,\n      loadingError: null\n    });\n  }\n\n    // API Anbindung um die Lernvorlieben der Person vom Backend zu bekommen\n    getTeilnahmeGruppen = () => {\n        LernpartnerAPI.getAPI().getTeilnahmeGruppeById(this.state.currentPerson.getID())\n            .then(teilnahmeGruppeBO =>\n                this.setState({\n                    teilnahmeGruppe: teilnahmeGruppeBO,\n                    loadingInProgress: false,\n                    error: null\n                }))\n            .catch(e =>\n                this.setState({ // Reset state with error from catch\n                    teilnahmeGruppe: null,\n                    loadingInProgress: false,\n                    error: e,\n                })\n            );\n\n        // set loading to true\n        this.setState({\n            loadingInProgress: true,\n            loadingError: null\n        });\n    }\n  \n  \n  //Wird aufgerufen, wenn der Mein Profil bearbeiten Button gedrückt wird\n  bearbeitenButtonClicked = (event) => {\n    event.stopPropagation();\n    this.setState({\n      showMeinProfilForm: true\n    });\n  }\n\n  loeschenButtonClicked = (event) => {\n        event.stopPropagation();\n      this.setState({\n          showProfilLoeschenForm: true\n      });\n  }\n\n  //Wird aufgerufen, wenn Speichern oder Abbrechen im Dialog gedrückt wird\n  userFormClosed = (person) => {\n    this.getPerson();\n    this.getLernfaecher();\n    if (person) {\n        this.setState({\n            person: person,\n            showRegistrierungForm: false,\n        });\n    } else {\n        this.setState({\n          showRegistrierungForm: false\n        })\n      \n    }\n  }\n\n  //Wird aufgerufen, wenn Speichern oder Abbrechen im Dialog gedrückt wird\n  bearbeitenFormClosed = (person) => {\n    this.getPerson();\n    if (person) {\n        this.setState({\n            person: person,\n            showMeinProfilForm: false,\n        });\n    } else {\n        this.setState({\n          showMeinProfilForm: false\n        })\n      \n    }\n  }\n\n    loeschenFormClosed = (person) => {\n        this.getPerson();\n        if (person) {\n            this.setState({\n                person: person,\n                showProfilLoeschenForm: false,\n            });\n        } else {\n            this.setState({\n                showProfilLoeschenForm: false\n            })\n\n        }\n    }\n\n  lernfaecherOptions = (arr1, arr2, sep) => {\n    arr1.map(function (num, idx) {\n      return num.toString().concat(sep, (arr2[idx]).toString())\n    })\n  }\n\n  /** Lifecycle method, wird aufgerufen wenn component in den DOM eingesetzt wird*/\n  componentDidMount(){\n    this.getPerson();\n    this.getProfil();\n    this.getLernfaecher();\n    this.getalleLernfaecher();\n  }\n\n\n   /** Rendern der Komponente */\n    render() {\n      const { classes , currentPerson } = this.props;\n      // Use the states customer\n      console.log(currentPerson)\n\n      const { test, lernfaecher_id, lernfaecher_bez, lernfaechernamen, profil, personProfil, personName, personVorname, personSemester, personAlter, personStudiengang, personLernfaecher, lernfach, lernfaechergesamt, personLernvorliebenID, lernvorlieben, lernvorliebentageszeiten, lernvorliebentage, lernvorliebenfrequenz, lernvorliebenlernart, lernvorliebengruppengroesse, lernvorliebenlernort, showRegistrierungForm, showMeinProfilForm, showProfilLoeschenForm, teilnahmeGruppe, loadingInProgress, error} = this.state;\n      console.log(teilnahmeGruppe)\n      return (\n        <div className={classes.root}>\n        <RegistrierungForm show={showRegistrierungForm} currentPerson = {currentPerson} onClose={this.userFormClosed}/>\n\n        <Button variant=\"contained\" color=\"primary\"  onClick= {this.bearbeitenButtonClicked}>Mein Profil bearbeiten</Button>\n        <Button variant=\"contained\" style={{backgroundColor: \"#cd5b45\"}} color=\"secondary\" className={classes.button} onClick= {this.loeschenButtonClicked}>Mein Profil löschen</Button>\n        <br/>\n        <Paper className={classes.inhalt}>\n        <h2>Meine Daten:</h2>\n\n        <Typography variant='body1' color={'textSecondary'}>\n\n                              <b>Name: </b>{personVorname} {personName}<br />\n                              <b>Alter: </b> {personAlter} <br />\n                              <b>Semester: </b> {personSemester} <br />\n                              <b>Studiengang: </b>{personStudiengang}<br />\n\n                              </Typography>\n                              </Paper>\n\n                              <Paper className={classes.inhalt}>\n                              <h2>Meine Lernfächer:</h2>\n\n                              <Typography variant='body1' color={'textSecondary'}>\n\n                              {\n                                lernfaechernamen.map(lernfach =>\n                                  <li>{lernfach}</li>\n                                  )\n\n                              }\n                              </Typography>\n                              </Paper>\n\n\n                              <Paper className={classes.inhalt}>\n\n                              <h2> Meine Lernvorlieben: </h2>\n                              <Typography variant='body1' color={'textSecondary'}>\n                              <b>Tageszeit: </b>{lernvorliebentageszeiten}<br />\n                              <b>Tage: </b>{lernvorliebentage}<br />\n                              <b>Frequenz: </b>{lernvorliebenfrequenz}<br />\n                              <b>Lernart: </b>{lernvorliebenlernart}<br />\n                              <b>Gruppengröße: </b>{lernvorliebengruppengroesse}<br />\n                              <b>Lernort: </b>{lernvorliebenlernort}<br />\n\n        </Typography>\n        </Paper>\n        <MeinProfilForm show={showMeinProfilForm} currentPerson={currentPerson} currentProfil={profil} lernfaechergesamt = {lernfaechergesamt} lernvorlieben={lernvorlieben} onClose={this.bearbeitenFormClosed}/>\n        <ProfilLoeschenForm show={showProfilLoeschenForm} currentPerson={currentPerson} currentProfil={profil} lernvorlieben={lernvorlieben} onClose={this.loeschenFormClosed}/>\n\n        </div>\n      );\n    }\n}\n//<MeinProfilForm show={showMeinProfilForm} currentPerson={currentPerson}/>\n\n\n\n/**Spezifische Styles*/\n  const styles = theme => ({\n  root: {\n      width: '100%',\n      marginTop: '20px',\n      marginBottom: theme.spacing(2),\n      padding: theme.spacing(1),\n  },\n\n  inhalt: {\n      width: '100%',\n      marginBottom: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n  },\n  button: {\n      marginLeft: 473,\n  }\n  });\n\n\n/** PropTypes */\nMeinProfil.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  currentPerson: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired\n}\n\n\nexport default withRouter(withStyles(styles)(MeinProfil));\n\n","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernpartnerAPI.js",["268"],"import ProfilBO from './ProfilBO';\nimport PersonBO from './PersonBO';\nimport VorschlagBO from './VorschlagBO';\nimport LerngruppeBO from './LerngruppeBO';\nimport LernvorliebenBO from './LernvorliebenBO';\nimport NachrichtBO from './NachrichtBO';\nimport KonversationBO from './KonversationBO'\nimport TeilnahmeChatBO from './TeilnahmeChatBO';\nimport TeilnahmeGruppeBO from './TeilnahmeGruppeBO';\nimport LernfachBO from './LernfachBO';\n\n/**\n * Abstrahiert die REST-Schnittstelle des Python-Backends mit komfortablen Zugriffsmethoden.\n * Die Klasse ist als Singleton implementiert.\n */\nexport default class LernpartnerAPI {\n\n        // Singelton instance\n        static #api = null;\n\n        #lernappServerBaseURL = '/lernApp'\n        /**\n         * Singleton Instanz erhalten\n         * \n         * @public\n         */\n        static getAPI() {\n          if (this.#api == null) {\n            this.#api = new LernpartnerAPI();\n          }\n          return this.#api;\n        }\n\n        #fetchAdvanced = (url, init) => fetch(url, init)\n          .then(res => {\n            // Das von fetch() zurückgegebene Promise wird bei einem HTTP-Fehlerstatus nicht zurückgewiesen, auch wenn die Antwort ein HTTP 404 oder 500 ist.\n            if (!res.ok) {\n              throw Error(`${res.status} ${res.statusText}`);\n            }\n            return res.json();\n          }\n          )\n\n        //Personbezogen\n        #getPersonenURL = () => `${this.#lernappServerBaseURL}/personen`;\n        #addPersonURL = () => `${this.#lernappServerBaseURL}/personen`;\n        #getPersonURL = (id) => `${this.#lernappServerBaseURL}/personen/${id}`;\n        #getPersonByNameURL = (name) => `${this.#lernappServerBaseURL}/personen-by-name/${name}`;\n        #getPersonByProfilURL = (profilid) => `${this.#lernappServerBaseURL}/personen-by-profil/${profilid}`;\n        #updatePersonURL = (id, name, vorname, semester, studiengang, alter, geschlecht, lerngruppe) => `${this.#lernappServerBaseURL}/personen?id=${id}&name=${name}&vorname=${vorname}&semester=${semester}&studiengang=${studiengang}&alter=${alter}&geschlecht=${geschlecht}&lerngruppe=${lerngruppe}`;\n        #deletePersonURL = (id) => `${this.#lernappServerBaseURL}/personen/${id}`;\n        #searchPersonURL = (personName) => `${this.#lernappServerBaseURL}/personen-by-name/${personName}`;\n        #getPersonByGoogleIDURL = (google_user_id) => `${this.#lernappServerBaseURL}/personbygoogle/${google_user_id}`;\n        \n        //Gruppenbezogen\n        #getLerngruppenURL = () => `${this.#lernappServerBaseURL}/lerngruppen`;\n        #getLerngruppeByProfilURL = (profilid) => `${this.#lernappServerBaseURL}/lerngruppen-by-profil/${profilid}`;\n        #addLerngruppeURL = () => `${this.#lernappServerBaseURL}/lerngruppen`;\n        #getLerngruppeURL = (id) => `${this.#lernappServerBaseURL}/lerngruppen/${id}`;\n        #updateLerngruppeURL = (id, name, profil)  => `${this.#lernappServerBaseURL}/lerngruppen?id=${id}&name=${name}&profil=${profil}`;\n        #deleteLerngruppeURL = (id) => `${this.#lernappServerBaseURL}/lerngruppen/${id}`;\n        \n        //Profilbezogen\n        #getProfileURL = () => `${this.#lernappServerBaseURL}/profile`;\n        #addProfilURL = () => `${this.#lernappServerBaseURL}/profile`;\n        #addProfileURL = () => `${this.#lernappServerBaseURL}/profile`;\n        #getProfilURL = (id) => `${this.#lernappServerBaseURL}/profile-by-id/${id}`;\n        #updateProfilURL = (id, gruppe, lernfaecher, lernvorlieben) => `${this.#lernappServerBaseURL}/profile?id=${id}&gruppe=${gruppe}&lernfaecher=${lernfaecher}&lernvorlieben=${lernvorlieben}`;\n        #deleteProfilURL = (id) => `${this.#lernappServerBaseURL}/profile/${id}`;\n\n        //Lernvorliebenbezogen\n        #getLernvorliebenURL = (id) => `${this.#lernappServerBaseURL}/lernvorlieben/${id}`;\n        #addLernvorliebenURL = () => `${this.#lernappServerBaseURL}/lernvorlieben`;\n        #updateLernvorliebenURL = (id, tageszeiten, tage, frequenz, lernart, gruppengroesse, lernort) => `${this.#lernappServerBaseURL}/lernvorlieben?id=${id}&tageszeiten=${tageszeiten}&tage=${tage}&frequenz=${frequenz}&lernart=${lernart}&gruppengroesse=${gruppengroesse}&lernort=${lernort}`;\n        #deleteLernvorliebenURL = (id) => `${this.#lernappServerBaseURL}/lernvorlieben/${id}`;\n\n        //Vorschlagbezogen\n        #getVorschlaegeByPersonByLernfachURL = (mainpersonID, lernfachID) => `${this.#lernappServerBaseURL}/vorschlaege-by-person-by-lernfach/${mainpersonID}/${lernfachID}`;\n\n        //Nachrichtenbezogen\n        #getNachrichtenURL = () => `${this.#lernappServerBaseURL}/nachrichten`;\n        #getNachrichtenByKonversationURL = (id) => `${this.#lernappServerBaseURL}/nachricht-by-konversation/${id}`;\n        #addNachrichtURL = () => `${this.#lernappServerBaseURL}/nachrichten`;\n        #getNachrichtenByKonversationByPersonURL = (konversationID, person_id) => `${this.#lernappServerBaseURL}/nachricht-by-konversation-by-person/${konversationID}/${person_id}`;\n        #deleteNachrichtURL = (id) => `${this.#lernappServerBaseURL}/nachrichten/${id}`;\n        #deleteNachrichtenByKonversationURL = (konversation_id) => `${this.#lernappServerBaseURL}/nachrichten/${konversation_id}`;\n        #getNachrichtenByPersonURL = (personID) => `${this.#lernappServerBaseURL}/nachrichten/${personID}`;\n        #getNachrichtenByInhaltURL= (nachricht_inhalt) => `${this.#lernappServerBaseURL}/nachrichten/${nachricht_inhalt}`;\n        \n        //Konversationbezogen\n        #getKonversationenURL = () => `${this.#lernappServerBaseURL}/konversationen`;\n        #getKonversationURL = (id) => `${this.#lernappServerBaseURL}/konversationen/${id}`;\n        #getKonversationenByPersonURL = (personid) => `${this.#lernappServerBaseURL}/konversationbyperson/${personid}`;\n        #getangenommeneKonversationenByPersonURL = (personid) => `${this.#lernappServerBaseURL}/angenommenekonversationbyperson/${personid}`;\n        #getKonversationByNameURL = (name) => `${this.#lernappServerBaseURL}/konversationen/${name}`;\n        #updateKonversationURL = (id, name, anfragestatus) => `${this.#lernappServerBaseURL}/konversationen?id=${id}&name=${name}&anfragestatus=${anfragestatus}`;\n        #addKonversationURL = () => `${this.#lernappServerBaseURL}/konversationen`;\n        #deleteKonversationURL = (id) => `${this.#lernappServerBaseURL}/konversationen/${id}`;\n\n        //TeilnahmeChatbezogen\n        #getTeilnahmeChatURL = () => `${this.#lernappServerBaseURL}/teilnahmeChat`;\n        #getTeilnahmeChatByIdURL = (id) => `${this.#lernappServerBaseURL}/teilnahmeChat/${id}`;\n        #getTeilnahmeChatByPersonByStatusURL = (person_id, status) => `${this.#lernappServerBaseURL}/teilnahmeChat-by-person-id-status/${person_id}/${status}`;\n        #updateTeilnahmeChatURL = (id, teilnehmer, anfrage_sender, status, konversation) => `${this.#lernappServerBaseURL}/teilnahmenChat?id=${id}&teilnehmer=${teilnehmer}&anfrage_sender=${anfrage_sender}&status=${status}&konversation=${konversation}`;\n        #setTeilnahmeChatURL = (id) => `${this.#lernappServerBaseURL}/teilnahmeChat/${id}`;\n        #addTeilnahmeChatURL = () => `${this.#lernappServerBaseURL}/teilnahmenChat`;\n        #deleteTeilnahmeChatURL = (id) => `${this.#lernappServerBaseURL}/teilnahmeChat/${id}`;\n        #deleteTeilnahmeChatByPersonURL = (id) => `${this.#lernappServerBaseURL}/teilnahmeChat-by-person-id/${id}`;\n        #getTeilnahmeChatByStudentIdURL = (id) => `${this.#lernappServerBaseURL}/teilnehmer-by-student-id/${id}`;\n        #getTeilnahmeChatByStatusByKonversationURL = (status, konversation_id) => `${this.#lernappServerBaseURL}/teilnehmer-by-status-konversation-id/${status}/${konversation_id}`;\n        #getTeilnahmeChatByKonversationIdURL = (id) => `${this.#lernappServerBaseURL}/teilnehmer-by-konversation-id/${id}`;\n        #getTeilnahmeChatByKonversationAndPersonURL = (konversation_id, person_id) => `${this.#lernappServerBaseURL}/teilnahmenChat-by-konv-pers/${konversation_id}/${person_id}`;\n        #getTeilnahmeChatByAnfrageSenderURL = (anfrage_sender) => `${this.#lernappServerBaseURL}/teilnehmer-by-anfrage-sender/${anfrage_sender}`;\n\n        //TeilnahmeGruppebezogen\n        #getTeilnahmeGruppeURL = () => `${this.#lernappServerBaseURL}/teilnahmenGruppe`;\n        #addTeilnahmeGruppeURL = () => `${this.#lernappServerBaseURL}/teilnahmenGruppe`;\n        #getTeilnahmeGruppeByIdURL = (person_id) => `${this.#lernappServerBaseURL}/teilnahmenGruppe/${person_id}`;\n        #getTeilnahmeGruppeByPersonByGruppeURL = (personId, lerngruppeId) => `${this.#lernappServerBaseURL}/teilnahmenGruppe/${personId}/${lerngruppeId}`;\n        #deleteTeilnahmeGruppeURL = (person_id) => `${this.#lernappServerBaseURL}/teilnahmenGruppe/${person_id}`;\n        #getTeilnahmeGruppeByGruppeURL = (lerngruppeId) => `${this.#lernappServerBaseURL}/teilnahmenGruppe-by-gruppe/${lerngruppeId}`;\n\n        //Lernfachbezogene\n        #getLernfaecherURL = () => `${this.#lernappServerBaseURL}/lernfaecher`;\n        #getLernfachByIDURL = (id) => `${this.#lernappServerBaseURL}/lernfaecher-by-id/${id}`;\n        #getLernfaecherByProfilURL = (profilid) => `${this.#lernappServerBaseURL}/lernfaecher-by-profil/${profilid}`;\n        #deleteLernfaecherByProfilURL = (profilid) => `${this.#lernappServerBaseURL}/lernfaecher-by-profil/${profilid}`;\n\n\n        //Personenbezogene\n        /**\n           * Gibt alle Personen als BO zurück\n           * \n           * @public\n           */\n        getPersonen() {\n          return this.#fetchAdvanced(this.#getPersonenURL()).then((responseJSON) => {\n            let personenBOs = PersonBO.fromJSON(responseJSON);\n            // console.info(customerBOs);\n            return new Promise(function (resolve) {\n              resolve(personenBOs);\n            })           \n          })\n        }\n        /**\n         * Person wird hinzugefügt und Promise wird zurückgegeben, das in ein neues PersonBO-Objekt aufgelöst wird\n         *\n         * @param {PersonBO} personBO to be added. The ID of the new customer is set by the backend\n         * @public\n         */\n        addPerson(personBO) {\n          return this.#fetchAdvanced(this.#addPersonURL(), {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json, text/plain',\n              'Content-type': 'application/json',\n            },\n            body: JSON.stringify(personBO)\n          }).then((responseJSON) => {\n            // We always get an array of CustomerBOs.fromJSON, but only need one object\n            let responsePersonBO = PersonBO.fromJSON(responseJSON)[0];\n            // console.info(accountBOs);\n            return new Promise(function (resolve) {\n              resolve(responsePersonBO);\n            })\n          })\n        }\n\n        /**\n         * Gibt eine Person mit einer bestimmten ID als BO zurück\n         * \n         * @param {Number} personID to be retrieved\n         * @public\n         */\n        getPerson(personID) {\n          return this.#fetchAdvanced(this.#getPersonURL(personID)).then((responseJSON) => {\n            // We always get an array of PersonBOs.fromJSON, but only need one object\n            let personBO = PersonBO.fromJSON(responseJSON);\n            console.info(personBO);\n            return new Promise(function (resolve) {\n              resolve(personBO);\n            })\n          })\n        }\n\n        /**\n         * Gibt eine Person mit einem bestimmten Namen als BO zurück\n         *\n         * @param {string} name to be retrieved\n         * @public\n         */\n        getPersonByName(name) {\n          return this.#fetchAdvanced(this.#getPersonByNameURL(name)).then((responseJSON) => {\n            // We always get an array of PersonBOs.fromJSON, but only need one object\n            let personBO = PersonBO.fromJSON(responseJSON);\n            console.log(personBO);\n            return new Promise(function (resolve) {\n              resolve(personBO);\n            })\n          })\n        }\n\n        /**\n         * Gibt eine Person mit einer bestimmten ID als BO zurück\n         * \n         * @param {Number} profilID to be retrieved\n         * @public\n         */\n        getPersonByProfil(profilID) {\n          return this.#fetchAdvanced(this.#getPersonByProfilURL(profilID)).then((responseJSON) => {\n            // We always get an array of PersonBOs.fromJSON, but only need one object\n            let personBO = PersonBO.fromJSON(responseJSON);\n            console.log(personBO);\n            return new Promise(function (resolve) {\n              resolve(personBO);\n            })\n          })\n        }\n\n        /**\n         * Updated eine Person und gibt Promise zurück, resolves as PersonBO.\n         \n         */\n        updatePerson(id, name, vorname, semester, studiengang, alter, geschlecht, lerngruppe) {\n          return this.#fetchAdvanced(this.#updatePersonURL(id, name, vorname, semester, studiengang, alter, geschlecht, lerngruppe), {\n            method: 'PUT',\n            headers: {\n              'Accept': 'application/json, text/plain',\n              'Content-type': 'application/json',\n            }\n          })\n        }\n\n        /**\n         * Gibt eine Person mit einer bestimmten ID als BO zurück\n         * \n         * @param {Number} google_user_id to be retrieved\n         * @public\n         */\n        getPersonByGoogleID(google_user_id) {\n          return this.#fetchAdvanced(this.#getPersonByGoogleIDURL(google_user_id)).then((responseJSON) => {\n            // We always get an array of PersonBOs.fromJSON, but only need one object\n            let personBO = PersonBO.fromJSON(responseJSON);\n            console.info(personBO);\n            return new Promise(function (resolve){\n                resolve(personBO)\n            })\n          })\n        }\n \n        /**\n         * Löschen eines PersonBOs\n         * Gibt Promise zurück\n         *\n         * @param {Number} personID to be deleted\n         * @public\n         */\n        deletePerson(personID) {\n          return this.#fetchAdvanced(this.#deletePersonURL(personID), {\n            method: 'DELETE'\n          }).then((responseJSON) => {\n            // We always get an array of PersonBOs.fromJSON\n            let responsePersonBO = PersonBO.fromJSON(responseJSON)[0];\n            // console.info(personBOs);\n            return new Promise(function (resolve) {\n              resolve(responsePersonBO);\n            })\n          })\n        }\n\n        /**\n         * Suchen eines PersonBOs nach dem Namen\n         * Gibt Promise zurück\n         * \n         * @param {Number} personID to be deleted\n         * @public\n         */\n        searchPerson(personName) {\n          return this.#fetchAdvanced(this.#searchPersonURL(personName)).then((responseJSON) => {\n            let personBOs = PersonBO.fromJSON(responseJSON);\n            // console.info(personBOs);\n            return new Promise(function (resolve) {\n              resolve(personBOs);\n            })\n          })\n        }\n        //Lerngruppenbezogene\n        /**\n           * Gibt alle Lerngruppen als BO zurück\n           * \n           * @public\n           */\n          getLerngruppen() {\n            return this.#fetchAdvanced(this.#getLerngruppenURL()).then((responseJSON) => {\n              let lerngruppenBOs = LerngruppeBO.fromJSON(responseJSON);\n              // console.info(customerBOs);\n              return new Promise(function (resolve) {\n                resolve(lerngruppenBOs);\n              })           \n            })\n          }\n\n        /**\n         * Gibt eine Lerngruppe mit einer bestimmten ID als BO zurück\n         *\n         * @param {Number} profilID to be retrieved\n         * @public\n         */\n        getLerngruppeByProfil(profilID) {\n          return this.#fetchAdvanced(this.#getLerngruppeByProfilURL(profilID)).then((responseJSON) => {\n            // We always get an array of PersonBOs.fromJSON, but only need one object\n            let lerngruppeBO = LerngruppeBO.fromJSON(responseJSON);\n            console.log(lerngruppeBO);\n            return new Promise(function (resolve) {\n              resolve(lerngruppeBO);\n            })\n          })\n        }\n\n          /**\n           * Lerngruppe wird hinzugefügt und Promise wird zurückgegeben, das in ein neues LerngruppeBO-Objekt aufgelöst wird\n           *  \n           * @param {LerngruppeBO} lerngruppeBO to be added. The ID of the new lerngruppe is set by the backend\n           * @public\n           */\n          addLerngruppe(lerngruppeBO) {\n          console.log(lerngruppeBO)\n            return this.#fetchAdvanced(this.#addLerngruppeURL(), {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json, text/plain',\n                'Content-type': 'application/json',\n            },\n             body: JSON.stringify(lerngruppeBO)\n           }).then((responseJSON) => {\n             // We always get an array of LerngruppeBO.fromJSON, but only need one object\n             let responseLerngruppeBO = LerngruppeBO.fromJSON(responseJSON);\n             return new Promise(function (resolve) {\n               resolve(responseLerngruppeBO);\n             })\n           })\n         }\n  \n          /**\n           * Gibt eine Lerngruppe mit einer bestimmten personenID als BO zurück\n           * \n           * @param {Number} personenID to be retrieved\n           * @public\n           */\n          getLerngruppe(personenID) {\n            return this.#fetchAdvanced(this.#getLerngruppeURL(personenID)).then((responseJSON) => {\n              // We get an array of LerngruppeBOs.fromJSON\n              let lerngruppeBO = LerngruppeBO.fromJSON(responseJSON);\n              //console.info(lerngruppeBO);\n              return new Promise(function (resolve) {\n                resolve(lerngruppeBO);\n              })\n            })\n          }\n  \n          /**\n           * Updated eine Lerngruppe und gibt Promise zurück, resolves as LerngruppeBO.\n           * \n           * @param {LerngruppeBO} lerngruppeBO to be updated\n           * @public\n           */\n          updateLerngruppe(id, name, profil) {\n            return this.#fetchAdvanced(this.#updateLerngruppeURL(id, name, profil), {\n            method: 'PUT',\n            headers: {\n              'Accept': 'application/json, text/plain',\n              'Content-type': 'application/json',\n            }\n          })\n        }\n   \n          /**\n           * Löschen einer Lerngruppe nach der ID\n           * Gibt Promise zurück\n           * \n           * @param {Number} lerngruppeID to be deleted\n           * @public\n           */\n          deleteLerngruppe(lerngruppeID) {\n            return this.#fetchAdvanced(this.#deleteLerngruppeURL(lerngruppeID), {\n              method: 'DELETE'\n            }).then((responseJSON) => {\n              // We always get an array of LerngruppeBOs.fromJSON\n              let responseLerngruppeBO = LerngruppeBO.fromJSON(responseJSON)[0];\n              // console.info(LerngruppeBOs);\n              return new Promise(function (resolve) {\n                resolve(responseLerngruppeBO);\n              })\n            })\n          }\n\n\n        //Profilbezogene\n        /**\n           * Gibt alle Profile als BO zurück\n           * \n           * @public\n           */\n          getProfile() {\n            return this.#fetchAdvanced(this.#getProfileURL()).then((responseJSON) => {\n              let profileBOs = ProfilBO.fromJSON(responseJSON);\n              // console.info(profileBOs);\n              return new Promise(function (resolve) {\n                resolve(profileBOs);\n              })           \n            })\n          }\n\n        /**\n         * Gibt ein Profil-Objekt zurück\n         * @param {Number} profilID to be retrieved\n         * @public\n          */\n         getProfil(profilID) {\n          return this.#fetchAdvanced(this.#getProfilURL(profilID)).then((responseJSON) => {\n            let profilBO = ProfilBO.fromJSON(responseJSON);\n            console.info(profilBO)\n            return new Promise(function (resolve) {\n              resolve(profilBO);\n            })\n          })\n        }\n\n        /**\n         * Profil wird hinzugefügt und Promise wird zurückgegeben, das in ein neues ProfilBO-Objekt aufgelöst wird\n         *  \n         * @param {ProfilBO} profilBO to be added. The ID of the new customer is set by the backend\n         * @public\n         */\n        addProfil(profilBO) {\n        console.log(profilBO)\n          return this.#fetchAdvanced(this.#addProfileURL(), {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json, text/plain',\n              'Content-type': 'application/json',\n            },\n             body: JSON.stringify(profilBO)\n           }).then((responseJSON) => {\n             // We always get an array of LernvorliebenBO.fromJSON, but only need one object\n             let responseProfilBO = ProfilBO.fromJSON(responseJSON);\n             return new Promise(function (resolve) {\n               resolve(responseProfilBO);\n             })\n           })\n         }\n\n        /**\n         * Updated ein Profil und gibt Promise zurück, resolves as ProfilBO.\n         * \n         * @public\n         */\n        updateProfil(id, gruppe, lernfaecher, lernvorlieben) {\n          return this.#fetchAdvanced(this.#updateProfilURL(id, gruppe, lernfaecher, lernvorlieben), {\n            method: 'PUT',\n            headers: {\n              'Accept': 'application/json, text/plain',\n              'Content-type': 'application/json',\n            }\n          }) \n        }\n        /**\n         * Gibt Promise zurück\n         * \n         * @param {Number} profilID to be deleted\n         * @public\n         */\n        deleteProfil(profilID) {\n          return this.#fetchAdvanced(this.#deleteProfilURL(profilID), {\n            method: 'DELETE'\n          }).then((responseJSON) => {\n            // We always get an array of ProfilBOs.fromJSON\n            let responseProfilBO = ProfilBO.fromJSON(responseJSON)[0];\n            // console.info(profilBOs);\n            return new Promise(function (resolve) {\n              resolve(responseProfilBO);\n            })\n          })\n        }\n\n\n        //Lernvorliebenbezogene\n\n        /**\n         * Gibt eine Lernvorliebe mit einer bestimmten ID als BO zurück\n         * \n         * @param {Number} lernvorliebenID to be retrieved\n         * @public\n         */\n        getLernvorlieben(lernvorliebenID) {\n          return this.#fetchAdvanced(this.#getLernvorliebenURL(lernvorliebenID)).then((responseJSON) => {\n            // We always get an array of LernvorliebenBOs.fromJSON, but only need one object\n            let lernvorliebenBO = LernvorliebenBO.fromJSON(responseJSON);\n            console.info(lernvorliebenBO);\n            return new Promise(function (resolve) {\n              resolve(lernvorliebenBO);\n            })\n          })\n        }\n\n\n        /**\n         * Lernvorlieben werden hinzugefügt und Promise wird zurückgegeben, das in ein neues LervorliebenBO-Objekt aufgelöst wird\n         *  \n         * @param {LernvorliebenBO} lernvorliebenBO to be added. The ID of the new lernvorliebe is set by the backend\n         * @public\n         */\n        addLernvorlieben(lernvorliebenBO) {\n          return this.#fetchAdvanced(this.#addLernvorliebenURL(), {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json, text/plain',\n              'Content-type': 'application/json',\n            },\n             body: JSON.stringify(lernvorliebenBO)\n           }).then((responseJSON) => {\n             // We always get an array of LernvorliebenBO.fromJSON, but only need one object\n             let responseLernvorliebenBO = LernvorliebenBO.fromJSON(responseJSON);\n             return new Promise(function (resolve) {\n               resolve(responseLernvorliebenBO);\n             })\n           })\n         }\n\n        /**\n         * Löschen eines Lernvorlieben BOs nach der ID\n         * Gibt Promise zurück\n         * \n         * @param {Number} lernvorliebenID to be deleted\n         * @public\n         */\n        deleteLernvorlieben(lernvorliebenID) {\n          return this.#fetchAdvanced(this.#deleteLernvorliebenURL(lernvorliebenID), {\n            method: 'DELETE'\n          }).then((responseJSON) => {\n            // We always get an array of LernvorliebenBOs.fromJSON\n            let responseLernvorliebenBO = LernvorliebenBO.fromJSON(responseJSON)[0];\n            // console.info(LernvorliebenBOs);\n            return new Promise(function (resolve) {\n              resolve(responseLernvorliebenBO);\n            })\n          })\n        }\n\n    /**\n     * Updated  Lernvorlieben und gibt Promise zurück, resolves as LernvorliebenBO.\n     *\n     * @public\n     */\n\n        updateLernvorlieben(id, tageszeiten, tage, frequenz, lernart, gruppengroesse, lernort) {\n            return this.#fetchAdvanced(this.#updateLernvorliebenURL(id, tageszeiten, tage, frequenz, lernart, gruppengroesse, lernort), {\n              method: 'PUT',\n              headers: {\n                'Accept': 'application/json, text/plain',\n                'Content-type': 'application/json',\n              }\n            })\n          }\n\n\n        //Vorschlagbezogene\n        /**\n         * Gibt alle Vorschlaege zurück\n         * @param {Number} mainpersonID to be retrieved\n         * @param {Number} lernfachID to be retrieved\n         * @public\n          */\n        getVorschlaegeByPersonByLernfach(mainpersonID, lernfachID) {\n          return this.#fetchAdvanced(this.#getVorschlaegeByPersonByLernfachURL(mainpersonID, lernfachID, {method: 'GET'})).then((responseJSON) => {\n            let vorschlaegeBOs = VorschlagBO.fromJSON(responseJSON);\n            //console.info(vorschlaegeBOs)\n            return new Promise(function (resolve) {\n              resolve(vorschlaegeBOs);\n            })\n          })\n        }\n\n      \n        //Nachrichtbezogene\n        /** \n        * Gibt alle Nachrichten einer Person nach der ID zurück\n         * @param {Number} personID to be retrieved\n         * @public\n          */\n\n        getNachrichten(personID) {\n          return this.#fetchAdvanced(this.#getNachrichtenByPersonURL(personID,{method: 'GET'})).then((responseJSON) => {\n            let nachrichtenBOs = NachrichtBO.fromJSON(responseJSON);\n            //console.info(nachrichtenBOs)\n            return new Promise(function (resolve) {\n              resolve(nachrichtenBOs);\n            })\n          })\n        }\n\n       /**\n        * Nachricht werden hinzugefügt und Promise wird zurückgegeben, das in ein neues NachrichtBO-Objekt aufgelöst wird\n         *  \n         * @param {NachrichtBO} nachrichtBO to be added. The ID of the new nachricht is set by the backend\n         * @public\n         */\n\n        addNachricht(nachrichtBO) {\n          return this.#fetchAdvanced(this.#addNachrichtURL(), {\n          method: 'POST',\n            headers: {\n              'Accept': 'application/json, text/plain',\n              'Content-type': 'application/json',\n            },\n            body: JSON.stringify(nachrichtBO)\n          }).then((responseJSON) => {\n            // We always get an array of NachrichtBOs.fromJSON, but only need one object\n            let responseNachrichtBO = NachrichtBO.fromJSON(responseJSON)[0];\n            // console.info(NachrichtBOs);\n            return new Promise(function (resolve) {\n              resolve(responseNachrichtBO);\n            })\n          })\n        }\n\n         /**\n           * Gibt alle Nachrichten als BO zurück\n           * \n           * @public\n           */\n\n        getNachrichten() {\n          return this.#fetchAdvanced(this.#getNachrichtenURL()).then((responseJSON) => {\n            let nachrichtenBOs = NachrichtBO.fromJSON(responseJSON);\n            return new Promise(function (resolve) {\n              resolve(nachrichtenBOs);\n            })           \n          })\n        }\n\n         /** \n        * gibt die Nachrichten mit der bestimmten konversationsID als BO zurück\n         * @param {Number} konversationID to be retrieved\n         * @public\n          */\n    \n        getNachrichtenByKonversation(konversation_id){\n\t\t      return this.#fetchAdvanced(this.#getNachrichtenByKonversationURL(konversation_id)).then((responseJSON) => {\n\t\t\t      let nachrichtenBOs = NachrichtBO.fromJSON(responseJSON);\n\t\t\t      console.info(nachrichtenBOs)\n\t\t\t      return new Promise(function (resolve){\n\t\t\t  \t    resolve(nachrichtenBOs)\n\t\t\t      })\n\t\t      })\n\t      }\n\n\n          /**\n         * Gibt Promise zurück, Löscht Nachricht mit bestimmter ID\n         * \n         * @param {Number} id to be deleted\n         * @public\n         */\n\n\n        deleteNachricht(id) {\n          return this.#fetchAdvanced(this.#deleteNachrichtURL(id), {\n            method: 'DELETE'\n          }).then((responseJSON) => {\n            // We always get an array of NachrichtenBOs.fromJSON\n            let responseNachrichtBO = NachrichtBO.fromJSON(responseJSON)[0];\n            // console.info(NachrichtBOs);\n            return new Promise(function (resolve) {\n              resolve(responseNachrichtBO);\n            })\n          })\n        }\n\n         /** \n         * gibt die Nachrichten mit der bestimmten konversationsID und PersonID als BO zurück\n         * @param {Number} konversation_id to be retrieved\n         * @param {Number} personID \n         * @public\n         */\n    \n          getNachrichtenByKonversationByPerson(konversation_id, person_id) {\n            return this.#fetchAdvanced(this.#getNachrichtenByKonversationByPersonURL(konversation_id, person_id, {method: 'GET'})).then((responseJSON) => {\n              let nachrichtenBOs = NachrichtBO.fromJSON(responseJSON);\n              console.info(nachrichtenBOs)\n              return new Promise(function (resolve) {\n                resolve(nachrichtenBOs);\n              })\n            })\n          }\n \n          /** \n           * löscht Nachrichten einer konversation\n           * @param {Number} konversation_id to be retrieved\n           * @param {Number} personID \n           * @public\n           */\n      \n          deleteNachrichtenByKonversation(konversation_id) {\n            return this.#fetchAdvanced(this.#deleteNachrichtenByKonversationURL(konversation_id, {method: 'DELETE'})).then((responseJSON) => {\n              let nachrichtenBOs = NachrichtBO.fromJSON(responseJSON);\n              //console.info(nachrichtenBOs)\n              return new Promise(function (resolve) {\n                resolve(nachrichtenBOs);\n              })\n            })\n          }\n\n           /** \n          * gibt die Nachrichten mit dem bestimmten Inhalt als BO zurück\n          * @param {String} inhalt to be retrieved\n          * @public\n          */\n    \n        getNachrichtByInhalt(nachricht_inhalt){\n          return this.#fetchAdvanced(this.#getNachrichtenByInhaltURL(nachricht_inhalt)).then((responseJSON) => {\n          let nachrichtenBOs = NachrichtBO.fromJSON(responseJSON);\n          console.info(nachrichtenBOs)\n          return new Promise(function (resolve){\n            resolve(nachrichtenBOs)\n             })\n           })\n          }\n\n\n          //Konversations bezogen\n\n           /**\n           * Gibt alle Konversationen als BO zurück\n           * \n           * @public\n           */\n\n        getKonversationen() {\n          return this.#fetchAdvanced(this.#getKonversationenURL()).then((responseJSON) => {\n            let konversationenBOs = KonversationBO.fromJSON(responseJSON);\n            return new Promise(function (resolve) {\n              resolve(konversationenBOs);\n            })           \n          })\n        }\n\n         /** \n        * gibt die Konversation mit der bestimmten ID als BO zurück\n         * @param {Number} id to be retrieved\n         * @public\n          */\n    \n          getKonversation(id){\n            return this.#fetchAdvanced(this.#getKonversationURL(id)).then((responseJSON) => {\n              let konversationenBOs = KonversationBO.fromJSON(responseJSON);\n              //console.info(konversationenBOs)\n              return new Promise(function (resolve){\n                resolve(konversationenBOs)\n              })\n            })\n          }\n\n           /**\n           * Gibt alle Konversationen einer Person als BO zurück\n           * @param {Number} personid to be retrieved\n           * @public\n           */\n\n          getKonversationenByPerson(personid) {\n            return this.#fetchAdvanced(this.#getKonversationenByPersonURL(personid)).then((responseJSON) => {\n              let konversationBO = KonversationBO.fromJSON(responseJSON);\n              console.log(konversationBO)\n              return new Promise(function (resolve) {\n                resolve(konversationBO);\n              })           \n            })\n          }\n\n        /**\n           * Gibt alle Konversationen einer Person, die Anfragestatus 1 haben, als BO zurück\n           * @param {Number} personid to be retrieved\n           * @public\n           */\n\n          getangenommeneKonversationenByPerson(personid) {\n            return this.#fetchAdvanced(this.#getangenommeneKonversationenByPersonURL(personid)).then((responseJSON) => {\n              let konversationBO = KonversationBO.fromJSON(responseJSON);\n              console.log(konversationBO)\n              return new Promise(function (resolve) {\n                resolve(konversationBO);\n              })           \n            })\n          }\n\n         /**\n         * Gibt Promise zurück, holt Konversationen mit bestimmtem Namen\n         *\n         * @param {String} name to be retrived\n         * @public\n         */\n          getKonversationByName(name){\n            return this.#fetchAdvanced(this.#getKonversationByNameURL(name)).then((responseJSON) => {\n                let konversationBO = KonversationBO.fromJSON(responseJSON);\n                console.log(konversationBO)\n                return new Promise(function (resolve){\n                    resolve(konversationBO)\n                })\n            })\n          }\n\n          /**\n           * Konversation werden hinzugefügt und Promise wird zurückgegeben, das in ein neues KonversationBO-Objekt aufgelöst wird\n          *  \n          * @param {KonversationBO} konversationBO to be added. The ID of the new nachricht is set by the backend\n          * @public\n          */\n \n         addKonversation(konversationBO) {\n           return this.#fetchAdvanced(this.#addKonversationURL(), {\n           method: 'POST',\n             headers: {\n               'Accept': 'application/json, text/plain',\n               'Content-type': 'application/json',\n             },\n             body: JSON.stringify(konversationBO)\n           }).then((responseJSON) => {\n             // We always get an array of NachrichtBOs.fromJSON, but only need one object\n             let responseKonversationBO = KonversationBO.fromJSON(responseJSON);\n             console.log(responseKonversationBO);\n             return new Promise(function (resolve) {\n               resolve(responseKonversationBO);\n             })\n           })\n         }\n\n          /**\n         * Gibt Promise zurück, Löscht Konversation mit bestimmter ID\n         * \n         * @param {Number} id to be deleted\n         * @public\n         */\n        deleteKonversation(id) {\n          return this.#fetchAdvanced(this.#deleteKonversationURL(id), {\n            method: 'DELETE'\n          }).then((responseJSON) => {\n            // We always get an array of KonversationBOs.fromJSON\n            let responseKonversationBO = KonversationBO.fromJSON(responseJSON)[0];\n            // console.info(KonversationBOs);\n            return new Promise(function (resolve) {\n              resolve(responseKonversationBO);\n            })\n          })\n        }\n\n    /**\n     * Updated  Konversation und gibt Promise zurück, resolves as KonversationBO.\n     *\n     * @public\n     */\n        updateKonversation(id, name, anfragestatus) {\n            return this.#fetchAdvanced(this.#updateKonversationURL(id, name, anfragestatus), {\n              method: 'PUT',\n              headers: {\n                'Accept': 'application/json, text/plain',\n                'Content-type': 'application/json',\n              }\n            })\n          }\n\n             //Teilnahme Chat bezogene\n\n          /**\n           * Gibt alle Teilnahmen eines Chats als BO zurück\n           * \n           * @public\n           */\n\n           getTeilnahmeChat() {\n            return this.#fetchAdvanced(this.#getTeilnahmeChatURL()).then((responseJSON) => {\n            let teilnahmechatBOs = TeilnahmeChatBO.fromJSON(responseJSON);\n            return new Promise(function (resolve) {\n              resolve(teilnahmechatBOs);\n               })           \n              })\n            }\n\n          /** \n           * gibt die Teilnehmer mit der bestimmten ID als BO zurück\n           * @param {Number} id to be retrieved\n           * @public\n          */\n  \n          getTeilnahmeChatById(id){\n            return this.#fetchAdvanced(this.#getTeilnahmeChatByIdURL(id)).then((responseJSON) => {\n            let teilnahmechatBOs = TeilnahmeChatBO.fromJSON(responseJSON);\n            //console.info(teilnahmechatBOs)\n            return new Promise(function (resolve){\n              resolve(teilnahmechatBOs)\n               })\n             })\n            }\n\n            /**\n             * setzt den Zustand einer Konversation mit der bestimmten ID auf einen neuen Zustand\n             * \n             * @param {Number} id to be deleted\n             * @public\n             */\n          getTeilnahmeChatByPersonByStatus(person_id, status){\n            return this.#fetchAdvanced(this.#getTeilnahmeChatByPersonByStatusURL(person_id, status, {method: 'GET'})).then((responseJSON) => {\n            let teilnahmechatBOs = TeilnahmeChatBO.fromJSON(responseJSON);\n            console.log(teilnahmechatBOs)\n            return new Promise(function (resolve){\n              resolve(teilnahmechatBOs)\n               })\n             })\n            }\n\n            /**\n             * setzt den Zustand einer Konversation mit dem Status auf einen neuen Zustand\n             *\n             * @param {Number} id to be deleted\n             * @public\n             */\n\n          getTeilnahmeChatByStatusByKonversation(status, konversation_id){\n            return this.#fetchAdvanced(this.#getTeilnahmeChatByStatusByKonversationURL(status, konversation_id, {method: 'GET'})).then((responseJSON) => {\n            let teilnahmechatBOs = TeilnahmeChatBO.fromJSON(responseJSON);\n            console.log(teilnahmechatBOs)\n            return new Promise(function (resolve){\n              resolve(teilnahmechatBOs)\n               })\n             })\n            }\n\n\n    /**\n     * Updated  TeilnahmeChat und gibt Promise zurück, resolves as TeilnahmeChatBO.\n     *\n     * @public\n     */\n        updateTeilnahmeChat(id, teilnehmer, anfrage_sender, status, konversation) {\n            return this.#fetchAdvanced(this.#updateTeilnahmeChatURL(id, teilnehmer, anfrage_sender, status, konversation), {\n              method: 'PUT',\n              headers: {\n                'Accept': 'application/json, text/plain',\n                'Content-type': 'application/json',\n              }\n            })\n          }\n\n        setTeilnahmeChat(id) {\n            return this.#fetchAdvanced(this.#setTeilnahmeChatURL(id), {\n              method: 'PUT',\n              headers: {\n                'Accept': 'application/json, text/plain',\n                'Content-type': 'application/json',\n              }\n            })\n          }\n\n            /**\n             * Teinahme an einem Chat wird hinzugefügt und Promise wird zurückgegeben, das in ein neues TeilnahmeChatBO-Objekt aufgelöst wird\n             *  \n             * @param {TeilnahmeChatBO} teilnahmechatBO to be added. The ID of the new teilnahemChat is set by the backend\n             * @public\n            */\n\n            addTeilnahmeChat(teilnahmechatBO) {\n              return this.#fetchAdvanced(this.#addTeilnahmeChatURL(), {\n               method: 'POST',\n               headers: {\n                  'Accept': 'application/json, text/plain',\n                  'Content-type': 'application/json',\n                 },\n               body: JSON.stringify(teilnahmechatBO)\n               }).then((responseJSON) => {\n               // We always get an array of TeilnahmeChatBOs.fromJSON, but only need one object\n               let responseTeilnahmeChatBO = TeilnahmeChatBO.fromJSON(responseJSON);\n                  console.log(responseTeilnahmeChatBO);\n                  return new Promise(function (resolve) {\n                    resolve(responseTeilnahmeChatBO);\n                     })\n                   })\n               }\n\n             /** \n             * löscht Teilnahme an einem Chat\n             * @param {Number} id to be retrieved\n             * @public\n             */\n    \n            deleteTeilnahmeChat(id) {\n              return this.#fetchAdvanced(this.#deleteTeilnahmeChatURL(id), {\n                method: 'DELETE'\n                }).then((responseJSON) => {\n                // We always get an array of TeilnahmeChatBOs.fromJSON\n                let responseTeilnahmeChatBO = TeilnahmeChatBO.fromJSON(responseJSON)[0];\n                // console.info(KonversationBOs);\n                return new Promise(function (resolve) {\n                  resolve(responseTeilnahmeChatBO);\n                })\n              })\n            }\n\n            /** \n             * löscht Teilnahme an einem Chat\n             * @param {Number} personid to be retrieved\n             * @public\n             */\n    \n            deleteTeilnahmeChatByPerson(personid) {\n              return this.#fetchAdvanced(this.#deleteTeilnahmeChatByPersonURL(personid), {\n                method: 'DELETE'\n                }).then((responseJSON) => {\n                // We always get an array of TeilnahmeChatBOs.fromJSON\n                let responseTeilnahmeChatBO = TeilnahmeChatBO.fromJSON(responseJSON)[0];\n                // console.info(KonversationBOs);\n                return new Promise(function (resolve) {\n                  resolve(responseTeilnahmeChatBO);\n                })\n              })\n            }\n\n             /** \n              * Gibt alle TeilnahmenChat einer Person zurück\n              * @param {Number} personid to be retrieved\n              * @public\n              */\n\n              getTeilnahmeChatByStudentId(personid) {\n                return this.#fetchAdvanced(this.#getTeilnahmeChatByStudentIdURL(personid, {method: 'GET'})).then((responseJSON) => {\n                let teilnahmechatBOs = TeilnahmeChatBO.fromJSON(responseJSON);\n                //console.info(teilnahmechatBOs)\n                return new Promise(function (resolve) {\n                  resolve(teilnahmechatBOs);\n                  })\n                })\n              }\n              \n             /** \n              * gibt die Teilnahme an einem CHat mit der bestimmten konversationsID als BO zurück\n              * @param {Number} id to be retrieved\n              * @public\n             */\n  \n            getTeilnahmeChatByKonversationId(id){\n               return this.#fetchAdvanced(this.#getTeilnahmeChatByKonversationIdURL(id)).then((responseJSON) => {\n               let teilnahmechatBOs = TeilnahmeChatBO.fromJSON(responseJSON);\n              //console.info(teilnahmechatBOs)\n              return new Promise(function (resolve){\n               resolve(teilnahmechatBOs)\n                })\n              })\n             }\n\n\n             /**\n              * gibt die Teilnahme an einem Chat mit der bestimmten Anfrage Sender ID als BO zurück\n              * @param {Number} id to be retrieved\n              * @public\n             */\n            getTeilnahmeChatByAnfrageSender(id){\n               return this.#fetchAdvanced(this.#getTeilnahmeChatByAnfrageSenderURL(id)).then((responseJSON) => {\n               let teilnahmechatBOs = TeilnahmeChatBO.fromJSON(responseJSON);\n              //console.info(teilnahmechatBOs)\n              return new Promise(function (resolve){\n               resolve(teilnahmechatBOs)\n                })\n              })\n             }\n\n             /** \n              * gibt die Teilnahme mit der bestimmten konversationsID und personID als BO zurück\n              * @param {Number} id to be retrieved\n              * @public\n             */\n  \n            getTeilnahmeChatByKonversationAndPerson(konversation_id, person_id){\n              return this.#fetchAdvanced(this.#getTeilnahmeChatByKonversationAndPersonURL(konversation_id, person_id)).then((responseJSON) => {\n              let teilnahmechatBO = TeilnahmeChatBO.fromJSON(responseJSON);\n              console.info(teilnahmechatBO)\n              return new Promise(function (resolve){\n                resolve(teilnahmechatBO)\n                })\n              })\n              }\n            //Teilnahme Gruppe bezogen\n\n            /**\n           * Gibt alle Teilnahmen einer Gruppe als BO zurück\n           * \n           * @public\n           */\n\n           getTeilnahmeGruppe() {\n            return this.#fetchAdvanced(this.#getTeilnahmeGruppeURL()).then((responseJSON) => {\n            let teilnahmegruppeBOs = TeilnahmeGruppeBO.fromJSON(responseJSON);\n            return new Promise(function (resolve) {\n              resolve(teilnahmegruppeBOs);\n               })           \n              })\n            }\n\n            /**\n             * Teilnahme an einer Gruppe werden hinzugefügt und Promise wird zurückgegeben, das in ein neues TeilnahmeGruppeBO-Objekt aufgelöst wird\n             *  \n             * @param {TeilnahmeGruppeBO} teilnahmegruppeBO to be added. The ID of the new teilnahemgruppe is set by the backend\n             * @public\n            */\n\n             addTeilnahmeGruppe(teilnahmegruppeBO) {\n              return this.#fetchAdvanced(this.#addTeilnahmeGruppeURL(), {\n               method: 'POST',\n               headers: {\n                  'Accept': 'application/json, text/plain',\n                  'Content-type': 'application/json',\n                 },\n               body: JSON.stringify(teilnahmegruppeBO)\n               }).then((responseJSON) => {\n               // We always get an array of TeilnahmeGruppeBOs.fromJSON, but only need one object\n               let responseTeilnahmeGruppeBO = TeilnahmeGruppeBO.fromJSON(responseJSON)[0];\n               // console.info(TeilnahmeGruppeBOs);\n                 return new Promise(function (resolve) {\n                  resolve(responseTeilnahmeGruppeBO);\n                     })\n                   })\n               }\n\n              /** \n               * gibt die Teilnehmer mit der bestimmten ID als BO zurück\n               * @param {Number} person_id to be retrieved\n               * @public\n              */\n              getTeilnahmeGruppeById(person_id){\n                return this.#fetchAdvanced(this.#getTeilnahmeGruppeByIdURL(person_id)).then((responseJSON) => {\n                let teilnahmegruppeBOs = TeilnahmeGruppeBO.fromJSON(responseJSON);\n                //console.info(teilnahmegruppeBOs)\n                return new Promise(function (resolve){\n                 resolve(teilnahmegruppeBOs)\n                  })\n                })\n              }\n\n              /** \n               * gibt die Teilnehmer mit der bestimmten LerngruppenID als BO zurück\n               * @param {Number} lerngruppeId to be retrieved\n               * @public\n              */\n             getTeilnahmeGruppeByGruppe(lerngruppeId){\n              return this.#fetchAdvanced(this.#getTeilnahmeGruppeByGruppeURL(lerngruppeId)).then((responseJSON) => {\n              let teilnahmegruppeBOs = TeilnahmeGruppeBO.fromJSON(responseJSON);\n              //console.info(teilnahmegruppeBOs)\n              return new Promise(function (resolve){\n               resolve(teilnahmegruppeBOs)\n                })\n              })\n            }\n\n              /** \n               * gibt die Teilnehmer mit der bestimmten ID als BO zurück\n               * @param {Number} id to be retrieved\n               * @public\n              */\n             getTeilnahmeGruppeByPersonByGruppe(personId, lerngruppeId){\n              return this.#fetchAdvanced(this.#getTeilnahmeGruppeByPersonByGruppeURL(personId, lerngruppeId)).then((responseJSON) => {\n              let teilnahmegruppeBO = TeilnahmeGruppeBO.fromJSON(responseJSON);\n              console.info(teilnahmegruppeBO)\n              return new Promise(function (resolve){\n               resolve(teilnahmegruppeBO)\n                })\n              })\n            }\n\n            /**\n             * löscht Teilnahme an einer Gruppe nach der ID\n             * @param {Number} personid to be retrieved\n             * @public\n             */\n\n            deleteTeilnahmeGruppe(personid) {\n                return this.#fetchAdvanced(this.#deleteTeilnahmeGruppeURL(personid), {\n                    method: 'DELETE'\n                }).then((responseJSON) => {\n                    // We always get an array of KonversationBOs.fromJSON\n                    let responseTeilnahmeGruppeBO = TeilnahmeGruppeBO.fromJSON(responseJSON)[0];\n                    // console.info(KonversationBOs);\n                    return new Promise(function (resolve) {\n                        resolve(responseTeilnahmeGruppeBO);\n                    })\n                })\n              }\n\n\n        //Lernfachspezifische Methoden\n        /**\n           * Gibt alle Lernfaecher als BO zurück\n           * \n           * @public\n           */\n          getLernfaecher() {\n            return this.#fetchAdvanced(this.#getLernfaecherURL()).then((responseJSON) => {\n              let lernfaecherBOs = LernfachBO.fromJSON(responseJSON);\n              // console.info(lernfaecherBOs);\n              return new Promise(function (resolve) {\n                resolve(lernfaecherBOs);\n              })           \n            })\n          }\n          \n          /**\n           * Gibt eine Lernfaecher mit einer bestimmten ID als BO zurück\n           * \n           * @param {Number} id to be retrieved\n           * @public\n           */\n          getLernfach(id) {\n            return this.#fetchAdvanced(this.#getLernfachByIDURL(id)).then((responseJSON) => {\n              // We always get an array of PersonBOs.fromJSON, but only need one object\n              let lernfachBO = LernfachBO.fromJSON(responseJSON)[0];\n              // console.info(lernfachBO);\n              return new Promise(function (resolve) {\n                resolve(lernfachBO);\n              })\n            })\n          }\n\n          /**\n           * Gibt  Lernfaecher mit einer bestimmten ProfilID als BO zurück\n           * \n           * @param {Number} profilid to be retrieved\n           * @public\n           */\n          getLernfaecherByProfil(profilid) {\n            return this.#fetchAdvanced(this.#getLernfaecherByProfilURL(profilid)).then((responseJSON) => {\n              // We always get an array of PersonBOs.fromJSON, but only need one object\n              let lernfaecherBOs = LernfachBO.fromJSON(responseJSON);\n              console.info(lernfaecherBOs);\n              return new Promise(function (resolve) {\n                resolve(lernfaecherBOs);\n              })\n            })\n          }\n\n            /**\n             * löscht Teilnahme an einem Chat\n             * @param {Number} personid to be retrieved\n             * @public\n             */\n\n        deleteLernfaecherByProfil(profil_id) {\n              return this.#fetchAdvanced(this.#deleteLernfaecherByProfilURL(profil_id), {\n                  method: 'DELETE'\n              }).then ((responseJSON) => {\n                    let lernfaecherBOs = LernfachBO.fromJSON(responseJSON)[0];\n                    return new Promise(function (resolve) {\n                        resolve(lernfaecherBOs);\n                    })\n              })\n          }\n\n\n\n\n\n}","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfileDropDown.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/VorschlagListe.js",["269","270","271","272","273","274"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/GruppenListeEintrag.js",["275","276","277","278","279","280","281","282","283","284","285","286"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/NachrichtBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppenForm.js",["287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/AnfrageEingangForm.js",["305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/ProfilBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/MeinProfilForm.js",["331","332","333","334","335","336","337","338","339","340","341","342"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/PersonBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/VorschlagBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernvorliebenBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeChatBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/KonversationBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeGruppeBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/LerngruppeBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernfachBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/KonversationListeEintrag.js",["343","344","345","346","347"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/index.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/VorschlagListeEintrag.js",["348","349","350","351","352","353","354","355","356","357"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppeVerlassenDialog.js",["358"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppenBearbeitenForm.js",["359","360","361","362","363","364"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/BusinessObject.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/NamedBusinessObject.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/AnfrageEingangFormEintrag.js",["365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/MultiSelectLernfaecher.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ChatVerlassenForm.js",["391"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ContextErrorMessage from './ContextErrorMessage';\nimport LoadingProgress from './LoadingProgress';\nimport LernpartnerAPI from '../../api/LernpartnerAPI';\n\n\nclass ChatVerlassenForm extends Component {\n\n  constructor(props) {\n    super(props);\n\n    // Init the state\n    this.state = {\n      verlassenInProgress: false,\n      verlassenError: null\n    };\n  }\n\n  /** Chat verlassen */\n  verlasseChat = () => {\n    LernpartnerAPI.getAPI().deleteTeilnahmeChat(this.props.teilnahmeChat.getID())\n    .then(teilnahmeChat => {\n      this.setState({\n        verlassenInProgress: false,              // disable loading indicator\n        verlassenError: null                     // no error message\n      });\n      this.props.onClose(this.props.teilnahmeChat);  // call the parent with the deleted customer\n    }).catch(e =>\n      this.setState({\n        verlassenInProgress: false,              // disable loading indicator\n        verlassenError: e                        // show error message\n      })\n    );\n\n    // set loading to true\n    this.setState({\n      verlassenInProgress: true,                 // show loading indicator\n      verlassenError: null                       // disable error message\n    });\n  }\n\n  /** Handles the close / cancel button click event */\n  handleClose = () => {\n    // console.log(event);\n    this.props.onClose(null);\n  }\n\n  /** Renders the component */\n  render() {\n    const { classes, teilnahmeChat, konversationID, show } = this.props;\n    const { verlassenInProgress, verlassenError } = this.state;\n    //console.log(verlassenInProgress)\n    console.log(teilnahmeChat)\n    //console.log(teilnahmeChat.id)\n\n    return (\n      show ?\n        <Dialog open={show} onClose={this.handleClose}>\n          <DialogTitle id='delete-dialog-title'>Chat verlassen\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\n              <CloseIcon />\n            </IconButton>\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              <p>Möchtest du wirklich den Chat verlassen?</p>\n              <p style={{color: \"red\", fontSize: 14}}>!!!Achtung: Wenn du den Chat verlässt, kannst du nicht mehr an der Konversation teilnehmen!!!</p>\n            </DialogContentText>\n            <LoadingProgress show={verlassenInProgress} />\n            <ContextErrorMessage error={verlassenError} contextErrorMsg={`Der Chat konnte nicht verlassen werden.`}\n              onReload={this.verlasseChat} />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color='secondary'>\n              Abbrechen\n            </Button>\n            <Button variant='contained' onClick={this.verlasseChat} color='primary'>\n              Verlassen\n            </Button>\n          </DialogActions>\n        </Dialog>\n        : null\n    );\n  }\n}\n\n\n/** Component specific styles */\nconst styles = theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  }\n});\n\n/** PropTypes */\nChatVerlassenForm.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  /** The CustomerBO to be deleted */\n  teilnahmeChat: PropTypes.object.isRequired,\n  /** If true, the dialog is rendered */\n  show: PropTypes.bool.isRequired,\n  /**\n   * Handler function which is called, when the dialog is closed.\n   * Sends the deleted CustomerBO as parameter or null, if cancel was pressed.\n   *\n   * Signature: onClose(CustomerBO customer);\n   */\n  onClose: PropTypes.func.isRequired,\n}\n\nexport default withStyles(styles)(ChatVerlassenForm);\n","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/AnfrageForm.js",["392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/NachrichtListe.js",["416","417","418","419","420","421","422","423","424"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/NachrichtListeEintrag.js",["425","426","427","428","429"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/AnfrageAusstehendEintrag.js",["430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'\nimport Profil from './Profil';\nimport { withStyles, Button, ButtonGroup, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Card, Grid,\n    Accordion, AccordionSummary, AccordionDetails,\n    List, ListItem, ListItemText, ListItemSecondaryAction,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Typography\n    } from '@material-ui/core';\n//import { withStyles } from '@material-ui/core';\n//import { withRouter } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n//import InputLabel from '@material-ui/core/InputLabel';\n//import MenuItem from '@material-ui/core/MenuItem';\n//import FormControl from '@material-ui/core/FormControl';\n//import Select from '@material-ui/core/Select';\n//import ContextErrorMessage from './dialogs/ContextErrorMessage';\n//import LoadingProgress from './dialogs/LoadingProgress';\nimport AnfrageForm from './dialogs/AnfrageForm';\nimport ProfilDialog from './dialogs/ProfilDialog';\n\n/**\n * Es wird ein einzelner Vorschlag für einen passenden Lernpartner oder /-gruppe mit allen not wendigen Informationen dargestellt\n *\n * Hierfür werden Profilname, Alter, Geschlecht, Semester, Lernfach und der Prozentsatz des Matches angezeigt\n *\n */\n\nclass AnfrageAusstehendEintrag extends Component {\n    constructor(props){\n        super(props);\n\n        // initiiere einen leeren state\n        this.state = {\n\n            teilnahmenChatAusstehend: props.teilnahmenChatAusstehend,\n            teilnahmenChatAusstehendID: props.teilnahmenChatAusstehend.id,\n\n            teilnahmen: [],\n            chatPartner: null,\n\n            konversation: null,\n            konversationID: null,\n            konversationName: null,\n            konversationAnfragestatus: null,\n\n            testVar: false,\n\n            currentPersonName: \" und \" + props.currentPerson.vorname + \" \" + props.currentPerson.name,\n            nameNeu: null,\n\n            showProfilDialog: false,\n            showAnfrageForm: false,\n\n            loadingInProgress: false,\n            error: null\n        };\n        this.baseState = this.state;\n    }\n\n    // API Anbindung um Person vom Backend zu bekommen\n    getPerson = () => {\n      LernpartnerAPI.getAPI().getPerson(this.state.teilnahmenChatAusstehend.teilnehmer)\n      .then(personBO =>\n        this.setState({\n          chatPartner: personBO,              // disable loading indicator                 // no error message\n          nameNeu: this.state.konversation.name.replace(this.state.currentPersonName,'')\n        })).catch(e =>\n        this.setState({\n          chatPartner: null,\n          updatingInProgress: false,    // disable loading indicator\n          updatingError: e              // show error message\n        })\n      );\n    }\n\n    // API Anbindung um Lerngruppe vom Backend zu bekommen\n    getLerngruppe = () => {\n      LernpartnerAPI.getAPI().getLerngruppe(this.state.teilnahmenChatAusstehend.teilnehmer)\n      .then(lerngruppeBO =>\n          this.setState({\n            chatPartner: lerngruppeBO,\n            nameNeu: this.state.konversation.name,\n      })).catch(e =>\n      this.setState({\n          name: null,\n          loadingInProgress: false,\n          error: e,\n              }));\n      this.setState({\n        loadingInProgress: true,\n        error: null\n      });\n    }\n\n  \n  /** Konversation holen */\n  getKonversation = () => {\n    LernpartnerAPI.getAPI().getKonversation(this.state.teilnahmenChatAusstehend.konversation)\n    .then(konversationBO =>\n      this.setState({\n        konversation: konversationBO,              // disable loading indicator                 // no error message\n        konversationID: konversationBO.id,\n        konversationName: konversationBO.name,\n        konversationAnfragestatus: konversationBO.anfragestatus\n      })).then(() => {\n        this.nameAnpassen();\n        this.getTeilnahmeChats();\n    }).catch(e =>\n      this.setState({\n        konversation: null,\n        konversationID: null,\n        konversationName: null,\n        konversationAnfragestatus: null,\n        updatingInProgress: false,    // disable loading indicator\n        updatingError: e              // show error message\n      })\n    );\n  }\n\n  getTeilnahmeChats = () => {\n    LernpartnerAPI.getAPI().getTeilnahmeChatByStatusByKonversation(0, this.state.konversationID)\n    .then(teilnahmeChatBOs =>\n      this.setState({\n        teilnahmen: teilnahmeChatBOs,              // disable loading indicator                 // no error message\n      })).catch(e =>\n      this.setState({\n        teilnahmen: null,\n        updatingInProgress: false,    // disable loading indicator\n        updatingError: e              // show error message\n      })\n    );\n  }\n\n  nameAnpassen = () => {\n    if (this.state.konversation.name.includes(this.state.currentPersonName)){\n        this.getPerson();\n    }else{\n        this.getLerngruppe();\n     }\n  }\n\n  //Handles the onClick event of the show profil button\n  showProfilButtonClicked = (event) => {\n    event.stopPropagation();\n    this.setState({\n      showProfilDialog: true\n    });\n  }\n\n  /** Handles the onClose event of the CustomerForm */\n  profilDialogClosed = (profil) => {\n    // customer is not null and therefor changed\n    if (profil) {\n      this.setState({\n        showProfilDialog: false\n      });\n    } else {\n      this.setState({\n        showProfilDialog: false\n      });\n    }\n  }\n\n  //Setzen des Status, bei schließen des Dialogs\n  handleClose = () => {\n    this.setState(this.baseState);\n    this.props.onClose(null);\n  }\n\n  // Lifecycle methode, wird aufgerufen wenn componente in den DOM eingesetzt wird\n  componentDidMount() {\n    this.getKonversation();\n  }\n\n    render(){\n          const { classes, show, expandedState } = this.props;\n          const { teilnahmenChatAusstehend, teilnahmenChatAusstehendID, teilnahmen, nameNeu, konversation, konversationID, konversationAnfragestatus, chatPartner, showProfilDialog } = this.state;\n          console.log(chatPartner)\n          console.log(konversationID)\n          console.log(teilnahmenChatAusstehend)\n          console.log(teilnahmenChatAusstehendID)\n          console.log(konversationAnfragestatus)\n\n          return (\n            <div>\n            <div className={classes.list}>\n               <List>\n                <ListItem>\n                  <ListItemText primary={nameNeu} className={classes.name}/>\n                    <Button color='secondary' onClick={this.showProfilButtonClicked}>\n                        Profil ansehen\n                    </Button>\n                  </ListItem>\n               </List>\n             </div>\n            <ProfilDialog show={showProfilDialog} chatPartner={chatPartner} onClose={this.profilDialogClosed}/>\n          </div>\n          );\n        }\n}\n\n\nconst styles = theme => ({\n  root: {\n      width: '100%',\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n      padding: theme.spacing(1),\n  },\n  buttonAnnehmen: {\n    margin: theme.spacing(1),\n    },\n  buttonAblehnen: {\n    margin: theme.spacing(1),\n    backgroundColor: '#CC3333'\n  },\n  list: {\n    backgroundColor: theme.palette.grey[100],\n  }\n  });\n\n/** PropTypes */\nAnfrageAusstehendEintrag.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  vorschlag: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired,\n  expandedState: PropTypes.bool.isRequired,\n}\n\nexport default withStyles(styles)(AnfrageAusstehendEintrag);","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfilDialog.js",["456","457","458","459"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ContextErrorMessage from './ContextErrorMessage';\nimport LoadingProgress from './LoadingProgress';\nimport LernpartnerAPI from '../../api/LernpartnerAPI'\n\nclass ProfilDialog extends Component {\n\n    constructor(props) {\n      super(props);\n  \n      // Init the state\n      this.state = {\n            person: null,\n            profil: null,\n            \n            lernvorlieben: null,\n            \n            tageszeiten: null,\n            tage: null,\n            frequenz: null,\n            lernart: null,\n            gruppengroesse: null,\n            lernort: null,\n            gruppe: null,\n            personVorname: null,\n            personName: null,\n            personAlter: null,\n            personGeschlecht: null,\n            personSemester: 0,\n            personStudiengang: null,\n            lerngruppe: false,\n            lerngruppeName: null,\n            personProfilID: null,\n            lernfaecher: [],\n            lernfaechernamen: [],\n            personLernvorliebenID: null,\n            profilError: null,\n            loadingInProgress: false,\n            loadingError: null,\n      };\n    }\n  \n    getProfil = () => {\n        console.log('Test')\n        LernpartnerAPI.getAPI().getProfil(this.props.chatPartner.profil)\n        .then(profilBO =>\n          this.setState({\n                profil: profilBO,\n                gruppe: profilBO.gruppe,\n                lernfaecher: profilBO.lernfaecher,\n                loadingInProgress: false,\n                error: null\n          })).then(() => {\n            this.getPartner();\n            this.getLernfaecher();\n            //console.log(this.state.profil.id)\n        }).catch(e =>\n            this.setState({ // Reset state with error from catch\n              gruppeProfil: null,\n              loadingInProgress: false,\n              error: e,\n            })\n          );\n        }\n\n    getLernvorlieben = () => {\n        LernpartnerAPI.getAPI().getLernvorlieben(this.state.profil.lernvorlieben_id)\n        .then(lernvorliebenBO =>\n          this.setState({\n                lernvorlieben: lernvorliebenBO,\n                tageszeiten: lernvorliebenBO.tageszeiten_bez,\n                tage: lernvorliebenBO.tage_bez,\n                frequenz: lernvorliebenBO.frequenz_bez,\n                lernart: lernvorliebenBO.lernart_bez,\n                gruppengroesse: lernvorliebenBO.gruppengroesse_bez,\n                lernort: lernvorliebenBO.lernort_bez,\n                loadingInProgress: false,\n                error: null\n          })).catch(e =>\n            this.setState({ // Reset state with error from catch\n              lernvorlieben: null,\n              loadingInProgress: false,\n              error: e,\n            })\n          );\n    \n        // set loading to true\n        this.setState({\n          loadingInProgress: true,\n          loadingError: null\n        });\n      }\n\n      // API Anbindung um Person vom Backend zu bekommen\n    getPerson = () => {\n        \n        LernpartnerAPI.getAPI().getPersonByProfil(this.props.chatPartner.profil)\n        .then(personBO =>\n            this.setState({\n              person: personBO,\n              personName: personBO.name,\n              personVorname: personBO.vorname,\n              personAlter: personBO.alter,\n              personGeschlecht: personBO.geschlecht,\n              personStudiengang: personBO.studiengang,\n              personSemester: personBO.semester,\n              loadingInProgress: false,\n              error: null,\n        })).then(() => {\n            this.getLernvorlieben();\n        }).catch(e =>\n                this.setState({\n                  person: null,\n                  personName: null,\n                  personVorname: null,\n                  loadingInProgress: false,\n                  error: e,\n                }));\n        this.setState({\n          loadingInProgress: true,\n          error: null\n        });\n      }\n  \n      // API Anbindung um Lerngruppe vom Backend zu bekommen\n      getLerngruppe = () => {\n        console.log('testGruppe')\n        LernpartnerAPI.getAPI().getLerngruppeByProfil(this.props.chatPartner.profil)\n        .then(lerngruppeBO =>\n            this.setState({\n              lerngruppe: lerngruppeBO,\n              lerngruppeName: lerngruppeBO.name,\n              loadingInProgress: false,\n              error: null,\n        })).then(() => {\n            this.getLernvorlieben();\n        }).catch(e =>\n                this.setState({\n                  lerngruppe: null,\n                  lerngruppeName: null,\n                  loadingInProgress: false,\n                  error: e,\n                }));\n        this.setState({\n          loadingInProgress: true,\n          error: null\n        });\n      }\n\n    // API Anbindung um die Lernfächer der Person vom Backend zu bekommen\n    getLernfaecher = () => {\n        LernpartnerAPI.getAPI().getLernfaecherByProfil(this.props.chatPartner.profil)\n        .then(lernfaecherBOs =>\n          this.setState({\n                personLernfaecher: lernfaecherBOs,\n                lernfaechernamen: lernfaecherBOs.map(lernfach=> lernfach.bezeichnung + \"  \"),\n                loadingInProgress: false,\n                error: null\n          }))\n          .catch(e =>\n            this.setState({ // Reset state with error from catch\n              personLernfaecher: null,\n              loadingInProgress: false,\n              error: e,\n            })\n          );\n    \n        // set loading to true\n        this.setState({\n          loadingInProgress: true,\n          loadingError: null\n        });\n      }\n\n    getPartner = () => {\n        if (this.state.gruppe === true){\n            console.log('test1')\n            this.getLerngruppe();\n        } else {\n            console.log('test2')\n            this.getPerson();\n        }\n    }\n\n    getInfos = () => {\n        console.log('Bin da')\n        // load initial balance\n        this.getProfil();\n        \n      }\n    \n    /** Handles the close / cancel button click event */\n    handleClose = () => {\n        // Reset the state\n        this.setState(this.baseState);\n        this.props.onClose(null);\n    }\n    \n  \n    /** Renders the component */\n    render() {\n      const { classes, teilnahmeGruppe, chatPartner, show } = this.props;\n      const { personName, personVorname, personAlter, personGeschlecht, personStudiengang, personSemester, lernfaecher, lernfaechernamen, gruppe, lerngruppeName, profil, tageszeiten, lernort, lernart, frequenz, gruppengroesse, tage, verlassenInProgress, profilError } = this.state;\n      //console.log(verlassenInProgress)\n      console.log(teilnahmeGruppe)\n      console.log(chatPartner)\n      \n      console.log(gruppe)\n      console.log(lerngruppeName)\n      //console.log(teilnahmeGruppe.id)\n  \n      return (\n        \n        show ?\n          <Dialog open={show} onEnter={this.getInfos} onClose={this.handleClose}>\n            <DialogTitle id='profil-dialog-title'>Profil anzeigen\n              <IconButton className={classes.closeButton} onClick={this.handleClose}>\n                <CloseIcon />\n              </IconButton>\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                  \n            {\n            gruppe ?\n                <>\n                    \n                    <b> Gruppenname: </b>{chatPartner.name}<br /><br />\n                    <b>Lernfächer:</b>\n                    {\n                        lernfaechernamen.map(lernfach => \n                          <li>{lernfach}</li>\n                        )\n                                 \n                    }\n                    <br/>\n                    <b>Lernvorlieben:</b><br/>\n                    Tageszeiten: {tageszeiten}<br />\n                    Tage: {tage}<br />\n                    Frequenz: {frequenz}<br />\n                    Lernart: {lernart}<br />\n                    Lernort: {lernort}\n                </>\n\n                :\n                <>\n                    <p>Profil von {chatPartner.vorname} {chatPartner.name} </p>\n                    \n                    <b>Alter: </b> {personAlter}<br/>\n                    <b>Semester: </b> {personSemester}<br/>\n                    <b>Studiengang: </b>{personStudiengang}<br/>\n                    <b>Geschlecht: </b> {personGeschlecht}<br/>\n                    <b>Lernfächer: </b> \n                    {\n                        lernfaechernamen.map(lernfach => \n                          <li>{lernfach}</li>\n                        )\n                                 \n                    }\n                    <br/>\n                    <b>Lernvorlieben:</b><br/>\n                    Tageszeiten: {tageszeiten}<br />\n                    Tage: {tage}<br />\n                    Frequenz: {frequenz}<br />\n                    Lernart: {lernart}<br />\n                    Gruppengröße: {gruppengroesse}<br/>\n                    Lernort: {lernort}\n                   \n                </>\n           }    \n              </DialogContentText>\n              <LoadingProgress show={verlassenInProgress} />\n              <ContextErrorMessage error={profilError} contextErrorMsg={`Die Gruppe konnte nicht verlassen werden.`}\n                 />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color='secondary'>\n                Abbrechen\n              </Button>\n              \n            </DialogActions>\n          </Dialog>\n          : null\n        \n      );\n    }\n  }\n  \n  \n  /** Component specific styles */\n  const styles = theme => ({\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    }\n  });\n  \n  /** PropTypes */\n  ProfilDialog.propTypes = {\n    /** @ignore */\n    classes: PropTypes.object.isRequired,\n    /** The CustomerBO to be deleted */\n    chatPartner: PropTypes.object.isRequired,\n    /** If true, the dialog is rendered */\n    show: PropTypes.bool.isRequired,\n    /**\n     * Handler function which is called, when the dialog is closed.\n     * Sends the deleted CustomerBO as parameter or null, if cancel was pressed.\n     *\n     * Signature: onClose(CustomerBO customer);\n     */\n    onClose: PropTypes.func.isRequired,\n  }\n  \n  export default withStyles(styles)(ProfilDialog);","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfilLoeschenForm.js",["460","461","462"],{"ruleId":"463","replacedBy":"464"},{"ruleId":"465","replacedBy":"466"},{"ruleId":"467","severity":1,"message":"468","line":1,"column":17,"nodeType":"469","messageId":"470","endLine":1,"endColumn":26},{"ruleId":"467","severity":1,"message":"471","line":13,"column":8,"nodeType":"469","messageId":"470","endLine":13,"endColumn":25},{"ruleId":"467","severity":1,"message":"472","line":19,"column":8,"nodeType":"469","messageId":"470","endLine":19,"endColumn":14},{"ruleId":"467","severity":1,"message":"473","line":2,"column":41,"nodeType":"469","messageId":"470","endLine":2,"endColumn":45},{"ruleId":"467","severity":1,"message":"474","line":3,"column":22,"nodeType":"469","messageId":"470","endLine":3,"endColumn":32},{"ruleId":"467","severity":1,"message":"475","line":3,"column":34,"nodeType":"469","messageId":"470","endLine":3,"endColumn":40},{"ruleId":"467","severity":1,"message":"476","line":3,"column":42,"nodeType":"469","messageId":"470","endLine":3,"endColumn":47},{"ruleId":"467","severity":1,"message":"473","line":3,"column":49,"nodeType":"469","messageId":"470","endLine":3,"endColumn":53},{"ruleId":"467","severity":1,"message":"477","line":3,"column":55,"nodeType":"469","messageId":"470","endLine":3,"endColumn":59},{"ruleId":"467","severity":1,"message":"478","line":4,"column":10,"nodeType":"469","messageId":"470","endLine":4,"endColumn":20},{"ruleId":"467","severity":1,"message":"479","line":6,"column":8,"nodeType":"469","messageId":"470","endLine":6,"endColumn":27},{"ruleId":"467","severity":1,"message":"480","line":7,"column":8,"nodeType":"469","messageId":"470","endLine":7,"endColumn":23},{"ruleId":"481","severity":1,"message":"482","line":30,"column":13,"nodeType":"483","messageId":"484","endLine":30,"endColumn":19},{"ruleId":"467","severity":1,"message":"485","line":217,"column":22,"nodeType":"469","messageId":"470","endLine":217,"endColumn":26},{"ruleId":"467","severity":1,"message":"486","line":219,"column":46,"nodeType":"469","messageId":"470","endLine":219,"endColumn":59},{"ruleId":"467","severity":1,"message":"487","line":219,"column":108,"nodeType":"469","messageId":"470","endLine":219,"endColumn":122},{"ruleId":"467","severity":1,"message":"488","line":219,"column":132,"nodeType":"469","messageId":"470","endLine":219,"endColumn":153},{"ruleId":"467","severity":1,"message":"489","line":219,"column":155,"nodeType":"469","messageId":"470","endLine":219,"endColumn":173},{"ruleId":"467","severity":1,"message":"490","line":219,"column":193,"nodeType":"469","messageId":"470","endLine":219,"endColumn":210},{"ruleId":"467","severity":1,"message":"491","line":219,"column":212,"nodeType":"469","messageId":"470","endLine":219,"endColumn":217},{"ruleId":"467","severity":1,"message":"476","line":3,"column":10,"nodeType":"469","messageId":"470","endLine":3,"endColumn":15},{"ruleId":"467","severity":1,"message":"474","line":3,"column":17,"nodeType":"469","messageId":"470","endLine":3,"endColumn":27},{"ruleId":"467","severity":1,"message":"475","line":4,"column":22,"nodeType":"469","messageId":"470","endLine":4,"endColumn":28},{"ruleId":"467","severity":1,"message":"492","line":4,"column":30,"nodeType":"469","messageId":"470","endLine":4,"endColumn":39},{"ruleId":"467","severity":1,"message":"493","line":4,"column":41,"nodeType":"469","messageId":"470","endLine":4,"endColumn":55},{"ruleId":"467","severity":1,"message":"494","line":4,"column":57,"nodeType":"469","messageId":"470","endLine":4,"endColumn":67},{"ruleId":"467","severity":1,"message":"476","line":16,"column":8,"nodeType":"469","messageId":"470","endLine":16,"endColumn":13},{"ruleId":"467","severity":1,"message":"495","line":116,"column":30,"nodeType":"469","messageId":"470","endLine":116,"endColumn":38},{"ruleId":"467","severity":1,"message":"494","line":3,"column":30,"nodeType":"469","messageId":"470","endLine":3,"endColumn":40},{"ruleId":"467","severity":1,"message":"496","line":3,"column":123,"nodeType":"469","messageId":"470","endLine":3,"endColumn":127},{"ruleId":"467","severity":1,"message":"497","line":12,"column":8,"nodeType":"469","messageId":"470","endLine":12,"endColumn":17},{"ruleId":"467","severity":1,"message":"498","line":314,"column":32,"nodeType":"469","messageId":"470","endLine":314,"endColumn":45},{"ruleId":"467","severity":1,"message":"499","line":345,"column":11,"nodeType":"469","messageId":"470","endLine":345,"endColumn":38},{"ruleId":"467","severity":1,"message":"500","line":2,"column":10,"nodeType":"469","messageId":"470","endLine":2,"endColumn":20},{"ruleId":"467","severity":1,"message":"501","line":4,"column":8,"nodeType":"469","messageId":"470","endLine":4,"endColumn":18},{"ruleId":"467","severity":1,"message":"502","line":5,"column":8,"nodeType":"469","messageId":"470","endLine":5,"endColumn":22},{"ruleId":"467","severity":1,"message":"503","line":8,"column":8,"nodeType":"469","messageId":"470","endLine":8,"endColumn":20},{"ruleId":"481","severity":1,"message":"504","line":150,"column":3,"nodeType":"483","messageId":"484","endLine":150,"endColumn":14},{"ruleId":"481","severity":1,"message":"505","line":154,"column":3,"nodeType":"483","messageId":"484","endLine":154,"endColumn":14},{"ruleId":"467","severity":1,"message":"506","line":9,"column":18,"nodeType":"469","messageId":"470","endLine":9,"endColumn":29},{"ruleId":"467","severity":1,"message":"507","line":180,"column":49,"nodeType":"469","messageId":"470","endLine":180,"endColumn":72},{"ruleId":"467","severity":1,"message":"508","line":3,"column":34,"nodeType":"469","messageId":"470","endLine":3,"endColumn":48},{"ruleId":"467","severity":1,"message":"509","line":3,"column":50,"nodeType":"469","messageId":"470","endLine":3,"endColumn":55},{"ruleId":"467","severity":1,"message":"510","line":3,"column":57,"nodeType":"469","messageId":"470","endLine":3,"endColumn":66},{"ruleId":"467","severity":1,"message":"511","line":3,"column":68,"nodeType":"469","messageId":"470","endLine":3,"endColumn":77},{"ruleId":"467","severity":1,"message":"512","line":3,"column":86,"nodeType":"469","messageId":"470","endLine":3,"endColumn":94},{"ruleId":"467","severity":1,"message":"513","line":3,"column":96,"nodeType":"469","messageId":"470","endLine":3,"endColumn":105},{"ruleId":"467","severity":1,"message":"473","line":3,"column":107,"nodeType":"469","messageId":"470","endLine":3,"endColumn":111},{"ruleId":"467","severity":1,"message":"477","line":3,"column":113,"nodeType":"469","messageId":"470","endLine":3,"endColumn":117},{"ruleId":"467","severity":1,"message":"514","line":3,"column":119,"nodeType":"469","messageId":"470","endLine":3,"endColumn":128},{"ruleId":"467","severity":1,"message":"479","line":9,"column":8,"nodeType":"469","messageId":"470","endLine":9,"endColumn":27},{"ruleId":"467","severity":1,"message":"480","line":10,"column":8,"nodeType":"469","messageId":"470","endLine":10,"endColumn":23},{"ruleId":"467","severity":1,"message":"515","line":318,"column":15,"nodeType":"469","messageId":"470","endLine":318,"endColumn":19},{"ruleId":"467","severity":1,"message":"516","line":318,"column":21,"nodeType":"469","messageId":"470","endLine":318,"endColumn":35},{"ruleId":"467","severity":1,"message":"517","line":318,"column":37,"nodeType":"469","messageId":"470","endLine":318,"endColumn":52},{"ruleId":"467","severity":1,"message":"518","line":318,"column":80,"nodeType":"469","messageId":"470","endLine":318,"endColumn":92},{"ruleId":"467","severity":1,"message":"519","line":318,"column":169,"nodeType":"469","messageId":"470","endLine":318,"endColumn":186},{"ruleId":"467","severity":1,"message":"520","line":318,"column":188,"nodeType":"469","messageId":"470","endLine":318,"endColumn":196},{"ruleId":"467","severity":1,"message":"488","line":318,"column":217,"nodeType":"469","messageId":"470","endLine":318,"endColumn":238},{"ruleId":"467","severity":1,"message":"490","line":318,"column":480,"nodeType":"469","messageId":"470","endLine":318,"endColumn":497},{"ruleId":"467","severity":1,"message":"491","line":318,"column":499,"nodeType":"469","messageId":"470","endLine":318,"endColumn":504},{"ruleId":"521","severity":1,"message":"522","line":633,"column":9,"nodeType":"523","messageId":"484","endLine":640,"endColumn":10},{"ruleId":"467","severity":1,"message":"492","line":4,"column":30,"nodeType":"469","messageId":"470","endLine":4,"endColumn":39},{"ruleId":"467","severity":1,"message":"493","line":4,"column":41,"nodeType":"469","messageId":"470","endLine":4,"endColumn":55},{"ruleId":"467","severity":1,"message":"494","line":4,"column":57,"nodeType":"469","messageId":"470","endLine":4,"endColumn":67},{"ruleId":"467","severity":1,"message":"477","line":4,"column":69,"nodeType":"469","messageId":"470","endLine":4,"endColumn":73},{"ruleId":"467","severity":1,"message":"474","line":4,"column":75,"nodeType":"469","messageId":"470","endLine":4,"endColumn":85},{"ruleId":"467","severity":1,"message":"520","line":99,"column":47,"nodeType":"469","messageId":"470","endLine":99,"endColumn":55},{"ruleId":"467","severity":1,"message":"478","line":5,"column":10,"nodeType":"469","messageId":"470","endLine":5,"endColumn":20},{"ruleId":"467","severity":1,"message":"524","line":6,"column":10,"nodeType":"469","messageId":"470","endLine":6,"endColumn":20},{"ruleId":"467","severity":1,"message":"506","line":7,"column":18,"nodeType":"469","messageId":"470","endLine":7,"endColumn":29},{"ruleId":"467","severity":1,"message":"479","line":13,"column":8,"nodeType":"469","messageId":"470","endLine":13,"endColumn":27},{"ruleId":"467","severity":1,"message":"480","line":14,"column":8,"nodeType":"469","messageId":"470","endLine":14,"endColumn":23},{"ruleId":"467","severity":1,"message":"525","line":187,"column":19,"nodeType":"469","messageId":"470","endLine":187,"endColumn":26},{"ruleId":"467","severity":1,"message":"526","line":191,"column":46,"nodeType":"469","messageId":"470","endLine":191,"endColumn":56},{"ruleId":"467","severity":1,"message":"527","line":191,"column":93,"nodeType":"469","messageId":"470","endLine":191,"endColumn":103},{"ruleId":"467","severity":1,"message":"528","line":191,"column":163,"nodeType":"469","messageId":"470","endLine":191,"endColumn":181},{"ruleId":"467","severity":1,"message":"490","line":191,"column":183,"nodeType":"469","messageId":"470","endLine":191,"endColumn":200},{"ruleId":"467","severity":1,"message":"491","line":191,"column":202,"nodeType":"469","messageId":"470","endLine":191,"endColumn":207},{"ruleId":"481","severity":1,"message":"529","line":218,"column":86,"nodeType":"483","messageId":"484","endLine":218,"endColumn":91},{"ruleId":"467","severity":1,"message":"530","line":3,"column":78,"nodeType":"469","messageId":"470","endLine":3,"endColumn":95},{"ruleId":"467","severity":1,"message":"496","line":3,"column":123,"nodeType":"469","messageId":"470","endLine":3,"endColumn":127},{"ruleId":"467","severity":1,"message":"474","line":8,"column":5,"nodeType":"469","messageId":"470","endLine":8,"endColumn":15},{"ruleId":"467","severity":1,"message":"531","line":11,"column":10,"nodeType":"469","messageId":"470","endLine":11,"endColumn":24},{"ruleId":"467","severity":1,"message":"532","line":11,"column":26,"nodeType":"469","messageId":"470","endLine":11,"endColumn":33},{"ruleId":"467","severity":1,"message":"478","line":12,"column":10,"nodeType":"469","messageId":"470","endLine":12,"endColumn":20},{"ruleId":"467","severity":1,"message":"533","line":22,"column":8,"nodeType":"469","messageId":"470","endLine":22,"endColumn":27},{"ruleId":"467","severity":1,"message":"486","line":379,"column":13,"nodeType":"469","messageId":"470","endLine":379,"endColumn":26},{"ruleId":"467","severity":1,"message":"534","line":379,"column":28,"nodeType":"469","messageId":"470","endLine":379,"endColumn":34},{"ruleId":"467","severity":1,"message":"535","line":379,"column":36,"nodeType":"469","messageId":"470","endLine":379,"endColumn":46},{"ruleId":"467","severity":1,"message":"536","line":379,"column":174,"nodeType":"469","messageId":"470","endLine":379,"endColumn":195},{"ruleId":"467","severity":1,"message":"537","line":379,"column":239,"nodeType":"469","messageId":"470","endLine":379,"endColumn":256},{"ruleId":"467","severity":1,"message":"538","line":379,"column":286,"nodeType":"469","messageId":"470","endLine":379,"endColumn":296},{"ruleId":"467","severity":1,"message":"539","line":380,"column":41,"nodeType":"469","messageId":"470","endLine":380,"endColumn":55},{"ruleId":"467","severity":1,"message":"540","line":380,"column":91,"nodeType":"469","messageId":"470","endLine":380,"endColumn":104},{"ruleId":"467","severity":1,"message":"541","line":380,"column":140,"nodeType":"469","messageId":"470","endLine":380,"endColumn":153},{"ruleId":"467","severity":1,"message":"542","line":381,"column":5,"nodeType":"469","messageId":"470","endLine":381,"endColumn":23},{"ruleId":"467","severity":1,"message":"543","line":381,"column":25,"nodeType":"469","messageId":"470","endLine":381,"endColumn":38},{"ruleId":"467","severity":1,"message":"475","line":3,"column":22,"nodeType":"469","messageId":"470","endLine":3,"endColumn":28},{"ruleId":"467","severity":1,"message":"506","line":3,"column":30,"nodeType":"469","messageId":"470","endLine":3,"endColumn":41},{"ruleId":"467","severity":1,"message":"530","line":3,"column":91,"nodeType":"469","messageId":"470","endLine":3,"endColumn":108},{"ruleId":"467","severity":1,"message":"544","line":3,"column":110,"nodeType":"469","messageId":"470","endLine":3,"endColumn":123},{"ruleId":"467","severity":1,"message":"492","line":3,"column":125,"nodeType":"469","messageId":"470","endLine":3,"endColumn":134},{"ruleId":"467","severity":1,"message":"545","line":4,"column":5,"nodeType":"469","messageId":"470","endLine":4,"endColumn":14},{"ruleId":"467","severity":1,"message":"546","line":4,"column":16,"nodeType":"469","messageId":"470","endLine":4,"endColumn":32},{"ruleId":"467","severity":1,"message":"547","line":4,"column":34,"nodeType":"469","messageId":"470","endLine":4,"endColumn":50},{"ruleId":"467","severity":1,"message":"548","line":5,"column":35,"nodeType":"469","messageId":"470","endLine":5,"endColumn":58},{"ruleId":"467","severity":1,"message":"549","line":6,"column":5,"nodeType":"469","messageId":"470","endLine":6,"endColumn":16},{"ruleId":"467","severity":1,"message":"501","line":7,"column":5,"nodeType":"469","messageId":"470","endLine":7,"endColumn":15},{"ruleId":"467","severity":1,"message":"550","line":8,"column":5,"nodeType":"469","messageId":"470","endLine":8,"endColumn":11},{"ruleId":"467","severity":1,"message":"551","line":9,"column":5,"nodeType":"469","messageId":"470","endLine":9,"endColumn":13},{"ruleId":"467","severity":1,"message":"474","line":10,"column":5,"nodeType":"469","messageId":"470","endLine":10,"endColumn":15},{"ruleId":"467","severity":1,"message":"531","line":13,"column":10,"nodeType":"469","messageId":"470","endLine":13,"endColumn":24},{"ruleId":"467","severity":1,"message":"532","line":13,"column":26,"nodeType":"469","messageId":"470","endLine":13,"endColumn":33},{"ruleId":"467","severity":1,"message":"478","line":14,"column":10,"nodeType":"469","messageId":"470","endLine":14,"endColumn":20},{"ruleId":"467","severity":1,"message":"552","line":17,"column":8,"nodeType":"469","messageId":"470","endLine":17,"endColumn":20},{"ruleId":"467","severity":1,"message":"553","line":18,"column":8,"nodeType":"469","messageId":"470","endLine":18,"endColumn":22},{"ruleId":"467","severity":1,"message":"554","line":19,"column":8,"nodeType":"469","messageId":"470","endLine":19,"endColumn":23},{"ruleId":"467","severity":1,"message":"555","line":20,"column":8,"nodeType":"469","messageId":"470","endLine":20,"endColumn":16},{"ruleId":"467","severity":1,"message":"556","line":21,"column":8,"nodeType":"469","messageId":"470","endLine":21,"endColumn":16},{"ruleId":"467","severity":1,"message":"557","line":156,"column":47,"nodeType":"469","messageId":"470","endLine":156,"endColumn":61},{"ruleId":"467","severity":1,"message":"558","line":157,"column":33,"nodeType":"469","messageId":"470","endLine":157,"endColumn":57},{"ruleId":"467","severity":1,"message":"542","line":157,"column":170,"nodeType":"469","messageId":"470","endLine":157,"endColumn":188},{"ruleId":"467","severity":1,"message":"543","line":157,"column":190,"nodeType":"469","messageId":"470","endLine":157,"endColumn":203},{"ruleId":"467","severity":1,"message":"496","line":3,"column":123,"nodeType":"469","messageId":"470","endLine":3,"endColumn":127},{"ruleId":"467","severity":1,"message":"478","line":12,"column":10,"nodeType":"469","messageId":"470","endLine":12,"endColumn":20},{"ruleId":"467","severity":1,"message":"486","line":301,"column":62,"nodeType":"469","messageId":"470","endLine":301,"endColumn":75},{"ruleId":"467","severity":1,"message":"559","line":301,"column":77,"nodeType":"469","messageId":"470","endLine":301,"endColumn":94},{"ruleId":"467","severity":1,"message":"560","line":302,"column":17,"nodeType":"469","messageId":"470","endLine":302,"endColumn":30},{"ruleId":"467","severity":1,"message":"561","line":302,"column":32,"nodeType":"469","messageId":"470","endLine":302,"endColumn":48},{"ruleId":"467","severity":1,"message":"562","line":302,"column":50,"nodeType":"469","messageId":"470","endLine":302,"endColumn":54},{"ruleId":"467","severity":1,"message":"516","line":302,"column":56,"nodeType":"469","messageId":"470","endLine":302,"endColumn":70},{"ruleId":"467","severity":1,"message":"517","line":302,"column":72,"nodeType":"469","messageId":"470","endLine":302,"endColumn":87},{"ruleId":"467","severity":1,"message":"563","line":302,"column":89,"nodeType":"469","messageId":"470","endLine":302,"endColumn":107},{"ruleId":"467","severity":1,"message":"534","line":302,"column":109,"nodeType":"469","messageId":"470","endLine":302,"endColumn":115},{"ruleId":"467","severity":1,"message":"499","line":305,"column":55,"nodeType":"469","messageId":"470","endLine":305,"endColumn":82},{"ruleId":"467","severity":1,"message":"564","line":6,"column":8,"nodeType":"469","messageId":"470","endLine":6,"endColumn":17},{"ruleId":"467","severity":1,"message":"565","line":8,"column":10,"nodeType":"469","messageId":"470","endLine":8,"endColumn":19},{"ruleId":"467","severity":1,"message":"525","line":111,"column":11,"nodeType":"469","messageId":"470","endLine":111,"endColumn":18},{"ruleId":"467","severity":1,"message":"566","line":112,"column":40,"nodeType":"469","messageId":"470","endLine":112,"endColumn":54},{"ruleId":"467","severity":1,"message":"567","line":112,"column":84,"nodeType":"469","messageId":"470","endLine":112,"endColumn":100},{"ruleId":"467","severity":1,"message":"472","line":4,"column":8,"nodeType":"469","messageId":"470","endLine":4,"endColumn":14},{"ruleId":"467","severity":1,"message":"506","line":8,"column":18,"nodeType":"469","messageId":"470","endLine":8,"endColumn":29},{"ruleId":"467","severity":1,"message":"568","line":251,"column":28,"nodeType":"469","messageId":"470","endLine":251,"endColumn":41},{"ruleId":"467","severity":1,"message":"534","line":251,"column":54,"nodeType":"469","messageId":"470","endLine":251,"endColumn":60},{"ruleId":"467","severity":1,"message":"569","line":251,"column":85,"nodeType":"469","messageId":"470","endLine":251,"endColumn":91},{"ruleId":"467","severity":1,"message":"535","line":251,"column":122,"nodeType":"469","messageId":"470","endLine":251,"endColumn":132},{"ruleId":"467","severity":1,"message":"570","line":251,"column":166,"nodeType":"469","messageId":"470","endLine":251,"endColumn":180},{"ruleId":"467","severity":1,"message":"571","line":251,"column":182,"nodeType":"469","messageId":"470","endLine":251,"endColumn":194},{"ruleId":"467","severity":1,"message":"572","line":251,"column":196,"nodeType":"469","messageId":"470","endLine":251,"endColumn":214},{"ruleId":"467","severity":1,"message":"527","line":251,"column":216,"nodeType":"469","messageId":"470","endLine":251,"endColumn":226},{"ruleId":"467","severity":1,"message":"573","line":58,"column":39,"nodeType":"469","messageId":"470","endLine":58,"endColumn":51},{"ruleId":"467","severity":1,"message":"496","line":3,"column":123,"nodeType":"469","messageId":"470","endLine":3,"endColumn":127},{"ruleId":"467","severity":1,"message":"478","line":11,"column":10,"nodeType":"469","messageId":"470","endLine":11,"endColumn":20},{"ruleId":"467","severity":1,"message":"498","line":262,"column":47,"nodeType":"469","messageId":"470","endLine":262,"endColumn":60},{"ruleId":"467","severity":1,"message":"535","line":262,"column":62,"nodeType":"469","messageId":"470","endLine":262,"endColumn":72},{"ruleId":"467","severity":1,"message":"486","line":262,"column":74,"nodeType":"469","messageId":"470","endLine":262,"endColumn":87},{"ruleId":"467","severity":1,"message":"574","line":265,"column":45,"nodeType":"469","messageId":"470","endLine":265,"endColumn":56},{"ruleId":"467","severity":1,"message":"472","line":4,"column":8,"nodeType":"469","messageId":"470","endLine":4,"endColumn":14},{"ruleId":"467","severity":1,"message":"506","line":5,"column":30,"nodeType":"469","messageId":"470","endLine":5,"endColumn":41},{"ruleId":"467","severity":1,"message":"494","line":5,"column":43,"nodeType":"469","messageId":"470","endLine":5,"endColumn":53},{"ruleId":"467","severity":1,"message":"575","line":5,"column":55,"nodeType":"469","messageId":"470","endLine":5,"endColumn":61},{"ruleId":"467","severity":1,"message":"576","line":5,"column":63,"nodeType":"469","messageId":"470","endLine":5,"endColumn":74},{"ruleId":"467","severity":1,"message":"577","line":5,"column":76,"nodeType":"469","messageId":"470","endLine":5,"endColumn":89},{"ruleId":"467","severity":1,"message":"530","line":5,"column":91,"nodeType":"469","messageId":"470","endLine":5,"endColumn":108},{"ruleId":"467","severity":1,"message":"544","line":5,"column":110,"nodeType":"469","messageId":"470","endLine":5,"endColumn":123},{"ruleId":"467","severity":1,"message":"492","line":5,"column":125,"nodeType":"469","messageId":"470","endLine":5,"endColumn":134},{"ruleId":"467","severity":1,"message":"477","line":5,"column":142,"nodeType":"469","messageId":"470","endLine":5,"endColumn":146},{"ruleId":"467","severity":1,"message":"545","line":6,"column":5,"nodeType":"469","messageId":"470","endLine":6,"endColumn":14},{"ruleId":"467","severity":1,"message":"546","line":6,"column":16,"nodeType":"469","messageId":"470","endLine":6,"endColumn":32},{"ruleId":"467","severity":1,"message":"547","line":6,"column":34,"nodeType":"469","messageId":"470","endLine":6,"endColumn":50},{"ruleId":"467","severity":1,"message":"548","line":7,"column":35,"nodeType":"469","messageId":"470","endLine":7,"endColumn":58},{"ruleId":"467","severity":1,"message":"549","line":8,"column":5,"nodeType":"469","messageId":"470","endLine":8,"endColumn":16},{"ruleId":"467","severity":1,"message":"501","line":9,"column":5,"nodeType":"469","messageId":"470","endLine":9,"endColumn":15},{"ruleId":"467","severity":1,"message":"550","line":10,"column":5,"nodeType":"469","messageId":"470","endLine":10,"endColumn":11},{"ruleId":"467","severity":1,"message":"551","line":11,"column":5,"nodeType":"469","messageId":"470","endLine":11,"endColumn":13},{"ruleId":"467","severity":1,"message":"474","line":12,"column":5,"nodeType":"469","messageId":"470","endLine":12,"endColumn":15},{"ruleId":"467","severity":1,"message":"578","line":16,"column":8,"nodeType":"469","messageId":"470","endLine":16,"endColumn":22},{"ruleId":"467","severity":1,"message":"579","line":23,"column":8,"nodeType":"469","messageId":"470","endLine":23,"endColumn":19},{"ruleId":"481","severity":1,"message":"580","line":52,"column":13,"nodeType":"483","messageId":"484","endLine":52,"endColumn":30},{"ruleId":"467","severity":1,"message":"581","line":247,"column":34,"nodeType":"469","messageId":"470","endLine":247,"endColumn":47},{"ruleId":"467","severity":1,"message":"568","line":248,"column":19,"nodeType":"469","messageId":"470","endLine":248,"endColumn":32},{"ruleId":"467","severity":1,"message":"582","line":248,"column":34,"nodeType":"469","messageId":"470","endLine":248,"endColumn":49},{"ruleId":"467","severity":1,"message":"583","line":248,"column":115,"nodeType":"469","messageId":"470","endLine":248,"endColumn":140},{"ruleId":"467","severity":1,"message":"566","line":53,"column":37,"nodeType":"469","messageId":"470","endLine":53,"endColumn":51},{"ruleId":"467","severity":1,"message":"530","line":3,"column":78,"nodeType":"469","messageId":"470","endLine":3,"endColumn":95},{"ruleId":"467","severity":1,"message":"492","line":3,"column":112,"nodeType":"469","messageId":"470","endLine":3,"endColumn":121},{"ruleId":"467","severity":1,"message":"496","line":3,"column":123,"nodeType":"469","messageId":"470","endLine":3,"endColumn":127},{"ruleId":"467","severity":1,"message":"549","line":4,"column":5,"nodeType":"469","messageId":"470","endLine":4,"endColumn":16},{"ruleId":"467","severity":1,"message":"501","line":5,"column":5,"nodeType":"469","messageId":"470","endLine":5,"endColumn":15},{"ruleId":"467","severity":1,"message":"550","line":6,"column":5,"nodeType":"469","messageId":"470","endLine":6,"endColumn":11},{"ruleId":"467","severity":1,"message":"551","line":7,"column":5,"nodeType":"469","messageId":"470","endLine":7,"endColumn":13},{"ruleId":"467","severity":1,"message":"474","line":8,"column":5,"nodeType":"469","messageId":"470","endLine":8,"endColumn":15},{"ruleId":"467","severity":1,"message":"531","line":11,"column":10,"nodeType":"469","messageId":"470","endLine":11,"endColumn":24},{"ruleId":"467","severity":1,"message":"532","line":11,"column":26,"nodeType":"469","messageId":"470","endLine":11,"endColumn":33},{"ruleId":"467","severity":1,"message":"478","line":12,"column":10,"nodeType":"469","messageId":"470","endLine":12,"endColumn":20},{"ruleId":"467","severity":1,"message":"552","line":15,"column":8,"nodeType":"469","messageId":"470","endLine":15,"endColumn":20},{"ruleId":"467","severity":1,"message":"555","line":18,"column":8,"nodeType":"469","messageId":"470","endLine":18,"endColumn":16},{"ruleId":"467","severity":1,"message":"556","line":19,"column":8,"nodeType":"469","messageId":"470","endLine":19,"endColumn":16},{"ruleId":"467","severity":1,"message":"584","line":21,"column":8,"nodeType":"469","messageId":"470","endLine":21,"endColumn":29},{"ruleId":"467","severity":1,"message":"498","line":287,"column":41,"nodeType":"469","messageId":"470","endLine":287,"endColumn":54},{"ruleId":"467","severity":1,"message":"585","line":288,"column":32,"nodeType":"469","messageId":"470","endLine":288,"endColumn":47},{"ruleId":"467","severity":1,"message":"586","line":288,"column":49,"nodeType":"469","messageId":"470","endLine":288,"endColumn":57},{"ruleId":"467","severity":1,"message":"571","line":288,"column":73,"nodeType":"469","messageId":"470","endLine":288,"endColumn":85},{"ruleId":"467","severity":1,"message":"566","line":288,"column":87,"nodeType":"469","messageId":"470","endLine":288,"endColumn":101},{"ruleId":"467","severity":1,"message":"568","line":288,"column":103,"nodeType":"469","messageId":"470","endLine":288,"endColumn":116},{"ruleId":"467","severity":1,"message":"587","line":288,"column":118,"nodeType":"469","messageId":"470","endLine":288,"endColumn":138},{"ruleId":"467","severity":1,"message":"542","line":288,"column":171,"nodeType":"469","messageId":"470","endLine":288,"endColumn":189},{"ruleId":"467","severity":1,"message":"543","line":288,"column":191,"nodeType":"469","messageId":"470","endLine":288,"endColumn":204},{"ruleId":"467","severity":1,"message":"588","line":4,"column":59,"nodeType":"469","messageId":"470","endLine":4,"endColumn":66},{"ruleId":"467","severity":1,"message":"589","line":4,"column":74,"nodeType":"469","messageId":"470","endLine":4,"endColumn":78},{"ruleId":"467","severity":1,"message":"496","line":4,"column":80,"nodeType":"469","messageId":"470","endLine":4,"endColumn":84},{"ruleId":"467","severity":1,"message":"590","line":11,"column":10,"nodeType":"469","messageId":"470","endLine":11,"endColumn":20},{"ruleId":"467","severity":1,"message":"591","line":17,"column":8,"nodeType":"469","messageId":"470","endLine":17,"endColumn":20},{"ruleId":"592","severity":1,"message":"593","line":175,"column":76,"nodeType":"594","messageId":"484","endLine":175,"endColumn":78},{"ruleId":"467","severity":1,"message":"571","line":236,"column":39,"nodeType":"469","messageId":"470","endLine":236,"endColumn":51},{"ruleId":"467","severity":1,"message":"595","line":238,"column":15,"nodeType":"469","messageId":"470","endLine":238,"endColumn":31},{"ruleId":"467","severity":1,"message":"596","line":238,"column":81,"nodeType":"469","messageId":"470","endLine":238,"endColumn":97},{"ruleId":"467","severity":1,"message":"590","line":5,"column":10,"nodeType":"469","messageId":"470","endLine":5,"endColumn":20},{"ruleId":"467","severity":1,"message":"596","line":93,"column":27,"nodeType":"469","messageId":"470","endLine":93,"endColumn":43},{"ruleId":"467","severity":1,"message":"597","line":93,"column":80,"nodeType":"469","messageId":"470","endLine":93,"endColumn":99},{"ruleId":"598","severity":1,"message":"599","line":111,"column":17,"nodeType":"600","messageId":"601","endLine":111,"endColumn":49},{"ruleId":"598","severity":1,"message":"599","line":139,"column":17,"nodeType":"600","messageId":"601","endLine":139,"endColumn":53},{"ruleId":"467","severity":1,"message":"472","line":4,"column":8,"nodeType":"469","messageId":"470","endLine":4,"endColumn":14},{"ruleId":"467","severity":1,"message":"506","line":5,"column":30,"nodeType":"469","messageId":"470","endLine":5,"endColumn":41},{"ruleId":"467","severity":1,"message":"494","line":5,"column":43,"nodeType":"469","messageId":"470","endLine":5,"endColumn":53},{"ruleId":"467","severity":1,"message":"575","line":5,"column":55,"nodeType":"469","messageId":"470","endLine":5,"endColumn":61},{"ruleId":"467","severity":1,"message":"576","line":5,"column":63,"nodeType":"469","messageId":"470","endLine":5,"endColumn":74},{"ruleId":"467","severity":1,"message":"577","line":5,"column":76,"nodeType":"469","messageId":"470","endLine":5,"endColumn":89},{"ruleId":"467","severity":1,"message":"530","line":5,"column":91,"nodeType":"469","messageId":"470","endLine":5,"endColumn":108},{"ruleId":"467","severity":1,"message":"544","line":5,"column":110,"nodeType":"469","messageId":"470","endLine":5,"endColumn":123},{"ruleId":"467","severity":1,"message":"492","line":5,"column":125,"nodeType":"469","messageId":"470","endLine":5,"endColumn":134},{"ruleId":"467","severity":1,"message":"496","line":5,"column":136,"nodeType":"469","messageId":"470","endLine":5,"endColumn":140},{"ruleId":"467","severity":1,"message":"477","line":5,"column":142,"nodeType":"469","messageId":"470","endLine":5,"endColumn":146},{"ruleId":"467","severity":1,"message":"545","line":6,"column":5,"nodeType":"469","messageId":"470","endLine":6,"endColumn":14},{"ruleId":"467","severity":1,"message":"546","line":6,"column":16,"nodeType":"469","messageId":"470","endLine":6,"endColumn":32},{"ruleId":"467","severity":1,"message":"547","line":6,"column":34,"nodeType":"469","messageId":"470","endLine":6,"endColumn":50},{"ruleId":"467","severity":1,"message":"548","line":7,"column":35,"nodeType":"469","messageId":"470","endLine":7,"endColumn":58},{"ruleId":"467","severity":1,"message":"549","line":8,"column":5,"nodeType":"469","messageId":"470","endLine":8,"endColumn":16},{"ruleId":"467","severity":1,"message":"501","line":9,"column":5,"nodeType":"469","messageId":"470","endLine":9,"endColumn":15},{"ruleId":"467","severity":1,"message":"550","line":10,"column":5,"nodeType":"469","messageId":"470","endLine":10,"endColumn":11},{"ruleId":"467","severity":1,"message":"551","line":11,"column":5,"nodeType":"469","messageId":"470","endLine":11,"endColumn":13},{"ruleId":"467","severity":1,"message":"474","line":12,"column":5,"nodeType":"469","messageId":"470","endLine":12,"endColumn":15},{"ruleId":"467","severity":1,"message":"578","line":16,"column":8,"nodeType":"469","messageId":"470","endLine":16,"endColumn":22},{"ruleId":"467","severity":1,"message":"579","line":23,"column":8,"nodeType":"469","messageId":"470","endLine":23,"endColumn":19},{"ruleId":"467","severity":1,"message":"485","line":181,"column":28,"nodeType":"469","messageId":"470","endLine":181,"endColumn":32},{"ruleId":"467","severity":1,"message":"581","line":181,"column":34,"nodeType":"469","messageId":"470","endLine":181,"endColumn":47},{"ruleId":"467","severity":1,"message":"602","line":182,"column":73,"nodeType":"469","messageId":"470","endLine":182,"endColumn":83},{"ruleId":"467","severity":1,"message":"571","line":182,"column":94,"nodeType":"469","messageId":"470","endLine":182,"endColumn":106},{"ruleId":"467","severity":1,"message":"603","line":206,"column":15,"nodeType":"469","messageId":"470","endLine":206,"endColumn":25},{"ruleId":"467","severity":1,"message":"604","line":206,"column":27,"nodeType":"469","messageId":"470","endLine":206,"endColumn":40},{"ruleId":"467","severity":1,"message":"574","line":206,"column":108,"nodeType":"469","messageId":"470","endLine":206,"endColumn":119},{"ruleId":"467","severity":1,"message":"534","line":206,"column":163,"nodeType":"469","messageId":"470","endLine":206,"endColumn":169},{"ruleId":"467","severity":1,"message":"498","line":133,"column":32,"nodeType":"469","messageId":"470","endLine":133,"endColumn":45},{"ruleId":"467","severity":1,"message":"605","line":133,"column":47,"nodeType":"469","messageId":"470","endLine":133,"endColumn":60},{"ruleId":"467","severity":1,"message":"486","line":133,"column":62,"nodeType":"469","messageId":"470","endLine":133,"endColumn":75},"no-native-reassign",["606"],"no-negated-in-lhs",["607"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'RegistrierungForm' is defined but never used.","'Profil' is defined but never used.","'Link' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'Paper' is defined but never used.","'Grid' is defined but never used.","'withRouter' is defined but never used.","'ContextErrorMessage' is defined but never used.","'LoadingProgress' is defined but never used.","no-dupe-keys","Duplicate key 'gruppe'.","ObjectExpression","unexpected","'show' is assigned a value but never used.","'lernvorlieben' is assigned a value but never used.","'gruppengroesse' is assigned a value but never used.","'personLernvorliebenID' is assigned a value but never used.","'gruppenLernfaecher' is assigned a value but never used.","'loadingInProgress' is assigned a value but never used.","'error' is assigned a value but never used.","'TextField' is defined but never used.","'InputAdornment' is defined but never used.","'IconButton' is defined but never used.","'personID' is assigned a value but never used.","'Card' is defined but never used.","'CloseIcon' is defined but never used.","'currentPerson' is assigned a value but never used.","'lernfaecherValidationFailed' is assigned a value but never used.","'makeStyles' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'NativeSelect' is defined but never used.","Duplicate key 'formControl'.","Duplicate key 'selectEmpty'.","'ButtonGroup' is defined but never used.","'teilnahmenChatGefiltert' is assigned a value but never used.","'TableContainer' is defined but never used.","'Table' is defined but never used.","'TableHead' is defined but never used.","'TableCell' is defined but never used.","'TableRow' is defined but never used.","'TableBody' is defined but never used.","'Container' is defined but never used.","'test' is assigned a value but never used.","'lernfaecher_id' is assigned a value but never used.","'lernfaecher_bez' is assigned a value but never used.","'personProfil' is assigned a value but never used.","'personLernfaecher' is assigned a value but never used.","'lernfach' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'getNachrichten'.","MethodDefinition","'withStyles' is defined but never used.","'classes' is assigned a value but never used.","'gruppeName' is assigned a value but never used.","'showProfil' is assigned a value but never used.","'showLerngruppeForm' is assigned a value but never used.","Duplicate key 'width'.","'DialogContentText' is defined but never used.","'TeachingbeeAPI' is defined but never used.","'GroupBO' is defined but never used.","'GruppenListeEintrag' is defined but never used.","'profil' is assigned a value but never used.","'lerngruppe' is assigned a value but never used.","'lernfaecherNameEdited' is assigned a value but never used.","'tageszeitenEdited' is assigned a value but never used.","'tageEdited' is assigned a value but never used.","'frequenzEdited' is assigned a value but never used.","'lernartEdited' is assigned a value but never used.","'lernortEdited' is assigned a value but never used.","'updatingInProgress' is assigned a value but never used.","'updatingError' is assigned a value but never used.","'DialogActions' is defined but never used.","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'LerngruppeBO' is defined but never used.","'KonversationBO' is defined but never used.","'TeilnahmeChatBO' is defined but never used.","'ProfilBO' is defined but never used.","'PersonBO' is defined but never used.","'konversationen' is assigned a value but never used.","'teilnahmenChatAusstehend' is assigned a value but never used.","'lernfaechergesamt' is assigned a value but never used.","'selectedValue' is assigned a value but never used.","'setSelectedValue' is assigned a value but never used.","'data' is assigned a value but never used.","'lernfaecherauswahl' is assigned a value but never used.","'Nachricht' is defined but never used.","'useParams' is defined but never used.","'konversationID' is assigned a value but never used.","'showKonversation' is assigned a value but never used.","'teilnahmeChat' is assigned a value but never used.","'person' is assigned a value but never used.","'iskonversation' is assigned a value but never used.","'konversation' is assigned a value but never used.","'konversationStatus' is assigned a value but never used.","'lerngruppeID' is assigned a value but never used.","'lernfaecher' is assigned a value but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'AnfrageForm' is defined but never used.","Duplicate key 'currentPersonName'.","'expandedState' is assigned a value but never used.","'teilnahmeChatID' is assigned a value but never used.","'konversationAnfragestatus' is assigned a value but never used.","'VorschlagListeEintrag' is defined but never used.","'currentPersonID' is assigned a value but never used.","'konvName' is assigned a value but never used.","'teilnahmeChatPartner' is assigned a value but never used.","'Divider' is defined but never used.","'Pape' is defined but never used.","'MessageBox' is defined but never used.","'ProfilDialog' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'konversationName' is assigned a value but never used.","'nachricht_inhalt' is assigned a value but never used.","'expandedNachrichtID' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'teilnahmen' is assigned a value but never used.","'personName' is assigned a value but never used.","'personVorname' is assigned a value but never used.","'currentProfil' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]