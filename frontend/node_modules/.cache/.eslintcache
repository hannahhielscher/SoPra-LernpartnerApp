[{"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/index.js":"1","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/App.js":"2","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/Profil.js":"3","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/firebaseconfig.js":"4","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/LoadingProgress.js":"5","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/pages/About.js":"6","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ContextErrorMessage.js":"7","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/layout/header.js":"8","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/VorschlagListe.js":"9","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernpartnerAPI.js":"10","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfileDropDown.js":"11","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/VorschlagListeEintrag.js":"12","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/Theme.js":"13"},{"size":146,"mtime":1620224527838,"results":"14","hashOfConfig":"15"},{"size":4617,"mtime":1623504199816,"results":"16","hashOfConfig":"15"},{"size":5314,"mtime":1623504199839,"results":"17","hashOfConfig":"15"},{"size":452,"mtime":1621760028846,"results":"18","hashOfConfig":"15"},{"size":862,"mtime":1622130118194,"results":"19","hashOfConfig":"15"},{"size":844,"mtime":1622130118194,"results":"20","hashOfConfig":"15"},{"size":2113,"mtime":1622130118194,"results":"21","hashOfConfig":"15"},{"size":1547,"mtime":1623504199845,"results":"22","hashOfConfig":"15"},{"size":4949,"mtime":1623311195746,"results":"23","hashOfConfig":"15"},{"size":21224,"mtime":1623504199819,"results":"24","hashOfConfig":"15"},{"size":3271,"mtime":1622574851849,"results":"25","hashOfConfig":"15"},{"size":5441,"mtime":1623101387370,"results":"26","hashOfConfig":"15"},{"size":1706,"mtime":1623504199816,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h9qmix",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":2,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/index.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/App.js",["56"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/Profil.js",["57"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/firebaseconfig.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/LoadingProgress.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/pages/About.js",["58"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ContextErrorMessage.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/layout/header.js",["59","60"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/VorschlagListe.js",["61","62","63","64","65","66"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernpartnerAPI.js",["67"],"import ProfilBO from './ProfilBO';\nimport PersonBO from './PersonBO';\nimport VorschlagBO from './VorschlagBO';\nimport LerngruppeBO from './LerngruppeBO';\nimport LernvorliebenBO from './LernvorliebenBO';\nimport NachrichtBO from './NachrichtBO';\nimport TeilnahmeChatBO from './TeilnahmeChatBO';\nimport TeilnahmeGruppeBO from './TeilnahmeGruppeBO';\n\n/**\n * Abstracts the REST interface of the Python backend with convenient access methods.\n * The class is implemented as a singleton. \n */\nexport default class LernpartnerAPI {\n\n        // Singelton instance\n        static #api = null;\n\n        #lernappServerBaseURL = '/lernApp'\n        /** \n         * Get the Singelton instance \n         * \n         * @public\n         */\n        static getAPI() {\n          if (this.#api == null) {\n            this.#api = new LernpartnerAPI();\n          }\n          return this.#api;\n        }\n\n        #fetchAdvanced = (url, init) => fetch(url, init)\n          .then(res => {\n            // The Promise returned from fetch() wonâ€™t reject on HTTP error status even if the response is an HTTP 404 or 500. \n            if (!res.ok) {\n              throw Error(`${res.status} ${res.statusText}`);\n            }\n            return res.json();\n          }\n          )\n\n        //Person related\n        #getPersonenURL = () => `${this.#lernappServerBaseURL}/personen`;\n        #addPersonURL = () => `${this.#lernappServerBaseURL}/personen`;\n        #getPersonURL = (id) => `${this.#lernappServerBaseURL}/personen/${id}`;\n        #updatePersonURL = (id) => `${this.#lernappServerBaseURL}/personen/${id}`;\n        #deletePersonURL = (id) => `${this.#lernappServerBaseURL}/personen/${id}`;\n        #searchPersonURL = (personName) => `${this.#lernappServerBaseURL}/personen-by-name/${personName}`;\n        #getPersonByGoogleIDURL = (google_user_id) => `${this.#ElectivServerBaseURL}/personbygoogle/${google_user_id}`;\n        \n        //Gruppenbezogen\n        #getLerngruppenURL = () => `${this.#lernappServerBaseURL}/lerngruppen`;\n        #addLerngruppeURL = () => `${this.#lernappServerBaseURL}/lerngruppen`;\n        #getLerngruppeURL = () => `${this.#lernappServerBaseURL}/lerngruppen/${id}`;\n        #updateLerngruppeURL = () => `${this.#lernappServerBaseURL}/lerngruppen/${id}`;\n        #deleteLerngruppeURL = () => `${this.#lernappServerBaseURL}/lerngruppen/${id}`;\n        \n        //Profilbezogen\n        #getProfileURL = () => `${this.#lernappServerBaseURL}/profile`;\n        #addProfilURL = () => `${this.#lernappServerBaseURL}/profile`;\n        #getProfilURL = (id) => `${this.#lernappServerBaseURL}/profile/${id}`;\n        #updateProfilURL = (id) => `${this.#lernappServerBaseURL}/profile/${id}`;\n        //#getLernfaecherByProfilURL = (profilID) => `${this.#lernappServerBaseURL}/profil/${profilID}`;\n        #deleteProfilURL = (id) => `${this.#lernappServerBaseURL}/profile/${id}`;\n\n        //Lernvorliebenbezogen\n        #getLernvorliebenURL = () => `${this.#lernappServerBaseURL}/lernvorlieben/${id}`;\n        //#getLernvorliebenByProfilURL = () => `${this.#lernappServerBaseURL}/lervorlieben/${profilid}`;\n        #addLernvorliebenURL = () => `${this.#lernappServerBaseURL}/lernvorlieben`;\n        #updateLernvorliebenURL = () => `${this.#lernappServerBaseURL}/lernvorlieben/${id}`;\n        #deleteLernvorliebenURL = () => `${this.#lernappServerBaseURL}/lernvorlieben/${id}`;\n\n        //Vorschlagbezogen\n        #getVorschlaegeURL = (mainpersonID) => `${this.#lernappServerBaseURL}/vorschlaege/${mainpersonID}`;\n        //#getSelectedLernfach = () => `${this.#lernappServerBaseURL}`\n        \n\n        //Nachrichtenbezogen\n        #getNachrichtenURL = (personID) => `${this.#lernappServerBaseURL}/nachrichten/${personID}`;\n        #getNachrichtenByKonversationURL = (id) => `${this.#lernappServerBaseURL}/nachrichten/konversation/${id}`;\n        #setKonversationAtNachrichten = (nachrichtenId, konversationId) => `${this.#lernappServerBaseURL}/nachrichten/konversation?nachrichtenId=${nachrichtenId}&konversationId=${konversationId}`;\n        #addNachrichtenURL = () => `${this.#lernappServerBaseURL}/nachrichten`;\n        #getNachrichtenByIDURL = (id) => `${this.#lernapptivServerBaseURL}/nachrichten/${id}`;\n        #deleteNachrichtURL = (id) => `${this.#lernappivServerBaseURL}/nachrichten/${id}`;\n        \n        //Konversationbezogen#\n        #getKonversationenURL = () => `${this.#lernappServerBaseURL}/konversationen`;\n        #getKonversationURL = (id) => `${this.#lernappServerBaseURL}/konversation/${id}`;\n        #setKonversationURL = (id) => `${this.#lernappServerBaseURL}/konversation/${id}`;\n        #addKonversationURL = (id) => `${this.#lernappServerBaseURL}/konversation/${id}`;\n        #deleteKonversationURL = (id) => `${this.#lernappivServerBaseURL}/konversation/${id}`;\n\n        //TeilnahmeChatbezogen\n        #getTeilnahmeChatURL = () => `${this.#lernappServerBaseURL}/teilnahmeChat`;\n        #getTeilnahmeChatURL = (id) => `${this.#lernappServerBaseURL}/teilnahmeChat/${id}`;\n        #setTeilnahmeChatURL = (id) => `${this.#lernappServerBaseURL}/teilnahmeChat/${id}`;\n        #addTeilnahmeChatURL = (id) => `${this.#lernappServerBaseURL}/teilnahmeChat/${id}`;\n        #deleteTeilnahmeChatURL = (id) => `${this.#lernappivServerBaseURL}/teilnahmeChat/${id}`;\n        #getTeilnahmeChatByStudentIdURL = (id) => `${this.#lernappServerBaseURL}/teilnehmer-by-student-id/${id}`;\n        #getTeilnahmeChatByKonversationsIdURL = (id) => `${this.#lernappServerBaseURL}/teilnehmer-by-konversation-id/${id}`;\n\n        //TeilnahmeGruppebezogen\n        #getTeilnahmeGruppeURL = () => `${this.#lernappServerBaseURL}/teilnahmenGruppe`;\n        #addTeilnahmeChatURL = () => `${this.#lernappServerBaseURL}/teilnahmenGruppe`;\n        #getTeilnahmeGruppeURL = (id) => `${this.#lernappServerBaseURL}/teilnahmenGruppe/${id}`;\n\n        //Personenbezogene\n        /**\n           * Gibt alle Personen als BO zurÃ¼ck\n           * \n           * @public\n           */\n        getPersonen() {\n          return this.#fetchAdvanced(this.#getPersonenURL()).then((responseJSON) => {\n            let personenBOs = PersonBO.fromJSON(responseJSON);\n            // console.info(customerBOs);\n            return new Promise(function (resolve) {\n              resolve(personenBOs);\n            })           \n          })\n        }\n        /**\n         * Adds a person and returns a Promise, which resolves to a new PersonBO object\n         *  \n         * @param {PersonBO} personBO to be added. The ID of the new customer is set by the backend\n         * @public\n         */\n        addPerson(personBO) {\n          return this.#fetchAdvanced(this.#addPersonURL(), {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json, text/plain',\n              'Content-type': 'application/json',\n            },\n            body: JSON.stringify(personBO)\n          }).then((responseJSON) => {\n            // We always get an array of CustomerBOs.fromJSON, but only need one object\n            let responsePersonBO = PersonBO.fromJSON(responseJSON)[0];\n            // console.info(accountBOs);\n            return new Promise(function (resolve) {\n              resolve(responsePersonBO);\n            })\n          })\n        }\n\n        /**\n         * Gibt eine Person mit einer bestimmten ID als BO zurÃ¼ck\n         * \n         * @param {Number} personID to be retrieved\n         * @public\n         */\n        getPerson(personID) {\n          return this.#fetchAdvanced(this.#getPersonURL(personID)).then((responseJSON) => {\n            // We always get an array of PersonBOs.fromJSON, but only need one object\n            let responsePersonBO = PersonBO.fromJSON(responseJSON)[0];\n            // console.info(responsePersonBO);\n            return new Promise(function (resolve) {\n              resolve(responsePersonBO);\n            })\n          })\n        }\n\n        /**\n         * Updated eine Person und gibt Promise zurÃ¼ck, resolves as PersonBO.\n         * \n         * @param {PersonBO} personBO to be updated\n         * @public\n         */\n        updatePerson(personBO) {\n          return this.#fetchAdvanced(this.#updatePersonURL(personBO.getID()), {\n            method: 'PUT',\n            headers: {\n              'Accept': 'application/json, text/plain',\n              'Content-type': 'application/json',\n            },\n            body: JSON.stringify(personBO)\n          }).then((responseJSON) => {\n            // We always get an array of PersonBOs.fromJSON\n            let responsePersonBO = PersonBO.fromJSON(responseJSON)[0];\n            // console.info(PersonBOs);\n            return new Promise(function (resolve) {\n              resolve(responsePersonBO);\n            })\n          })\n        }\n\n        /**\n         * Gibt eine Person mit einer bestimmten ID als BO zurÃ¼ck\n         * \n         * @param {Number} google_user_id to be retrieved\n         * @public\n         */\n        getPersonByGoogleID(google_user_id) {\n          return this.#fetchAdvanced(this.#getPersonByGoogleIDURL(google_user_id)).then((responseJSON) => {\n            // We always get an array of PersonBOs.fromJSON, but only need one object\n            let responsePersonBO = PersonBO.fromJSON(responseJSON)[0];\n            // console.info(responsePersonBO);\n            return new Promise(function (resolve) {\n              resolve(responsePersonBO);\n            })\n          })\n        }\n \n        /**\n         * Gibt Promise zurÃ¼ck\n         * \n         * @param {Number} personID to be deleted\n         * @public\n         */\n        deletePerson(personID) {\n          return this.#fetchAdvanced(this.#deletePersonURL(personID), {\n            method: 'DELETE'\n          }).then((responseJSON) => {\n            // We always get an array of PersonBOs.fromJSON\n            let responsePersonBO = PersonBO.fromJSON(responseJSON)[0];\n            // console.info(personBOs);\n            return new Promise(function (resolve) {\n              resolve(responsePersonBO);\n            })\n          })\n        }\n\n        /**\n         * Gibt Promise zurÃ¼ck\n         * \n         * @param {Number} personID to be deleted\n         * @public\n         */\n        searchPerson(personName) {\n          return this.#fetchAdvanced(this.#searchPersonURL(personName)).then((responseJSON) => {\n            let personBOs = PersonBO.fromJSON(responseJSON);\n            // console.info(personBOs);\n            return new Promise(function (resolve) {\n              resolve(personBOs);\n            })\n          })\n        }\n        //Lerngruppenbezogene\n        /**\n           * Gibt alle Lerngruppen als BO zurÃ¼ck\n           * \n           * @public\n           */\n          getLerngruppen() {\n            return this.#fetchAdvanced(this.#getLerngruppenURL()).then((responseJSON) => {\n              let lerngruppenBOs = LerngruppeBO.fromJSON(responseJSON);\n              // console.info(customerBOs);\n              return new Promise(function (resolve) {\n                resolve(lerngruppeBOs);\n              })           \n            })\n          }\n          /**\n           * Adds a lerngruppe and returns a Promise, which resolves to a new LerngruppeBO object\n           *  \n           * @param {LerngruppeBO} lerngruppeBO to be added. The ID of the new lerngruppe is set by the backend\n           * @public\n           */\n          addLerngruppe(lerngruppeBO) {\n            return this.#fetchAdvanced(this.#addLerngruppeURL(), {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json, text/plain',\n                'Content-type': 'application/json',\n              },\n              body: JSON.stringify(lerngruppeBO)\n            }).then((responseJSON) => {\n              // We always get an array of LerngruppeBOs.fromJSON, but only need one object\n              let responseLerngruppeBO = LerngruppeBO.fromJSON(responseJSON)[0];\n              // console.info(LerngruppeBOs);\n              return new Promise(function (resolve) {\n                resolve(responseLerngruppeBO);\n              })\n            })\n          }\n  \n          /**\n           * Gibt eine Lerngruppe mit einer bestimmten ID als BO zurÃ¼ck\n           * \n           * @param {Number} lerngruppeID to be retrieved\n           * @public\n           */\n          getLerngruppe(lerngruppeID) {\n            return this.#fetchAdvanced(this.#getLerngruppeURL(lerngruppeID)).then((responseJSON) => {\n              // We always get an array of LerngruppeBOs.fromJSON, but only need one object\n              let responseLerngruppeBO = LerngruppeBO.fromJSON(responseJSON)[0];\n              // console.info(responseLerngruppeBO);\n              return new Promise(function (resolve) {\n                resolve(responseLerngruppeBO);\n              })\n            })\n          }\n  \n          /**\n           * Updated eine Lerngruppe und gibt Promise zurÃ¼ck, resolves as LerngruppeBO.\n           * \n           * @param {LerngruppeBO} lerngruppeBO to be updated\n           * @public\n           */\n          updateLerngruppe(lerngruppeBO) {\n            return this.#fetchAdvanced(this.#updateLerngruppeURL(lerngruppeBO.getID()), {\n              method: 'PUT',\n              headers: {\n                'Accept': 'application/json, text/plain',\n                'Content-type': 'application/json',\n              },\n              body: JSON.stringify(lerngruppeBO)\n            }).then((responseJSON) => {\n              // We always get an array of LerngruppeBOs.fromJSON\n              let responseLerngruppeBO = LerngruppeBO.fromJSON(responseJSON)[0];\n              // console.info(LerngruppeBOs);\n              return new Promise(function (resolve) {\n                resolve(responseLerngruppeBO);\n              })\n            })\n          }\n   \n          /**\n           * Gibt Promise zurÃ¼ck\n           * \n           * @param {Number} lerngruppeID to be deleted\n           * @public\n           */\n          deleteLerngruppe(lerngruppeID) {\n            return this.#fetchAdvanced(this.#deleteLerngruppeURL(lerngruppeID), {\n              method: 'DELETE'\n            }).then((responseJSON) => {\n              // We always get an array of LerngruppeBOs.fromJSON\n              let responseLerngruppeBO = LerngruppeBO.fromJSON(responseJSON)[0];\n              // console.info(LerngruppeBOs);\n              return new Promise(function (resolve) {\n                resolve(responseLerngruppeBO);\n              })\n            })\n          }\n\n\n        //Profilbezogene\n        /**\n           * Gibt alle Profile als BO zurÃ¼ck\n           * \n           * @public\n           */\n          getProfile() {\n            return this.#fetchAdvanced(this.#getProfileURL()).then((responseJSON) => {\n              let profileBOs = ProfilBO.fromJSON(responseJSON);\n              // console.info(profilBOs);\n              return new Promise(function (resolve) {\n                resolve(profileBOs);\n              })           \n            })\n          }\n        /**\n         * Adds a person and returns a Promise, which resolves to a new PersonBO object\n         *  \n         * @param {PersonBO} personBO to be added. The ID of the new customer is set by the backend\n         * @public\n         */\n        addProfil(profilBO) {\n          return this.#fetchAdvanced(this.#addProfilURL(), {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json, text/plain',\n              'Content-type': 'application/json',\n            },\n            body: JSON.stringify(profilBO)\n          }).then((responseJSON) => {\n            // We always get an array of ProfilBOs.fromJSON, but only need one object\n            let responseProfilBO = ProfilBO.fromJSON(responseJSON)[0];\n            // console.info(accountBOs);\n            return new Promise(function (resolve) {\n              resolve(responseProfilBO);\n            })\n          })\n        }\n        /**\n         * Gibt ein Profil-Objekt zurÃ¼ck\n         * @param {Number} profilID to be retrieved\n         * @public\n          */\n         getProfil(profilID) {\n          return this.#fetchAdvanced(this.#getProfilURL(profilID,{method: 'GET'})).then((responseJSON) => {\n            let profilBOs = ProfilBO.fromJSON(responseJSON);\n            //console.info(ProfilBOs)\n            return new Promise(function (resolve) {\n              resolve(profilBOs);\n            })\n          })\n        }\n\n        /**\n         * Updated ein Profil und gibt Promise zurÃ¼ck, resolves as ProfilBO.\n         * \n         * @param {ProfilBO} profilBO to be updated\n         * @public\n         */\n        updateProfil(profilBO) {\n          return this.#fetchAdvanced(this.#updateProfilURL(profilBO.getID()), {\n            method: 'PUT',\n            headers: {\n              'Accept': 'application/json, text/plain',\n              'Content-type': 'application/json',\n            },\n            body: JSON.stringify(profilBO)\n          }).then((responseJSON) => {\n            // We always get an array of ProfilBOs.fromJSON\n            let responseProfilBO = ProfilBO.fromJSON(responseJSON)[0];\n            // console.info(ProfilBOs);\n            return new Promise(function (resolve) {\n              resolve(responseProfilBO);\n            })\n          })\n        }\n        /**\n         * Gibt Promise zurÃ¼ck\n         * \n         * @param {Number} profilID to be deleted\n         * @public\n         */\n        deleteProfil(profilID) {\n          return this.#fetchAdvanced(this.#deleteProfilURL(profilID), {\n            method: 'DELETE'\n          }).then((responseJSON) => {\n            // We always get an array of ProfilBOs.fromJSON\n            let responseProfilBO = ProfilBO.fromJSON(responseJSON)[0];\n            // console.info(profilBOs);\n            return new Promise(function (resolve) {\n              resolve(responseProfilBO);\n            })\n          })\n        }\n\n        //Lernvorliebenbezogene\n\n        /**\n         * Gibt eine Lernvorliebe mit einer bestimmten ID als BO zurÃ¼ck\n         * \n         * @param {Number} lernvorliebenID to be retrieved\n         * @public\n         */\n        getLernvorlieben(lernvorliebenID) {\n          return this.#fetchAdvanced(this.#getLernvorliebenURL(lernvorliebenID)).then((responseJSON) => {\n            // We always get an array of LernvorliebenBOs.fromJSON, but only need one object\n            let responseLernvorliebenBO = LernvorliebenBO.fromJSON(responseJSON)[0];\n            // console.info(responseLernvorliebenBO);\n            return new Promise(function (resolve) {\n              resolve(responseLernvorliebenBO);\n            })\n          })\n        }\n        /**\n         * Adds a lernvorlieben and returns a Promise, which resolves to a new LernvorliebenBO object\n         *  \n         * @param {LernvorliebenBO} lernvorliebenBO to be added. The ID of the new lernvorliebe is set by the backend\n         * @public\n         */\n        addLernvorlieben(lernvorliebenBO) {\n          return this.#fetchAdvanced(this.#addLernvorliebenURL(), {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json, text/plain',\n              'Content-type': 'application/json',\n            },\n            body: JSON.stringify(lernvorliebenBO)\n          }).then((responseJSON) => {\n            // We always get an array of LernvorliebenBOs.fromJSON, but only need one object\n            let responseLernvorliebenBO = LernvorliebenBO.fromJSON(responseJSON)[0];\n            // console.info(LernvorliebenBOs);\n            return new Promise(function (resolve) {\n              resolve(responseLernvorliebenBO);\n            })\n          })\n        }\n        /**\n         * Gibt Promise zurÃ¼ck\n         * \n         * @param {Number} lernvorliebenID to be deleted\n         * @public\n         */\n        deleteLernvorlieben(lernvorliebenID) {\n          return this.#fetchAdvanced(this.#deleteLernvorliebenURL(lernvorliebenID), {\n            method: 'DELETE'\n          }).then((responseJSON) => {\n            // We always get an array of LernvorliebenBOs.fromJSON\n            let responseLernvorliebenBO = LernvorliebenBO.fromJSON(responseJSON)[0];\n            // console.info(LernvorliebenBOs);\n            return new Promise(function (resolve) {\n              resolve(responseLernvorliebenBO);\n            })\n          })\n        }\n\n        //Vorschlagbezogene\n        /**\n         * Gibt alle Vorschlaege zurÃ¼ck\n         * @param {Number} personID to be retrieved\n         * @public\n          */\n        getVorschlaege(personID) {\n          return this.#fetchAdvanced(this.#getVorschlaegeURL(personID,{method: 'GET'})).then((responseJSON) => {\n            let vorschlaegeBOs = VorschlagBO.fromJSON(responseJSON);\n            //console.info(vorschlaegeBOs)\n            return new Promise(function (resolve) {\n              resolve(vorschlaegeBOs);\n            })\n          })\n        }\n\n\n        //Nachrichtbezogene\n        // Gibt alle Nachrichten zurÃ¼ck\n        getNachrichten(personID) {\n          return this.#fetchAdvanced(this.#getNachrichtenURL(personID,{method: 'GET'})).then((responseJSON) => {\n            let nachrichtenBOs = NachrichtBO.fromJSON(responseJSON);\n            //console.info(nachrichtenBOs)\n            return new Promise(function (resolve) {\n              resolve(nachrichtenBOs);\n            })\n          })\n        }\n\n}",["68","69"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfileDropDown.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/VorschlagListeEintrag.js",["70","71","72","73","74","75"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/Theme.js",[],{"ruleId":"76","severity":1,"message":"77","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":null,"fatal":true,"severity":2,"message":"80","line":24,"column":15},{"ruleId":"76","severity":1,"message":"81","line":2,"column":41,"nodeType":"78","messageId":"79","endLine":2,"endColumn":45},{"ruleId":"82","severity":1,"message":"83","line":31,"column":34,"nodeType":"84","messageId":"85","endLine":32,"endColumn":11},{"ruleId":"82","severity":1,"message":"83","line":38,"column":22,"nodeType":"84","messageId":"85","endLine":39,"endColumn":11},{"ruleId":"76","severity":1,"message":"86","line":4,"column":22,"nodeType":"78","messageId":"79","endLine":4,"endColumn":28},{"ruleId":"76","severity":1,"message":"87","line":4,"column":30,"nodeType":"78","messageId":"79","endLine":4,"endColumn":39},{"ruleId":"76","severity":1,"message":"88","line":4,"column":41,"nodeType":"78","messageId":"79","endLine":4,"endColumn":55},{"ruleId":"76","severity":1,"message":"89","line":4,"column":57,"nodeType":"78","messageId":"79","endLine":4,"endColumn":67},{"ruleId":"76","severity":1,"message":"90","line":4,"column":69,"nodeType":"78","messageId":"79","endLine":4,"endColumn":73},{"ruleId":"76","severity":1,"message":"91","line":4,"column":75,"nodeType":"78","messageId":"79","endLine":4,"endColumn":85},{"ruleId":null,"fatal":true,"severity":2,"message":"92","line":95,"column":9},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"76","severity":1,"message":"97","line":6,"column":63,"nodeType":"78","messageId":"79","endLine":6,"endColumn":79},{"ruleId":"76","severity":1,"message":"98","line":93,"column":37,"nodeType":"78","messageId":"79","endLine":93,"endColumn":45},{"ruleId":"76","severity":1,"message":"99","line":93,"column":103,"nodeType":"78","messageId":"79","endLine":93,"endColumn":120},{"ruleId":"76","severity":1,"message":"100","line":93,"column":122,"nodeType":"78","messageId":"79","endLine":93,"endColumn":127},{"ruleId":"101","severity":2,"message":"102","line":123,"column":18,"nodeType":"103","messageId":"104","endLine":123,"endColumn":24},{"ruleId":"101","severity":2,"message":"105","line":124,"column":18,"nodeType":"103","messageId":"104","endLine":124,"endColumn":29},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 22 |\u001b[39m             personSemester \u001b[33m=\u001b[39m \u001b[35m0\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 23 |\u001b[39m             personStudiengang \u001b[33m=\u001b[39m \u001b[33mNone\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m             \u001b[32m\"\"\u001b[39m\u001b[32m\"lerngruppe = False --> reinnehmen oder nicht?\"\u001b[39m\u001b[32m\"\"\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 25 |\u001b[39m             main_person_id \u001b[33m=\u001b[39m \u001b[33mNone\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 26 |\u001b[39m             personenprofil_id \u001b[33m=\u001b[39m \u001b[33mNone\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 27 |\u001b[39m             personLernfaecher \u001b[33m=\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m\u001b[0m","'Link' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","'Button' is defined but never used.","'TextField' is defined but never used.","'InputAdornment' is defined but never used.","'IconButton' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","Parsing error: Duplicate private name #getTeilnahmeChatURL.\n\n\u001b[0m \u001b[90m 93 |\u001b[39m         \u001b[90m//TeilnahmeChatbezogen\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 94 |\u001b[39m         \u001b[33m#\u001b[39mgetTeilnahmeChatURL \u001b[33m=\u001b[39m () \u001b[33m=>\u001b[39m \u001b[32m`${this.#lernappServerBaseURL}/teilnahmeChat`\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 95 |\u001b[39m         \u001b[33m#\u001b[39mgetTeilnahmeChatURL \u001b[33m=\u001b[39m (id) \u001b[33m=>\u001b[39m \u001b[32m`${this.#lernappServerBaseURL}/teilnahmeChat/${id}`\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 96 |\u001b[39m         \u001b[33m#\u001b[39msetTeilnahmeChatURL \u001b[33m=\u001b[39m (id) \u001b[33m=>\u001b[39m \u001b[32m`${this.#lernappServerBaseURL}/teilnahmeChat/${id}`\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 97 |\u001b[39m         \u001b[33m#\u001b[39maddTeilnahmeChatURL \u001b[33m=\u001b[39m (id) \u001b[33m=>\u001b[39m \u001b[32m`${this.#lernappServerBaseURL}/teilnahmeChat/${id}`\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 98 |\u001b[39m         \u001b[33m#\u001b[39mdeleteTeilnahmeChatURL \u001b[33m=\u001b[39m (id) \u001b[33m=>\u001b[39m \u001b[32m`${this.#lernappivServerBaseURL}/teilnahmeChat/${id}`\u001b[39m\u001b[33m;\u001b[39m\u001b[0m","no-native-reassign",["106"],"no-negated-in-lhs",["107"],"'AccordionDetails' is defined but never used.","'profilID' is assigned a value but never used.","'loadingInProgress' is assigned a value but never used.","'error' is assigned a value but never used.","react/jsx-no-undef","'Profil' is not defined.","JSXIdentifier","undefined","'AnfrageForm' is not defined.","no-global-assign","no-unsafe-negation"]
