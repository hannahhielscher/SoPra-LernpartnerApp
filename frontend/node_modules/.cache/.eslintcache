[{"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/index.js":"1","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/App.js":"2","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/Theme.js":"3","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/firebaseconfig.js":"4","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppeForm.js":"5","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/pages/About.js":"6","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LernpartnerAPI.js":"7","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/LoadingProgress.js":"8","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/ContextErrorMessage.js":"9","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/pages/SignIn.js":"10","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/RegistrierungForm.js":"11","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/layout/Header.js":"12","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/MeinProfil.js":"13","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/PersonBO.js":"14","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/NachrichtBO.js":"15","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LernvorliebenBO.js":"16","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LerngruppeBO.js":"17","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/ProfilBO.js":"18","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/KonversationBO.js":"19","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/VorschlagBO.js":"20","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeGruppeBO.js":"21","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeChatBO.js":"22","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfileDropDown.js":"23","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/index.js":"24","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/NamedBusinessObject.js":"25","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/BusinessObject.js":"26","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/VorschlagListe.js":"27","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/VorschlagListeEintrag.js":"28","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/Profil.js":"29","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/LernfaecherForm.js":"30","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/KonversationListe.js":"31","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/KonversationListeEintrag.js":"32","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/Nachricht.js":"33","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/NachrichtenListeEintrag.js":"34"},{"size":146,"mtime":1620807576504,"results":"35","hashOfConfig":"36"},{"size":5965,"mtime":1624550504089,"results":"37","hashOfConfig":"36"},{"size":1706,"mtime":1623434614996,"results":"38","hashOfConfig":"36"},{"size":579,"mtime":1624086408653,"results":"39","hashOfConfig":"36"},{"size":2002,"mtime":1624442984122,"results":"40","hashOfConfig":"36"},{"size":844,"mtime":1624215856000,"results":"41","hashOfConfig":"36"},{"size":38130,"mtime":1624550922353,"results":"42","hashOfConfig":"36"},{"size":862,"mtime":1622112082063,"results":"43","hashOfConfig":"36"},{"size":2113,"mtime":1622112193821,"results":"44","hashOfConfig":"36"},{"size":1816,"mtime":1623433312638,"results":"45","hashOfConfig":"36"},{"size":10911,"mtime":1624534678122,"results":"46","hashOfConfig":"36"},{"size":1709,"mtime":1624537286156,"results":"47","hashOfConfig":"36"},{"size":7517,"mtime":1624537492856,"results":"48","hashOfConfig":"36"},{"size":2597,"mtime":1623433111029,"results":"49","hashOfConfig":"36"},{"size":1315,"mtime":1623938783709,"results":"50","hashOfConfig":"36"},{"size":2140,"mtime":1623484846947,"results":"51","hashOfConfig":"36"},{"size":1078,"mtime":1622969157843,"results":"52","hashOfConfig":"36"},{"size":1253,"mtime":1623433111030,"results":"53","hashOfConfig":"36"},{"size":1003,"mtime":1623484557530,"results":"54","hashOfConfig":"36"},{"size":1348,"mtime":1623484557530,"results":"55","hashOfConfig":"36"},{"size":1228,"mtime":1624534678087,"results":"56","hashOfConfig":"36"},{"size":1040,"mtime":1624043753965,"results":"57","hashOfConfig":"36"},{"size":3271,"mtime":1622538283974,"results":"58","hashOfConfig":"36"},{"size":329,"mtime":1622114445485,"results":"59","hashOfConfig":"36"},{"size":375,"mtime":1622112904258,"results":"60","hashOfConfig":"36"},{"size":761,"mtime":1621758115765,"results":"61","hashOfConfig":"36"},{"size":4960,"mtime":1624258271000,"results":"62","hashOfConfig":"36"},{"size":5335,"mtime":1624456587432,"results":"63","hashOfConfig":"36"},{"size":5554,"mtime":1624534678104,"results":"64","hashOfConfig":"36"},{"size":2795,"mtime":1624550504090,"results":"65","hashOfConfig":"36"},{"size":4249,"mtime":1624257581000,"results":"66","hashOfConfig":"36"},{"size":2423,"mtime":1624534678090,"results":"67","hashOfConfig":"36"},{"size":8073,"mtime":1624534678100,"results":"68","hashOfConfig":"36"},{"size":5235,"mtime":1624534678102,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"cx8xr9",{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"130"},{"filePath":"134","messages":"135","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"72"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"72"},"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/index.js",[],["152","153"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/App.js",["154","155","156","157"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/Theme.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/firebaseconfig.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppeForm.js",["158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Paper, makeStyles, Link, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, InputAdornment, Grid, Typography } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { TeachingbeeAPI, GroupBO } from '../../api';\n\n//import {LernpartnerAPI} from '../../api';\n\nimport { withRouter } from 'react-router-dom';\nimport ContextErrorMessage from './ContextErrorMessage';\nimport LoadingProgress from './LoadingProgress';\n//import ProfilBO from '../../api/ProfilBO';\n\n\nclass GruppeForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            gruppenName: null,\n            gruppenNameValidationFailed: null,\n            gruppenNameEdited: null,\n            addingInProgress: false,\n            updatingInProgress: false,\n            addingError: null,\n            updatingError: null\n\n        };\n\n        // save this state for canceling\n        this.baseState = this.state;\n    }\n\n\n  /** Renders the component */\n  render() {\n    const { classes } = this.props;\n    //const { gruppenName, gruppenNameValidationFailed, gruppenNameEdited, addingInProgress, addingError,\n    //updatingInProgress, updatingError } = this.state;\n\n    return (\n        <Paper className={classes.root}>\n        <div className={classes.content}>\n          <Typography variant='h6'>\n            Gruppennprofile\n          </Typography>\n        </div>\n      </Paper>\n    );\n  }\n}\n\n/** Component specific styles */\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n\n  content: {\n    margin: theme.spacing(1),\n    }\n});\n\nexport default withStyles(styles)(GruppeForm);",["177","178"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/pages/About.js",["179"],"import React from 'react'\nimport { makeStyles, Paper, Typography, Link } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1)\n  },\n  content: {\n    margin: theme.spacing(1),\n  }\n}));\n\n/**\n * Shows the about page with the impressum\n */\n\n\nfunction About() {\n\n    const classes = useStyles();\n  \n    return (\n      <Paper elevation={0} className={classes.root}>\n        <div className={classes.content}>\n          <Typography variant='h6'>\n            App zum Auffinden von Lernpartnern\n          </Typography>\n          <Typography variant='body2'>\n            © Hochschule der Medien 2020, all rights reserved.\n          </Typography>\n        </div>\n      </Paper>\n    )\n  }\n  \n  export default About;","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LernpartnerAPI.js",["180"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/LoadingProgress.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/ContextErrorMessage.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/pages/SignIn.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/RegistrierungForm.js",["181","182"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Card,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    } from '@material-ui/core';\n\nimport { LernpartnerAPI } from '../../api';\nimport { withRouter } from 'react-router-dom';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ContextErrorMessage from './ContextErrorMessage';\nimport LoadingProgress from './LoadingProgress';\n/** \n * Renders a landing page for users who are not signed in. Provides a sign in button \n * for using an existing google account to sign in. The component uses firebase to \n * do redirect based signin process.\n * \n * @see See Googles [firebase authentication](https://firebase.google.com/docs/web/setup)\n * @see See Googles [firebase API reference](https://firebase.google.com/docs/reference/js)\n * \n */\nclass RegistrierungForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        // Init the state\n        this.state = {\n            name: '',\n            nameValidationFailed: false,\n            nameEdited: false,\n\n            vorname: null,\n            vornameValidationFailed: false,\n            vornameEdited: false,\n\n            alter: null,\n            alterValidationFailed: false,\n            alterEdited: false,\n\n            geschlecht: null,\n            geschlechtValidationFailed: false,\n            geschlechtEdited: false,\n\n            semester: null,\n            semesterValidationFailed: false,\n            semesterEdited: false,\n\n            studiengang: null,\n            studiengangValidationFailed: false,\n            studiengangEdited: false,\n\n            lerngruppe: null,\n            lerngruppeValidationFailed: false,\n            lerngruppeEdited: false,\n\n            addingError: null,\n            addingInProgress: false,\n\n            updatingError: null,\n            updatingInProgress: false,\n            \n            \n        };\n        // save this state for canceling\n        this.baseState = this.state;\n        this.handleChangeStudiengang = this.handleChangeStudiengang.bind(this);\n        this.handleChangeLerngruppe = this.handleChangeLerngruppe.bind(this);\n        }\n    \n\n    /** Updates the person */\n    registrieren = () => {\n        let person = this.props.currentPerson;\n        person.name = this.state.name\n        person.vorname = this.state.vorname\n        person.semester = this.state.semester\n        person.studiengang = this.state.studiengang\n        person.alter = this.state.alter\n        person.geschlecht = this.state.geschlecht\n        person.lerngruppe = this.state.lerngruppe\n        LernpartnerAPI.getAPI().updatePerson(person.id, this.state.name, this.state.vorname, this.state.semester, this.state.studiengang, this.state.alter, this.state.geschlecht,\n          this.state.lerngruppe).then(person => {\n            // Backend call sucessfull\n            // reinit the dialogs state for a new empty customer\n            this.setState(this.baseState);\n            this.props.onClose(person); // call the parent with the customer object from backend\n        }).catch(e =>\n            this.setState({\n                updatingInProgress: false,    // disable loading indicator \n                updatingError: e              // show error message\n            })\n        );\n\n        // set loading to true\n        this.setState({\n            updatingInProgress: true,       // show loading indicator\n            updatingError: null             // disable error message\n      });\n    }\n\t/** \n\t * Handles the click event of the sign in button an calls the prop onSignIn handler\n\t \n\thandleSignInButtonClicked = () => {\n\t\tthis.props.onSignIn();\n\t}\n    */\n   /** Handles value changes of the forms textfields and validates them */\n    textFieldValueChange = (event) => {\n        const value = event.target.value;\n\n        let error = false;\n        if (value.trim().length === 0) {\n        error = true;\n        }\n\n        this.setState({\n        [event.target.id]: event.target.value,\n        [event.target.id + 'ValidationFailed']: error,\n        [event.target.id + 'Edited']: true\n        });\n    }\n\n    //Setzen der Werte aus der Validierung\n    setStateValueChange(event, error) {\n      this.setState({\n          [event.target.id]: event.target.value,\n          [event.target.id + 'ValidationFailed']: error,\n          [event.target.id + 'Edited']: true\n      });\n  }\n\n    // Validierung der Textfeldaenderungen nur numerische Werte\n    numberValueChange = (event) => {\n        const value = event.target.value;\n        const re = /^[0-9]{1,10}$/;\n\n        let error = false;\n        if (value.trim().length === 0) {\n            error = true;\n        }\n        if (re.test(event.target.value) === false) {\n            error = true;\n        }\n        this.setStateValueChange(event, error);\n    }\n\n    //Setzen des Status, bei schließen des Dialogs\n      handleClose = () => {\n        this.setState(this.baseState);\n        this.props.onClose(null);\n    }\n\n    handleChangeStudiengang(event) {\n      this.setState({studiengang: event.target.value});\n    }\n\n    handleChangeLerngruppe(event) {\n      this.setState({lerngruppe: event.target.value});\n    }\n\n  \n\t/** Renders the sign in page, if user objext is null */\n\t/** Renders the component */\n    render() {\n        const { classes, show, currentPerson, } = this.props;\n        const { name, nameValidationFailed, vorname, vornameValidationFailed, semester, semesterValidationFailed, studiengang, studiengangValidationFailed,\n          alter, alterValidationFailed, geschlecht, geschlechtValidationFailed, lerngruppe, lerngruppeValidationFailed, addingInProgress,\n          updatingInProgress, updatingError} = this.state;\n    \n        let title = 'Registriere dich zuerst, bevor du die App nutzen kannst!';\n        let header = 'Bitte gib deine Daten ein:';\n    \n        return (\n            show ?\n            <Dialog open={show}>\n              <DialogTitle id='form-dialog-title'>{title}\n                  <IconButton className={classes.closeButton} onClick={this.handleClose}>\n                      <CloseIcon />\n                  </IconButton>\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  {header}\n                </DialogContentText>\n                <form className={classes.root} noValidate autoComplete='off'>\n\n                  <TextField className={classes.textfield} autoFocus type='text' required fullWidth margin='normal' id='name' label='Nachname:' value={name}\n                    onChange={this.textFieldValueChange} error={nameValidationFailed}\n                    helperText={nameValidationFailed ? 'The last name must contain at least one character' : ' '} />\n\n                  <TextField className={classes.textfield} autoFocus type='text' required fullWidth margin='normal' id='vorname' label='Vorname:' value={vorname} \n                    onChange={this.textFieldValueChange} error={vornameValidationFailed} \n                    helperText={vornameValidationFailed ? 'The first name must contain at least one character' : ' '} />\n                  \n                  <TextField className={classes.textfield} autoFocus type='text' required fullWidth margin='normal' id='semester' label='Semester:' value={semester} \n                    onChange={this.numberValueChange} error={semesterValidationFailed} \n                    helperText={geschlechtValidationFailed ? 'The semester must contain at least one character' : ' '} /> \n                    \n                  <FormControl className={classes.formControl}>\n                            <InputLabel>Studiengang</InputLabel>\n                             <Select required error={studiengangValidationFailed} value={studiengang} onChange={this.handleChangeStudiengang}>\n                                <MenuItem value='WI'>Wirtschaftsinformatik</MenuItem>\n                                <MenuItem value='MW'>Medienwirtschaft</MenuItem>\n                            </Select>\n                   </FormControl>\n                   \n                  <TextField className={classes.textfield} autoFocus type='text' required fullWidth margin='normal' id='alter' label='Alter:' value={alter} \n                    onChange={this.numberValueChange} error={alterValidationFailed} \n                    helperText={alterValidationFailed ? 'The age must contain at least one character' : ' '} />\n\n                  <TextField className={classes.textfield} autoFocus type='text' required fullWidth margin='normal' id='geschlecht' label='Geschlecht:' value={geschlecht} \n                    onChange={this.textFieldValueChange} error={geschlechtValidationFailed} \n                    helperText={geschlechtValidationFailed ? 'The gender must contain at least one character' : ' '} /> \n                  \n                  <FormControl className={classes.formControl}>\n                            <InputLabel>Interesse an einer Lerngruppe?</InputLabel>\n                             <Select required error={lerngruppeValidationFailed} value={lerngruppe} onChange={this.handleChangeLerngruppe}>\n                                <MenuItem value='1'>Ja!</MenuItem>\n                                <MenuItem value='0'>Nein!</MenuItem>\n                            </Select>\n                   </FormControl>\n\n                </form>\n                <LoadingProgress show={addingInProgress || updatingInProgress} />\n                {\n\n                  <ContextErrorMessage error={updatingError}\n                      contextErrorMsg={`Du konntest leider nicht registriert werden :/`}\n                      onReload={this.registrieren} />\n\n                }\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.handleClose} color='secondary'>\n                            Abbrechen\n                </Button>\n                {\n                    <Button disabled={nameValidationFailed || vornameValidationFailed || semesterValidationFailed || studiengangValidationFailed || alterValidationFailed || geschlechtValidationFailed || lerngruppeValidationFailed } variant='contained'\n                          onClick={this.registrieren} color='primary'>\n                          Jetzt registrieren\n                    </Button>\n                }\n              </DialogActions>\n            </Dialog>\n            : null\n        );\n      }\n    \n}\n\n/** Component specific styles */\nconst styles = theme => ({\n\troot: {\n\t\tmargin: theme.spacing(2)\n\t}\n});\n\n/** PropTypes */\nRegistrierungForm.propTypes = {\n\t/** @ignore */\n  classes: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired,\n\t/** \n\t * Handler function, which is called if the user wants to sign in.\n\t */\n  \n\tonSignIn: PropTypes.func.isRequired,\n}\n\nexport default withRouter(withStyles(styles)(RegistrierungForm));","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/layout/Header.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/MeinProfil.js",["183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/PersonBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/NachrichtBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LernvorliebenBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LerngruppeBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/ProfilBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/KonversationBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/VorschlagBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeGruppeBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeChatBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfileDropDown.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/index.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/NamedBusinessObject.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/BusinessObject.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/VorschlagListe.js",["200","201","202","203","204","205"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'\nimport { withStyles, Button, TextField, InputAdornment, IconButton, Grid, Typography } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\nimport VorschlagListeEintrag from './VorschlagListeEintrag';\n//import SaveIcon from '@material-ui/icons/Save';\n//import Table from '@material-ui/core/Table';\n//import TableBody from '@material-ui/core/TableBody';\n//import TableCell from '@material-ui/core/TableCell';\n//import TableContainer from '@material-ui/core/TableContainer';\n//import TableHead from '@material-ui/core/TableHead';\n//import TableRow from '@material-ui/core/TableRow';\n//import Paper from '@material-ui/core/Paper';\n\n\n\n/**\n * Es werden alle Vorschläge des aktuell eingeloggten Studenten angezeigt\n * \n * @see See [VorschlagListeEintrag](#vorschaglisteeintrag)\n * \n * Hierfür werden alle Vorschläge des aktuell eingeloggten Student geladen und in die Componente VorschlagListeEintrag gemappt\n * \n */\n\n\nclass VorschlagListe extends Component {\n\n    constructor(props){\n        super(props);\n\n        // console.log(props);\n        let expandedID = null;\n\n        if (this.props.location.expandVorschlag) {\n        expandedID = this.props.location.expandVorschlag.getID();\n        }\n\n        // initiiere einen leeren state\n        this.state = {\n            vorschlaege : [],\n            //currentPersonName: null,\n            error: null,\n            loadingInProgress: false, \n            expandedVorschlagID: expandedID,\n        };\n    }\n\n\n    // API Anbindung um Vorschläge des Students vom Backend zu bekommen \n    getVorschlaege = () => {\n            LernpartnerAPI.getAPI().getVorschlaege(this.props.currentPerson.id, this.props.lernfach)\n            .then(vorschlagBOs =>\n                this.setState({\n                    vorschlaege: vorschlagBOs,\n                    error: null,\n                    loadingInProgress: false,\n                })).catch(e =>\n                    this.setState({\n                        vorschlaege: [],\n                        error: e,\n                        loadingInProgress: false,\n                    }));\n            this.setState({\n                error: null,\n                loadingInProgress: true,\n                loadingVorschlaegeError: null\n            });\n    }\n\n    // Lifecycle methode, wird aufgerufen wenn componente in den DOM eingesetzt wird\n    componentDidMount() {\n        this.getVorschlaege();\n\n    }\n    \n    /** \n     * Handles onExpandedStateChange events from the VorschlagListeEintrag component. Toggels the expanded state of \n     * the VorschlagListeEintrag of the given VorschlagBO.\n     * \n     * @param {vorschlag} VorschlagBO of the VorschlagListeEintrag to be toggeled\n     */\n    onExpandedStateChange = vorschlag => {\n        // console.log(vorschlagID);\n        // Set expandend Vorschlag Eintrag to null by default\n        let newID = null;\n\n        // If same vorschlag entry is clicked, collapse it else expand a new one\n        if (vorschlag.getID() !== this.state.expandedVorschlagID) {\n        // Expand the customer entry with customerID\n        newID = vorschlag.getID();\n        }\n        // console.log(newID);\n        this.setState({\n        expandedVorschlagID: newID,\n        });\n    }\n\n    render() {\n        const { classes, lernfach } = this.props;\n        const { vorschlaege, expandedVorschlagID, error, loadingInProgress}  = this.state;\n    \n        return (\n          \n          <div className={classes.root}>\n            <h1>Test: Vorschläge für Lernfach {lernfach}</h1>\n            { \n              // Show the list of VorschlagListeEintrag components\n              // Do not use strict comparison, since expandedVorschlagID maybe a string if given from the URL parameters\n  \n              vorschlaege.map(vorschlag =>\n                <VorschlagListeEintrag key={vorschlag.getID()} vorschlag={vorschlag} expandedState={expandedVorschlagID === vorschlag.getID()}\n                  onExpandedStateChange={this.onExpandedStateChange}\n                />)\n            }\n            <LoadingProgress show={loadingInProgress} />\n            <ContextErrorMessage error={error} contextErrorMsg={`Sorry, deine Vorschläge konnten nicht geladen werden!`} onReload={this.getVorschlaege} />\n          </div>\n        );\n      }\n    }\n\n\n/** Component specific styles */\nconst styles = theme => ({\n    root: {\n      width: '100%',\n    },\n    customerFilter: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(1),\n    }\n  });\n\n/** PropTypes */\nVorschlagListe.propTypes = {\n    /** @ignore */\n    classes: PropTypes.object.isRequired,\n    /** @ignore */\n    location: PropTypes.object.isRequired,\n}\n\n\n\nexport default withRouter(withStyles(styles)(VorschlagListe));",["206","207"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/VorschlagListeEintrag.js",["208","209","210","211","212"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'\n//import Profil from './Profil';\n//import { withStyles } from '@material-ui/core';\n//import { withRouter } from 'react-router-dom';\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n//import InputLabel from '@material-ui/core/InputLabel';\n//import MenuItem from '@material-ui/core/MenuItem';\n//import FormControl from '@material-ui/core/FormControl';\n//import Select from '@material-ui/core/Select';\n//import ContextErrorMessage from './dialogs/ContextErrorMessage';\n//import LoadingProgress from './dialogs/LoadingProgress';\n\n/**\n * Es wird ein einzelner Vorschlag für einen passenden Lernpartner oder /-gruppe mit allen not wendigen Informationen dargestellt\n * \n * Hierfür werden Profilname, Alter, Geschlecht, Semester, Lernfach und der Prozentsatz des Matches angezeigt\n * \n */\n\nclass VorschlagListeEintrag extends Component {\n    constructor(props){\n        super(props);\n\n        // initiiere einen leeren state\n        this.state = {\n            vorschlag: props.vorschlag,\n            //match: null,\n            profil: null,\n            person: null,\n            profilID: null,\n            personName: null,\n            personVorname: null,\n            showProfil: false,\n            showAnfrageForm: false,\n            loadingInProgress: false,\n            error: null\n        };\n    }\n\n    /** Handles onChange events of the underlying ExpansionPanel */\n    expansionPanelStateChanged = () => {\n    this.props.onExpandedStateChange(this.props.vorschlag);\n    }\n    \n    //Handles the onClick event of the show profil button\n    showProfilButtonClicked = (event) => {\n      event.stopPropagation();\n      this.setState({\n        showProfil: true\n      });\n    }\n\n    /** Handles the onClick event of the send Anfrage button */\n    sendAnfrageButtonClicked = (event) => {\n      event.stopPropagation();\n      this.setState({\n        showAnfrageForm: true\n      });\n    }\n\n    // API Anbindung um Profil vom Backend zu bekommen \n    getPerson = () => {\n      LernpartnerAPI.getAPI().getPerson(this.props.vorschlag.getmain_person_id())\n      .then(personBO =>\n          this.setState({\n            person: personBO,\n            personName: personBO.name,\n            personVorname: personBO.vorname,\n            loadingInProgress: false,\n            error: null,\n          }))\n          .catch(e =>\n              this.setState({\n                person: null,\n                personName: null,\n                personVorname: null,\n                loadingInProgress: false,\n                error: e,\n              }));\n      this.setState({\n        loadingInProgress: true,\n        error: null\n      });\n    }\n\n\n    render(){\n\n          const { classes, expandedState } = this.props;\n          const {vorschlag, profil, profilID, personName, personVorname, showProfil, showAnfrageForm } = this.state;\n\n          return (\n            <div>\n              <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  id={`vorschlag${vorschlag.getId()}accountpanel-header`}\n                >\n                  <Grid container spacing={1} justify='flex-start' alignItems='center'>\n                    <Grid item>\n          <Typography variant='body1' className={classes.heading}>{personName}, {personVorname}, {vorschlag.getmatch()}\n                      </Typography>\n                    </Grid>\n                    <Grid item>\n                      <ButtonGroup variant='text' size='small'>\n                        <Button color='primary' onClick={this.showProfilButtonClicked}>\n                          Profil ansehen\n                        </Button>\n                        <Button color='secondary' onClick={this.sendAnfrageButtonClicked}>\n                          Kontaktanfrage\n                        </Button>\n                      </ButtonGroup>\n                    </Grid>\n                    <Grid item xs />\n                    <Grid item>\n                      <Typography variant='body2' color={'textSecondary'}>Profil und Kontaktanfrage</Typography>\n                    </Grid>\n                  </Grid>\n                </AccordionSummary>\n                \n              </Accordion>\n            </div>\n          );\n        }\n}\n\n\nconst styles = theme => ({\n  root: {\n      width: '100%',\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n      padding: theme.spacing(1),\n  },\n  content: {\n      margin: theme.spacing(1),\n    },\n  table: {\n      minWidth: 700,\n    },\n  formControl: {\n      margin: theme.spacing(1),\n      minWidth: 200,\n      textAlign: \"left\"\n  },\n  button: {\n      margin: theme.spacing(1),\n      },\n  laden: {\n    padding: 0\n  },\n  breite: {\n    width: 220\n  }\n  });\n\n/** PropTypes */\nVorschlagListeEintrag.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  vorschlag: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired\n}\n\n\nexport default withStyles(styles)(VorschlagListeEintrag);","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/Profil.js",["213"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Typography, TableContainer, Table, TableHead, TableCell, Paper, TableRow, TableBody, Link, Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { withRouter } from 'react-router-dom';\nimport {LernpartnerAPI} from '../api';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\nimport Button from '@material-ui/core/Button';\n\n\nclass Profil extends Component {\n\n    constructor(props){\n        super(props);\n\n        // initiiere einen leeren state\n        this.state = {\n            person: props.person,\n            profil: null,\n            lernvorlieben: null,\n            gruppe: false,\n            personVorname = null,\n            personName = null,\n            personSemester = 0,\n            personStudiengang = null,\n            lerngruppe = false,\n            personProfilID = None,\n            personLernfaecher = null,\n            personLernvorliebenID = null,\n            loadingInProgress: false,\n            loadingError: null,\n        };\n    }\n\n\n\n/**   showVorschlagButtonClick = (event) => {\n      event.stopPropagation();\n      this.setState({\n        showVorschlag: true\n      });\n    }**/\n\n\n\n/**\n    // API Anbindung um Profil vom Backend zu bekommen\n    getPerson = () => {\n      LernpartnerAPI.getAPI().getPerson(this.props.person.getID())\n      .then(personBO =>\n          this.setState({\n            person: personBO,\n            personName: personBO.name,\n            personVorname: personBO.vorname,\n            personSemester: personBO.semester,\n            personStudiengang: personBO.studiengang,\n            personProfilID: personBO.personenprofil,\n            loadingInProgress: false,\n            error: null,\n          }))\n          .catch(e =>\n              this.setState({\n            person: null,\n            personName: null,\n            personVorname: null,\n            personSemester: null,\n            personStudiengang: null,\n            personProfilID: null,\n            loadingInProgress: false,\n            error: e,\n              }));\n      this.setState({\n        loadingInProgress: true,\n        error: null\n      });\n    }\n*/\n\n     getProfil = () => {\n    LernpartnerAPI.getAPI().getProfil(this.props.person.personenprofil).then(profilBO =>\n      this.setState({\n            profil: profilBO,\n            gruppe: profilBO.gruppe\n            //profilLernfaecher: profilBO.lernfaecher,\n            profilLernvorliebenID: profilBO.lernvorlieben,\n            loadingInProgress: false,\n            error: null\n      })).catch(e =>\n        this.setState({ // Reset state with error from catch\n          profil: null,\n          gruppe: null,\n          //profilLernfaecher: null,\n          profilLernvorliebenID: null,\n          loadingInProgress: false,\n          error: e,\n        })\n      );\n\n    // set loading to true\n    this.setState({\n      loadingInProgress: true,\n      loadingError: null\n    });\n  }\n\n\n     getLernvorlieben = () => {\n    LernpartnerAPI.getAPI().getLernvorlieben(this.props.personLernvorliebenID).then(lernvorliebenBO =>\n      this.setState({\n            lernvorlieben: lernvorliebenBO,\n            loadingInProgress: false,\n            error: null\n      })).catch(e =>\n        this.setState({ // Reset state with error from catch\n          lernvorlieben: null,\n          loadingInProgress: false,\n          error: e,\n        })\n      );\n\n    // set loading to true\n    this.setState({\n      loadingInProgress: true,\n      loadingError: null\n    });\n  }\n\n\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\n    componentDidMount() {\n\n  }\n\n\n   /** Renders the component */\n  render() {\n    const { classes, person } = this.props;\n    // Use the states customer\n    const { profil, lernvorlieben, gruppe, personLernvorliebenID, loadingInProgress, error} = this.state;\n\n    // console.log(this.props);\n    return (\n      <div className={classes.root}>\n    \"\"\"  <Button color=\"primary\" onClick= {this.showVorschlagButtonClick}>Zurueck zu den Vorschlaegen</Button>\"\"\"\n      <Typography variant='body1' color={'textSecondary'}>\n            gruppe ?\n                <b> {profil.name} </b> <br />\n                //<b>Lernfächer: </b>{personLernfaecher}<br />\n                <b>Lernvorlieben: </b>{lernvorlieben}<br />\n\n                :\n                <b> {profil.vorname} {profil.name} </b> <br />\n                <b>Semester: </b> {person.semester} <br />\n                <b>Studiengang: </b> {person.studiengang} <br />\n                <b>Alter: </b> {person.alter} <br />\n                <b>Geschlecht: </b> {person.geschlecht} <br />\n                //<b>Lernfächer: </b>{personLernfaecher}<br />\n                <b>Lernvorlieben: </b>{lernvorlieben}<br />\n\n\n\n\n\n      </div>\n    );\n  }\n}\n\n  const styles = theme => ({\n  root: {\n      width: '100%',\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n      padding: theme.spacing(1),\n  },\n  content: {\n      margin: theme.spacing(1),\n    },\n  table: {\n      minWidth: 700,\n    },\n  formControl: {\n      margin: theme.spacing(1),\n      minWidth: 200,\n      textAlign: \"left\"\n  },\n\n  laden: {\n    padding: 0\n  },\n  breite: {\n    width: 220\n  }\n  });\n\n\n/** PropTypes */\nProfil.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  person: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired\n}\n\n\nexport default withStyles(styles)(Profil);\n\n",["214","215"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/LernfaecherForm.js",["216","217","218","219"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/KonversationListe.js",["220","221","222"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'\nimport { withStyles, Button, Grid } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\nimport KonversationListeEintrag from './KonversationListeEintrag';\n\n/**\n * Es werden alle Konversationen des aktuell eingeloggten Studenten angezeigt\n * \n * @see See [KonversationListeEintrag]](#konversationlisteeintrag)\n * \n * Hierfür werden alle Konversationen des aktuell eingeloggten Student geladen und in die Componente NachrichtenListeEintrag gemappt\n * \n */\n\nclass KonversationListe extends Component {\n    constructor(props){\n        super(props);\n\n        /**  console.log(props);\n        let expandedID = null;\n\n        if (this.props.location.expandKonversation) {\n        expandedID = this.props.location.expandKonversation.getID();\n        }\n        */\n       \n        // initiiere einen leeren state\n        this.state = {\n            konversationen : [],\n            error: null,\n            loadingInProgress: false, \n            //expandedKonversationID: expandedID,\n        };\n\n      }\n\n      // API Anbindung um Vorschläge des Students vom Backend zu bekommen \n    getKonversationen = () => {\n      LernpartnerAPI.getAPI().getKonversationenByPerson(this.props.currentPerson.getid())\n      .then(konversationenBOs =>\n          this.setState({\n              konversationen: konversationenBOs,\n              error: null,\n              loadingInProgress: false,\n          })).catch(e =>\n              this.setState({\n                  konversationen: [],\n                  error: e,\n                  loadingInProgress: false,\n              }));\n      this.setState({\n          error: null,\n          loadingInProgress: true,\n          loadingKonversationenError: null\n      });\n    }\n    \n\n\n// Lifecycle methode, wird aufgerufen wenn componente in den DOM eingesetzt wird\ncomponentDidMount() {\n  this.getKonversationen();\n  this.setState({\n      currentStudentName: this.props.currentPerson.getname(),\n        })\n}\n\n /** \n     * Handles onExpandedStateChange events from the VorschlagListeEintrag component. Toggels the expanded state of \n     * the VorschlagListeEintrag of the given VorschlagBO.\n     * \n     * @param {konversation} KonversationBO of the KonversationListeEintrag to be toggeled\n     \n  onExpandedStateChange = konversation => {\n    // console.log(konversationID);\n    // Set expandend Konversation Eintrag to null by default\n    let newID = null;\n\n    // If same konversation entry is clicked, collapse it else expand a new one\n    if (konversation.getID() !== this.state.expandedKonversationID) {\n    // Expand the konservation entry with konversationID\n    newID = konversation.getID();\n    }\n    // console.log(newID);\n    this.setState({\n    expandedKonversastionID: newID,\n    });\n}\n*/\n\nrender() {\n  const { classes, currentPerson } = this.props;\n        const { konversationen, error, loadingInProgress}  = this.state; \n\n        return(\n          <div className={classes.root}>\n\n            { \n              // Show the list of KonversationListeEintrag components\n              // Do not use strict comparison, since expandedVorschlagID maybe a string if given from the URL parameters\n  \n              konversationen.map(konversation =>\n                <KonversationListeEintrag key={konversation.getID()} konversation={konversation}\n                />)\n            }\n            <LoadingProgress show={loadingInProgress} />\n            <ContextErrorMessage error={error} contextErrorMsg={`Leider konnten deine Chats nicht geladen werden!`} onReload={this.getKonversationen} />\n          </div>\n\n        );\n\n      }\n}\n\n/** Component specific styles */\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  customerFilter: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  }\n});\n\n/** PropTypes */\nKonversationListe.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  /** @ignore */\n  location: PropTypes.object.isRequired,\n}\n\n\n\nexport default withRouter(withStyles(styles)(KonversationListe));","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/KonversationListeEintrag.js",["223","224","225","226"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Typography, Grid } from '@material-ui/core';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport Nachricht from './Nachricht';\nimport KonversationListe from './KonversationListe';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\n\n/** \n * \n * Es wird ein einzelne Konversationen von einer Person dargestellt\n * \n * Hierfür wird der Name der Konversation angezeigt\n * \n */\n\nclass KonversationListeEintrag extends Component {\n\n    constructor(props){\n        super(props);\n\n        // initiiere einen leeren state\n        this.state = {\n            konversation: null,\n            //showKonversation: false,\n            //showProfil: false,\n            loadingInProgress: false,\n            error: null\n        };\n    }\n\n\n    \n// Lifecycle methode, wird aufgerufen wenn componente in den DOM eingesetzt wird\ncomponentDidMount() {\n  this.getKonversation();\n}\n\n//Handles the onClick event of the show Konversation button\nshowKonversationButtonClicked = (event) => {\n  event.stopPropagation();\n  this.setState({\n    showKonversation: true\n  });\n}\n\nrender() {\n  const { classes } = this.props;\n  const { konversation } = this.state;\n\n  return(\n    <div>\n      <Grid container spacing={1} justify='flex-start' alignItems='center'>\n            <Grid item>\n              <Typography variant='body1' className={classes.heading}>{konversation.getname()}\n                </Typography>\n            </Grid>  \n            <Grid item>\n              <ButtonGroup variant='text' size='small'>\n                <Button color='primary' onClick={this.showKonversationButtonClicked}>\n                    Konversation ansehen\n                </Button>\n              </ButtonGroup>\n            </Grid>\n      </Grid>\n      \n    </div>\n    //<Nachricht show={showKonversation} konversationid = {konversation.getid()}/> \n  )\n\n}\n  \n    \n}\n\n/** Component specific styles */\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  customerFilter: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  }\n});\n\n/** PropTypes */\nKonversationListeEintrag.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  /** @ignore */\n  location: PropTypes.object.isRequired,\n}\n\n\n\nexport default withStyles(styles)(KonversationListeEintrag);","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/Nachricht.js",["227","228","229","230","231","232","233","234"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'\nimport { withStyles, Button, TextField, InputAdornment, IconButton, Grid, Typography, Paper, CardActions, Divider } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\nimport NachrichtBO from '../api/NachrichtBO';\nimport NachrichtenListeEintrag from './NachrichtenListeEintrag';\n//import Divider from \"@material-ui/core/Divider\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n//import SaveIcon from '@material-ui/icons/Save';\n//import Table from '@material-ui/core/Table';\n//import TableBody from '@material-ui/core/TableBody';\n//import TableCell from '@material-ui/core/TableCell';\n//import TableContainer from '@material-ui/core/TableContainer';\n//import TableHead from '@material-ui/core/TableHead';\n//import TableRow from '@material-ui/core/TableRow';\n\n\n/**\n * Es werden alle Nachrichten des aktuell eingeloggten Studenten angezeigt\n * \n * @see See [NachrichtenListeEintrag]](#nachrichtenlisteeintrag)\n * \n * Hierfür werden alle Nachrichten des aktuell eingeloggten Student geladen und in die Componente NachrichtenListeEintrag gemappt\n * \n */\n\n\nclass Nachricht extends Component {\n\n  constructor(props) {\n    super(props);\n\n   // console.log(props);\n   let expandedID = null;\n\n   if (this.props.location.expandNachricht) {\n     expandedID = this.props.location.expandNachricht.getID();\n   }\n\n   // Init an empty state\n   this.state = {\n     nachrichten: '',\n     inhalt: null,\n     konversation_id: null, \n     error: null,\n     loadingInProgress: false,\n     expandedNachrichtID: expandedID,\n   };\n }\n\n //Öffnet das Dialog-Fenster Nachrichtfrom, wenn der Button geklickt wurde\n addButtonClicked = event => {\n    event.stopPropagation();\n    this.setState({\n      showNachrichtForm: true\n    });\n  }\n\n  //Öffnet das Dialog-Fenster Gruppefrom, wenn der Button geklickt wurde\n showGruppeFormButtonClicked = event => {\n  event.stopPropagation();\n  this.setState({\n    showGruppeForm: true\n  });\n}\n \n // API Anbindung um alle Nachrichten vom Backend zu bekommen \n getNachrichten= () => {\n  LernpartnerAPI.getAPI()\n    .getNachrichten(this.props.currentPerson.getID(), this.props.konversation_id.getID())\n    .then((nachrichtBO) =>\n      this.setState({\n        nachricht: nachrichtBO,\n        inhalt: nachrichtBO.inhalt,\n        konversation_id: nachrichtBO.konversation_id,\n        loadingInProgress: false,\n        error: null,\n      })\n    )\n    .catch((e) =>\n      this.setState({\n        nachrichten: null,\n        loadingInProgress: false,\n        loadingError: e,\n      })\n    );\n  this.setState({\n    loadingInProgress: true,\n    loadingError: null,\n  });\n};\n\naddNachricht = () => {\n    let newNachricht = new NachrichtBO(\n      this.state.inhalt,\n      this.props.currentPerson.getID(),\n      this.props.konversation_id.getID()\n    );\n\n    LernpartnerAPI.getAPI()\n      .addNachricht(newNachricht)\n      .then((nachricht) => {\n        this.state.nachricht.push(nachricht);\n        this.setState({ inhalt: \"\" });\n        // Backend call sucessfull\n        // reinit the dialogs state for a new empty nachricht\n      })\n      .catch((e) =>\n        this.setState({\n          updatingInProgress: false, // disable loading indicator\n          updatingError: e, // show error message\n        })\n      );\n\nthis.setState({\n    loadingInProgress: true,\n    error: null\n  });\n}\n\n// Lifecycle methode, wird aufgerufen wenn componente in den DOM eingesetzt wird\ncomponentDidMount() {\n  this.getNachrichten();\n}\n\n//Wird aufgerufen, wenn das Dialog-Fenster Nachrichtform geschlossen wird\nnachrichtFormClosed = nachrichten => {\n    this.getNachrichten();\n    if (nachrichten) {\n      const newNachricht = [...this.state.nachrichten, nachrichten];\n      this.setState({\n        nachrichten: newNachricht,\n        filteredNachrichten: [...newNachricht],\n        showNachrichtForm: false,\n        showGruppeForm: false\n      });\n    } else {\n      this.setState({\n        showNachrichtForm: false\n      });\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ content: e.target.value });\n  };\n\n  handleClose = () => {\n    this.props.onClose();\n  };\n\n  //nachrichtDeleted = nachricht => {\n   // const newNachricht = this.state.nachrichten.filter(nachrichtFromState => nachrichtFromState.getID() !== nachricht.getID());\n   // this.setState({\n     // nachrichten: newNachricht,\n     // filteredNachrichten: [...newNachricht],\n     // showNachrichtenForm: false\n  //  });}\n\n // Rendert die Componente \n    render() {\n      const { classes, currentPerson } = this.props;\n      const { nachrichten, inhalt, konversation_id, loadingInProgress, error } = this.state;\n      if (nachrichten) {\n        nachrichten.sort((a, b) => {\n          return a.getID() - b.getID();\n        });\n      }\n  \n      return (\n        <div>\n          <h1 class=\"Chatname\">\n            {konversation_id.getName() + \" \" + konversation_id.getVorname()}\n          </h1>\n          {nachrichten\n            ? nachrichten.map((nachricht) => {\n                {\n                  if (nachricht.getCurrentPerson() != currentPerson.getID()) {\n                    return (\n                      <div id=\"empfänger_text\">\n                        <Grid item\n                          xs\n                          className={classes.outerColumn}\n                          style={{ display: \"flex\", alignItems: \"center\", position: \"rigth\" }}\n                        >\n                          <Typography>{nachricht.getInhalt()}</Typography>\n                        </Grid>\n                        <Divider />\n                      </div>\n                    );\n                  } \n                  \n                  else {\n                    return (\n                      <div id=\"sender_text\">\n                        <Grid\n                          item\n                          className={classes.outerColumn}\n                          container\n                          direction=\"row\"\n                          alignItems=\"center\"\n                          justify=\"flex-end\"\n                          position= \"left\"\n                        >\n                          <Typography>{nachricht.getInhalt()}</Typography>\n                        </Grid>\n                        <Divider />\n                      </div>\n                    );\n                  }\n                }\n              })\n            : null}\n  \n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField\n              id=\"standard-basic\"\n              label=\"schreibe eine Nachricht\"\n              value={inhalt}\n              onChange={this.handleChange}\n            />\n          </form>\n          <Button className={classes.button_style} variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>\n          <ArrowBackIcon/>\n          </Button>\n          <Button color=\"primary\" variant=\"contained\" onClick={this.addNachricht}>\n            senden \n          </Button>\n\n          <Button variant='contained' color='secondary' onClick={this.showGruppeFormButtonClicked}>\n              Gruppe erstellen \n          </Button>\n\n      <LoadingProgress show={loadingInProgress} />\n      <ContextErrorMessage error={error} contextErrorMsg={`Leider konnten deine Nachrichten nicht geladen werden!`} onReload={this.getNachrichten} />\n      \n      </div>\n      //<NachrichtForm show={NachrichtForm}></NachrichtForm>\n    );\n\n}}\n\nconst styles = (theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"100ch\",\n    },\n  },\n  outerColumn: {\n    margin: 5,\n    padding: 5,\n    height: 50,\n  },\n  button_style: {\n    margin: 5,\n    padding: 5,\n  }\n});\n\n/** PropTypes */\nNachricht.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  /** @ignore */\n  location: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired\n}\n  \n\nexport default withStyles(styles)(Nachricht);","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/NachrichtenListeEintrag.js",["235","236","237","238","239","240","241","242","243","244","245","246","247","248"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'\n//import { withStyles } from '@material-ui/core';\n//import { withRouter } from 'react-router-dom';\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport TextField from \"@material-ui/core/TextField\";\n//import TableCell from '@material-ui/core/TableCell';\n//import TableRow from '@material-ui/core/TableRow';\n\n//import InputLabel from '@material-ui/core/InputLabel';\n//import MenuItem from '@material-ui/core/MenuItem';\n//import FormControl from '@material-ui/core/FormControl';\n//import Select from '@material-ui/core/Select';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\n\nimport Nachricht from './Nachricht'\n//import NachrichtForm from './NachrichtForm'\n//import GruppeForm from './GruppeForm'\n\n/**\n * Es wird eine einzelne Nachricht von einer Person  dargestellt\n *\n * \n * Hierfür wird der Inhalt der Nachricht angezeigt \n * \n */\n\nclass NachrichtenListeEintrag extends Component {\n    constructor(props){\n        super(props);\n\n        // initiiere einen leeren state\n        this.state = {\n            nachrichten: [], //Liste mit den IDs aller Nachrichten \n            konversation_ID: null,  \n            inhalt: null, \n            person_id: null,\n            personName: null,\n            personVorname: null,\n            loadingInProgress: false,\n            error: null\n        };\n    }\n\n\n    \n    //open the onClick event of the show Nachricht button\n    showNachrichtButtonClicked = (event) => {\n      event.stopPropagation();\n      this.setState({\n        showNachrichtForm: true\n      });\n    }\n\n     //ruft die getNachrichten() Funktion in den Props auf\n     //getNachrichten = () => {\n      //this.props.getNachrichten(); }\n\n\n      // API Anbindung um Nachricht vom Backend zu bekommen \n    getNachrichten = () => {\n        LernpartnerAPI.getAPI().getNachrichten(this.props.nachrichten)\n        .then(nachrichtBO =>\n            this.setState({\n              nachrichten: nachrichtBO,\n              inhalt: nachrichtBO.inhalt,\n              loadingInProgress: false,\n              error: null,\n            })).then(()=>{\n              this.getNachrichten()\n            })\n            .catch(e =>\n                this.setState({\n                  nachrichten: null,\n                  inhalt: null,\n                  loadingInProgress: false,\n                  error: e,\n                }));\n        this.setState({\n          loadingInProgress: true,\n          error: null\n        });\n      }\n\n      // API Anbindung um Person vom Backend zu bekommen \n    getPerson = () => {\n      LernpartnerAPI.getAPI().getPerson(this.props.nachricht.getmain_person_id())\n      .then(personBO =>\n          this.setState({\n            person: personBO,\n            personName: personBO.name,\n            personVorname: personBO.vorname,\n            loadingInProgress: false,\n            error: null,\n          }))\n          .catch(e =>\n              this.setState({\n                person: null,\n                personName: null,\n                personVorname: null,\n                loadingInProgress: false,\n                error: e,\n              }));\n      this.setState({\n        loadingInProgress: true,\n        error: null\n      });\n    }\n   \n\n\n    // Lifecycle methode, wird aufgerufen wenn componente in den DOM eingesetzt wird\n    componentDidMount() {\n        this.getNachrichten();\n      }\n  \n\n      render() {\n        const { classes, currentperson } = this.props;\n        const {nachrichten, inhalt, konversation_ID, personName, personVorname, expandedNachrichtID, loadingInProgress, error} = this.state;\n\n        return(\n          <div>\n                  {\n                      nachrichten ?\n                      <>\n                      {\n                          nachrichten.map(nachricht =>\n                            <NachrichtenListeEintrag key={nachricht.getID()} nachricht={nachrichten} personName={personVorname + \" \" +personVorname} inhalt={inhalt} expandedState={expandedNachrichtID === nachricht.getID()}\n                              onExpandedStateChange={this.onExpandedStateChange}\n                            />)\n                      }\n                      </>\n                      :\n                      <></>\n                  }\n         \n          <LoadingProgress show={loadingInProgress} />\n          <ContextErrorMessage error={error} contextErrorMsg = {'Deine Nachricht konnte nicht geladen werden'} onReload={this.getNachrichten} /> \n          \n        </div>\n        )\n      }\n}\n\nconst styles = (theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    margin: 10,\n  },\n});\n  \n  /** PropTypes */\n  NachrichtenListeEintrag.propTypes = {\n    /** @ignore */\n    classes: PropTypes.object.isRequired,\n    NachrichtListeEintrag: PropTypes.object.isRequired,\n    show: PropTypes.bool.isRequired\n  }\n  \n  \n  export default withStyles(styles)(NachrichtenListeEintrag);",{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","severity":1,"message":"254","line":1,"column":17,"nodeType":"255","messageId":"256","endLine":1,"endColumn":26},{"ruleId":"253","severity":1,"message":"257","line":7,"column":8,"nodeType":"255","messageId":"256","endLine":7,"endColumn":25},{"ruleId":"253","severity":1,"message":"258","line":150,"column":39,"nodeType":"255","messageId":"256","endLine":150,"endColumn":49},{"ruleId":"253","severity":1,"message":"259","line":150,"column":51,"nodeType":"255","messageId":"256","endLine":150,"endColumn":60},{"ruleId":"253","severity":1,"message":"260","line":2,"column":8,"nodeType":"255","messageId":"256","endLine":2,"endColumn":17},{"ruleId":"253","severity":1,"message":"261","line":3,"column":29,"nodeType":"255","messageId":"256","endLine":3,"endColumn":39},{"ruleId":"253","severity":1,"message":"262","line":3,"column":41,"nodeType":"255","messageId":"256","endLine":3,"endColumn":45},{"ruleId":"253","severity":1,"message":"263","line":3,"column":47,"nodeType":"255","messageId":"256","endLine":3,"endColumn":53},{"ruleId":"253","severity":1,"message":"264","line":3,"column":55,"nodeType":"255","messageId":"256","endLine":3,"endColumn":65},{"ruleId":"253","severity":1,"message":"265","line":3,"column":67,"nodeType":"255","messageId":"256","endLine":3,"endColumn":73},{"ruleId":"253","severity":1,"message":"266","line":3,"column":75,"nodeType":"255","messageId":"256","endLine":3,"endColumn":86},{"ruleId":"253","severity":1,"message":"267","line":3,"column":88,"nodeType":"255","messageId":"256","endLine":3,"endColumn":101},{"ruleId":"253","severity":1,"message":"268","line":3,"column":103,"nodeType":"255","messageId":"256","endLine":3,"endColumn":120},{"ruleId":"253","severity":1,"message":"269","line":3,"column":122,"nodeType":"255","messageId":"256","endLine":3,"endColumn":135},{"ruleId":"253","severity":1,"message":"270","line":3,"column":137,"nodeType":"255","messageId":"256","endLine":3,"endColumn":146},{"ruleId":"253","severity":1,"message":"271","line":3,"column":148,"nodeType":"255","messageId":"256","endLine":3,"endColumn":162},{"ruleId":"253","severity":1,"message":"272","line":3,"column":164,"nodeType":"255","messageId":"256","endLine":3,"endColumn":168},{"ruleId":"253","severity":1,"message":"273","line":4,"column":8,"nodeType":"255","messageId":"256","endLine":4,"endColumn":17},{"ruleId":"253","severity":1,"message":"274","line":5,"column":10,"nodeType":"255","messageId":"256","endLine":5,"endColumn":24},{"ruleId":"253","severity":1,"message":"275","line":5,"column":26,"nodeType":"255","messageId":"256","endLine":5,"endColumn":33},{"ruleId":"253","severity":1,"message":"276","line":9,"column":10,"nodeType":"255","messageId":"256","endLine":9,"endColumn":20},{"ruleId":"253","severity":1,"message":"277","line":10,"column":8,"nodeType":"255","messageId":"256","endLine":10,"endColumn":27},{"ruleId":"253","severity":1,"message":"278","line":11,"column":8,"nodeType":"255","messageId":"256","endLine":11,"endColumn":23},{"ruleId":"249","replacedBy":"279"},{"ruleId":"251","replacedBy":"280"},{"ruleId":"253","severity":1,"message":"262","line":2,"column":41,"nodeType":"255","messageId":"256","endLine":2,"endColumn":45},{"ruleId":"281","severity":1,"message":"282","line":554,"column":9,"nodeType":"283","messageId":"284","endLine":561,"endColumn":10},{"ruleId":"253","severity":1,"message":"285","line":3,"column":123,"nodeType":"255","messageId":"256","endLine":3,"endColumn":127},{"ruleId":"253","severity":1,"message":"286","line":168,"column":32,"nodeType":"255","messageId":"256","endLine":168,"endColumn":45},{"ruleId":"253","severity":1,"message":"287","line":3,"column":34,"nodeType":"255","messageId":"256","endLine":3,"endColumn":48},{"ruleId":"253","severity":1,"message":"288","line":3,"column":50,"nodeType":"255","messageId":"256","endLine":3,"endColumn":55},{"ruleId":"253","severity":1,"message":"289","line":3,"column":57,"nodeType":"255","messageId":"256","endLine":3,"endColumn":66},{"ruleId":"253","severity":1,"message":"290","line":3,"column":68,"nodeType":"255","messageId":"256","endLine":3,"endColumn":77},{"ruleId":"253","severity":1,"message":"291","line":3,"column":79,"nodeType":"255","messageId":"256","endLine":3,"endColumn":84},{"ruleId":"253","severity":1,"message":"292","line":3,"column":86,"nodeType":"255","messageId":"256","endLine":3,"endColumn":94},{"ruleId":"253","severity":1,"message":"293","line":3,"column":96,"nodeType":"255","messageId":"256","endLine":3,"endColumn":105},{"ruleId":"253","severity":1,"message":"262","line":3,"column":107,"nodeType":"255","messageId":"256","endLine":3,"endColumn":111},{"ruleId":"253","severity":1,"message":"272","line":3,"column":113,"nodeType":"255","messageId":"256","endLine":3,"endColumn":117},{"ruleId":"253","severity":1,"message":"277","line":8,"column":8,"nodeType":"255","messageId":"256","endLine":8,"endColumn":27},{"ruleId":"253","severity":1,"message":"278","line":9,"column":8,"nodeType":"255","messageId":"256","endLine":9,"endColumn":23},{"ruleId":"253","severity":1,"message":"294","line":198,"column":15,"nodeType":"255","messageId":"256","endLine":198,"endColumn":21},{"ruleId":"253","severity":1,"message":"295","line":198,"column":23,"nodeType":"255","messageId":"256","endLine":198,"endColumn":35},{"ruleId":"253","severity":1,"message":"296","line":198,"column":131,"nodeType":"255","messageId":"256","endLine":198,"endColumn":152},{"ruleId":"253","severity":1,"message":"297","line":198,"column":154,"nodeType":"255","messageId":"256","endLine":198,"endColumn":167},{"ruleId":"253","severity":1,"message":"298","line":198,"column":215,"nodeType":"255","messageId":"256","endLine":198,"endColumn":232},{"ruleId":"253","severity":1,"message":"299","line":198,"column":234,"nodeType":"255","messageId":"256","endLine":198,"endColumn":239},{"ruleId":"253","severity":1,"message":"263","line":4,"column":22,"nodeType":"255","messageId":"256","endLine":4,"endColumn":28},{"ruleId":"253","severity":1,"message":"270","line":4,"column":30,"nodeType":"255","messageId":"256","endLine":4,"endColumn":39},{"ruleId":"253","severity":1,"message":"271","line":4,"column":41,"nodeType":"255","messageId":"256","endLine":4,"endColumn":55},{"ruleId":"253","severity":1,"message":"264","line":4,"column":57,"nodeType":"255","messageId":"256","endLine":4,"endColumn":67},{"ruleId":"253","severity":1,"message":"272","line":4,"column":69,"nodeType":"255","messageId":"256","endLine":4,"endColumn":73},{"ruleId":"253","severity":1,"message":"300","line":4,"column":75,"nodeType":"255","messageId":"256","endLine":4,"endColumn":85},{"ruleId":"249","replacedBy":"301"},{"ruleId":"251","replacedBy":"302"},{"ruleId":"253","severity":1,"message":"303","line":7,"column":63,"nodeType":"255","messageId":"256","endLine":7,"endColumn":79},{"ruleId":"253","severity":1,"message":"294","line":94,"column":29,"nodeType":"255","messageId":"256","endLine":94,"endColumn":35},{"ruleId":"253","severity":1,"message":"304","line":94,"column":37,"nodeType":"255","messageId":"256","endLine":94,"endColumn":45},{"ruleId":"253","severity":1,"message":"305","line":94,"column":74,"nodeType":"255","messageId":"256","endLine":94,"endColumn":84},{"ruleId":"253","severity":1,"message":"306","line":94,"column":86,"nodeType":"255","messageId":"256","endLine":94,"endColumn":101},{"ruleId":null,"fatal":true,"severity":2,"message":"307","line":9,"column":8},{"ruleId":"249","replacedBy":"308"},{"ruleId":"251","replacedBy":"309"},{"ruleId":"253","severity":1,"message":"310","line":5,"column":8,"nodeType":"255","messageId":"256","endLine":5,"endColumn":22},{"ruleId":"253","severity":1,"message":"311","line":8,"column":8,"nodeType":"255","messageId":"256","endLine":8,"endColumn":20},{"ruleId":"253","severity":1,"message":"286","line":73,"column":22,"nodeType":"255","messageId":"256","endLine":73,"endColumn":35},{"ruleId":"253","severity":1,"message":"312","line":74,"column":21,"nodeType":"255","messageId":"256","endLine":74,"endColumn":32},{"ruleId":"253","severity":1,"message":"263","line":4,"column":22,"nodeType":"255","messageId":"256","endLine":4,"endColumn":28},{"ruleId":"253","severity":1,"message":"272","line":4,"column":30,"nodeType":"255","messageId":"256","endLine":4,"endColumn":34},{"ruleId":"253","severity":1,"message":"286","line":96,"column":20,"nodeType":"255","messageId":"256","endLine":96,"endColumn":33},{"ruleId":"253","severity":1,"message":"313","line":5,"column":8,"nodeType":"255","messageId":"256","endLine":5,"endColumn":17},{"ruleId":"253","severity":1,"message":"257","line":6,"column":8,"nodeType":"255","messageId":"256","endLine":6,"endColumn":25},{"ruleId":"253","severity":1,"message":"277","line":7,"column":8,"nodeType":"255","messageId":"256","endLine":7,"endColumn":27},{"ruleId":"253","severity":1,"message":"278","line":8,"column":8,"nodeType":"255","messageId":"256","endLine":8,"endColumn":23},{"ruleId":"253","severity":1,"message":"271","line":4,"column":41,"nodeType":"255","messageId":"256","endLine":4,"endColumn":55},{"ruleId":"253","severity":1,"message":"264","line":4,"column":57,"nodeType":"255","messageId":"256","endLine":4,"endColumn":67},{"ruleId":"253","severity":1,"message":"291","line":4,"column":87,"nodeType":"255","messageId":"256","endLine":4,"endColumn":92},{"ruleId":"253","severity":1,"message":"314","line":4,"column":94,"nodeType":"255","messageId":"256","endLine":4,"endColumn":105},{"ruleId":"253","severity":1,"message":"276","line":5,"column":10,"nodeType":"255","messageId":"256","endLine":5,"endColumn":20},{"ruleId":"253","severity":1,"message":"315","line":9,"column":8,"nodeType":"255","messageId":"256","endLine":9,"endColumn":31},{"ruleId":"316","severity":1,"message":"317","line":180,"column":17,"nodeType":"318","messageId":"319","endLine":214,"endColumn":18},{"ruleId":"320","severity":1,"message":"321","line":181,"column":52,"nodeType":"322","messageId":"284","endLine":181,"endColumn":54},{"ruleId":"253","severity":1,"message":"300","line":6,"column":22,"nodeType":"255","messageId":"256","endLine":6,"endColumn":32},{"ruleId":"253","severity":1,"message":"323","line":6,"column":34,"nodeType":"255","messageId":"256","endLine":6,"endColumn":43},{"ruleId":"253","severity":1,"message":"324","line":6,"column":45,"nodeType":"255","messageId":"256","endLine":6,"endColumn":61},{"ruleId":"253","severity":1,"message":"303","line":6,"column":63,"nodeType":"255","messageId":"256","endLine":6,"endColumn":79},{"ruleId":"253","severity":1,"message":"272","line":6,"column":81,"nodeType":"255","messageId":"256","endLine":6,"endColumn":85},{"ruleId":"253","severity":1,"message":"263","line":7,"column":10,"nodeType":"255","messageId":"256","endLine":7,"endColumn":16},{"ruleId":"253","severity":1,"message":"325","line":7,"column":18,"nodeType":"255","messageId":"256","endLine":7,"endColumn":29},{"ruleId":"253","severity":1,"message":"326","line":8,"column":8,"nodeType":"255","messageId":"256","endLine":8,"endColumn":22},{"ruleId":"253","severity":1,"message":"270","line":9,"column":8,"nodeType":"255","messageId":"256","endLine":9,"endColumn":17},{"ruleId":"253","severity":1,"message":"313","line":20,"column":8,"nodeType":"255","messageId":"256","endLine":20,"endColumn":17},{"ruleId":"253","severity":1,"message":"327","line":123,"column":17,"nodeType":"255","messageId":"256","endLine":123,"endColumn":24},{"ruleId":"253","severity":1,"message":"328","line":123,"column":26,"nodeType":"255","messageId":"256","endLine":123,"endColumn":39},{"ruleId":"253","severity":1,"message":"329","line":124,"column":37,"nodeType":"255","messageId":"256","endLine":124,"endColumn":52},{"ruleId":"253","severity":1,"message":"258","line":124,"column":54,"nodeType":"255","messageId":"256","endLine":124,"endColumn":64},"no-native-reassign",["330"],"no-negated-in-lhs",["331"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'KonversationListe' is defined but never used.","'personName' is assigned a value but never used.","'personneu' is assigned a value but never used.","'PropTypes' is defined but never used.","'makeStyles' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogActions' is defined but never used.","'TextField' is defined but never used.","'InputAdornment' is defined but never used.","'Grid' is defined but never used.","'CloseIcon' is defined but never used.","'TeachingbeeAPI' is defined but never used.","'GroupBO' is defined but never used.","'withRouter' is defined but never used.","'ContextErrorMessage' is defined but never used.","'LoadingProgress' is defined but never used.",["330"],["331"],"no-dupe-class-members","Duplicate name 'getNachrichten'.","MethodDefinition","unexpected","'Card' is defined but never used.","'currentPerson' is assigned a value but never used.","'TableContainer' is defined but never used.","'Table' is defined but never used.","'TableHead' is defined but never used.","'TableCell' is defined but never used.","'Paper' is defined but never used.","'TableRow' is defined but never used.","'TableBody' is defined but never used.","'profil' is assigned a value but never used.","'personProfil' is assigned a value but never used.","'personLernvorliebenID' is assigned a value but never used.","'lernvorlieben' is assigned a value but never used.","'loadingInProgress' is assigned a value but never used.","'error' is assigned a value but never used.","'Typography' is defined but never used.",["330"],["331"],"'AccordionDetails' is defined but never used.","'profilID' is assigned a value but never used.","'showProfil' is assigned a value but never used.","'showAnfrageForm' is assigned a value but never used.","Parsing error: Identifier 'Button' has already been declared.\n\n\u001b[0m \u001b[90m  7 |\u001b[39m \u001b[36mimport\u001b[39m \u001b[33mContextErrorMessage\u001b[39m \u001b[36mfrom\u001b[39m \u001b[32m'./dialogs/ContextErrorMessage'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m \u001b[36mimport\u001b[39m \u001b[33mLoadingProgress\u001b[39m \u001b[36mfrom\u001b[39m \u001b[32m'./dialogs/LoadingProgress'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m \u001b[36mimport\u001b[39m \u001b[33mButton\u001b[39m \u001b[36mfrom\u001b[39m \u001b[32m'@material-ui/core/Button'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m \u001b[36mclass\u001b[39m \u001b[33mProfil\u001b[39m \u001b[36mextends\u001b[39m \u001b[33mComponent\u001b[39m {\u001b[0m",["330"],["331"],"'FormHelperText' is defined but never used.","'NativeSelect' is defined but never used.","'lernfaecher' is assigned a value but never used.","'Nachricht' is defined but never used.","'CardActions' is defined but never used.","'NachrichtenListeEintrag' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'ButtonGroup' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'classes' is assigned a value but never used.","'currentperson' is assigned a value but never used.","'konversation_ID' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]