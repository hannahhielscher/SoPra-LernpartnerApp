<<<<<<< HEAD
[{"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/index.js":"1","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/App.js":"2","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/Theme.js":"3","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/firebaseconfig.js":"4","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernpartnerAPI.js":"5","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/pages/SignIn.js":"6","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/LoadingProgress.js":"7","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ContextErrorMessage.js":"8","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/pages/About.js":"9","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/ProfilBO.js":"10","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/LerngruppeBO.js":"11","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/VorschlagBO.js":"12","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernvorliebenBO.js":"13","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/NachrichtBO.js":"14","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeChatBO.js":"15","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/PersonBO.js":"16","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/KonversationBO.js":"17","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeGruppeBO.js":"18","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/BusinessObject.js":"19","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/NamedBusinessObject.js":"20","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/layout/Header.js":"21","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfileDropDown.js":"22","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/MeinProfil.js":"23","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/index.js":"24","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppeForm.js":"25","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/RegistrierungForm.js":"26"},{"size":146,"mtime":1624026895222,"results":"27","hashOfConfig":"28"},{"size":6179,"mtime":1624396871570,"results":"29","hashOfConfig":"28"},{"size":1706,"mtime":1624026895215,"results":"30","hashOfConfig":"28"},{"size":579,"mtime":1624088008253,"results":"31","hashOfConfig":"28"},{"size":38162,"mtime":1624393472309,"results":"32","hashOfConfig":"28"},{"size":1816,"mtime":1624026895222,"results":"33","hashOfConfig":"28"},{"size":862,"mtime":1624026895220,"results":"34","hashOfConfig":"28"},{"size":2113,"mtime":1624026895219,"results":"35","hashOfConfig":"28"},{"size":844,"mtime":1624256670072,"results":"36","hashOfConfig":"28"},{"size":1253,"mtime":1624026895216,"results":"37","hashOfConfig":"28"},{"size":1078,"mtime":1624026895215,"results":"38","hashOfConfig":"28"},{"size":1348,"mtime":1624026895217,"results":"39","hashOfConfig":"28"},{"size":2140,"mtime":1624026895216,"results":"40","hashOfConfig":"28"},{"size":1315,"mtime":1624026895216,"results":"41","hashOfConfig":"28"},{"size":1040,"mtime":1624088008249,"results":"42","hashOfConfig":"28"},{"size":2597,"mtime":1624026895216,"results":"43","hashOfConfig":"28"},{"size":1003,"mtime":1624026895215,"results":"44","hashOfConfig":"28"},{"size":1228,"mtime":1624088008249,"results":"45","hashOfConfig":"28"},{"size":761,"mtime":1624026895215,"results":"46","hashOfConfig":"28"},{"size":375,"mtime":1624026895216,"results":"47","hashOfConfig":"28"},{"size":1582,"mtime":1624383234924,"results":"48","hashOfConfig":"28"},{"size":3271,"mtime":1624026895220,"results":"49","hashOfConfig":"28"},{"size":6551,"mtime":1624396871571,"results":"50","hashOfConfig":"28"},{"size":329,"mtime":1624026895217,"results":"51","hashOfConfig":"28"},{"size":2002,"mtime":1624379808964,"results":"52","hashOfConfig":"28"},{"size":10880,"mtime":1624396871572,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1ufahl7",{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/index.js",[],["110","111"],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/App.js",["112","113","114","115"],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/Theme.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/firebaseconfig.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernpartnerAPI.js",["116"],"import ProfilBO from './ProfilBO';\nimport PersonBO from './PersonBO';\nimport VorschlagBO from './VorschlagBO';\nimport LerngruppeBO from './LerngruppeBO';\nimport LernvorliebenBO from './LernvorliebenBO';\nimport NachrichtBO from './NachrichtBO';\nimport KonversationBO from './KonversationBO'\nimport TeilnahmeChatBO from './TeilnahmeChatBO';\nimport TeilnahmeGruppeBO from './TeilnahmeGruppeBO';\n\n/**\n * Abstracts the REST interface of the Python backend with convenient access methods.\n * The class is implemented as a singleton. \n */\nexport default class LernpartnerAPI {\n\n        // Singelton instance\n        static #api = null;\n\n        #lernappServerBaseURL = '/lernApp'\n        /** \n         * Get the Singelton instance \n         * \n         * @public\n         */\n        static getAPI() {\n          if (this.#api == null) {\n            this.#api = new LernpartnerAPI();\n          }\n          return this.#api;\n        }\n\n        #fetchAdvanced = (url, init) => fetch(url, init)\n          .then(res => {\n            // The Promise returned from fetch() wonâ€™t reject on HTTP error status even if the response is an HTTP 404 or 500. \n            if (!res.ok) {\n              throw Error(`${res.status} ${res.statusText}`);\n            }\n            return res.json();\n          }\n          )\n\n        //Person related\n        #getPersonenURL = () => `${this.#lernappServerBaseURL}/personen`;\n        #addPersonURL = () => `${this.#lernappServerBaseURL}/personen`;\n        #getPersonURL = (id) => `${this.#lernappServerBaseURL}/personen/${id}`;\n        #updatePersonURL = (id, name, vorname, semester, studiengang, alter, geschlecht, lerngruppe, email) => `${this.#lernappServerBaseURL}/personen?id=${id}&name=${name}&vorname=${vorname}&semester=${semester}&studiengang=${studiengang}&alter=${alter}&geschlecht=${geschlecht}&lerngruppe=${lerngruppe}`;\n        #deletePersonURL = (id) => `${this.#lernappServerBaseURL}/personen/${id}`;\n        #searchPersonURL = (personName) => `${this.#lernappServerBaseURL}/personen-by-name/${personName}`;\n        #getPersonByGoogleIDURL = (google_user_id) => `${this.#lernappServerBaseURL}/personbygoogle/${google_user_id}`;\n        \n        //Gruppenbezogen\n        #getLerngruppenURL = () => `${this.#lernappServerBaseURL}/lerngruppen`;\n        #addLerngruppeURL = () => `${this.#lernappServerBaseURL}/lerngruppen`;\n        #getLerngruppeURL = (id) => `${this.#lernappServerBaseURL}/lerngruppen/${id}`;\n        #updateLerngruppeURL = (id) => `${this.#lernappServerBaseURL}/lerngruppen/${id}`;\n        #deleteLerngruppeURL = (id) => `${this.#lernappServerBaseURL}/lerngruppen/${id}`;\n        \n        //Profilbezogen\n        #getProfileURL = () => `${this.#lernappServerBaseURL}/profile`;\n        #addProfilURL = () => `${this.#lernappServerBaseURL}/profile`;\n        #getProfilURL = (id) => `${this.#lernappServerBaseURL}/profile/${id}`;\n        #updateProfilURL = (id) => `${this.#lernappServerBaseURL}/profile/${id}`;\n        //#getLernfaecherByProfilURL = (profilID) => `${this.#lernappServerBaseURL}/profil/${profilID}`;\n        #deleteProfilURL = (id) => `${this.#lernappServerBaseURL}/profile/${id}`;\n\n        //Lernvorliebenbezogen\n        #getLernvorliebenURL = (id) => `${this.#lernappServerBaseURL}/lernvorlieben/${id}`;\n        //#getLernvorliebenByProfilURL = () => `${this.#lernappServerBaseURL}/lervorlieben/${profilid}`;\n        #addLernvorliebenURL = () => `${this.#lernappServerBaseURL}/lernvorlieben`;\n        #updateLernvorliebenURL = (id) => `${this.#lernappServerBaseURL}/lernvorlieben/${id}`;\n        #deleteLernvorliebenURL = (id) => `${this.#lernappServerBaseURL}/lernvorlieben/${id}`;\n\n        //Vorschlagbezogen\n        #getVorschlaegeURL = (mainpersonID) => `${this.#lernappServerBaseURL}/vorschlaege/${mainpersonID}`;\n        //#getSelectedLernfach = () => `${this.#lernappServerBaseURL}`\n        #getVorschlaegeByPersonByLernfachURL = (mainpersonID, lernfachID) => `${this.#lernappServerBaseURL}/vorschlaege/${mainpersonID}/${lernfachID}`;\n\n        //Nachrichtenbezogen\n        #getNachrichtenURL = () => `${this.#lernappServerBaseURL}/nachrichten`;\n        #getNachrichtenByKonversationURL = (id) => `${this.#lernappServerBaseURL}/nachrichten/konversation/${id}`;\n        #addNachrichtURL = () => `${this.#lernappServerBaseURL}/nachrichten`;\n        #getNachrichtenByKonversationByPersonURL = (konversationID, personID) => `${this.#lernappServerBaseURL}/nachricht-by-konversation-by-person/${konversationID}/${personID}`;\n        #deleteNachrichtURL = (id) => `${this.#lernappServerBaseURL}/nachrichten/${id}`;\n        #deleteNachrichtenByKonversationURL = (konversationID) => `${this.#lernappServerBaseURL}/nachrichten/${konversationID}`;\n        #getNachrichtenByPersonURL = (personID) => `${this.#lernappServerBaseURL}/nachrichten/${personID}`;\n        #getNachrichtenByInhaltURL= (inhalt) => `${this.#lernappServerBaseURL}/nachrichten/${inhalt}`;\n        \n        //Konversationbezogen\n        #getKonversationenURL = () => `${this.#lernappServerBaseURL}/konversationen`;\n        #getKonversationURL = (id) => `${this.#lernappServerBaseURL}/konversationen/${id}`;\n        #getKonversationenByPersonURL = (personid) => `${this.#lernappServerBaseURL}/konversationen/${personid}`;\n        #setKonversationURL = (id) => `${this.#lernappServerBaseURL}/konversationen/${id}`;\n        #addKonversationURL = (id) => `${this.#lernappServerBaseURL}/konversationen/${id}`;\n        #deleteKonversationURL = (id) => `${this.#lernappServerBaseURL}/konversationen/${id}`;\n        #getKonversationByNameURL = (name) => `${this.#lernappServerBaseURL}/konversationen/${name}`;\n\n        //TeilnahmeChatbezogen\n        #getTeilnahmeChatURL = () => `${this.#lernappServerBaseURL}/teilnahmeChat`;\n        #getTeilnahmeChatByIdURL = (id) => `${this.#lernappServerBaseURL}/teilnahmeChat/${id}`;\n        #setTeilnahmeChatURL = (id) => `${this.#lernappServerBaseURL}/teilnahmeChat/${id}`;\n        #addTeilnahmeChatURL = (id) => `${this.#lernappServerBaseURL}/teilnahmeChat/${id}`;\n        #deleteTeilnahmeChatURL = (id) => `${this.#lernappServerBaseURL}/teilnahmeChat/${id}`;\n        #getTeilnahmeChatByStudentIdURL = (id) => `${this.#lernappServerBaseURL}/teilnehmer-by-student-id/${id}`;\n        #getTeilnahmeChatByKonversationIdURL = (id) => `${this.#lernappServerBaseURL}/teilnehmer-by-konversation-id/${id}`;\n\n        //TeilnahmeGruppebezogen\n        #getTeilnahmeGruppeURL = () => `${this.#lernappServerBaseURL}/teilnahmenGruppe`;\n        #addTeilnahmeGruppeURL = () => `${this.#lernappServerBaseURL}/teilnahmenGruppe`;\n        #getTeilnahmeGruppeByIdURL = (id) => `${this.#lernappServerBaseURL}/teilnahmenGruppe/${id}`;\n\n        //Personenbezogene\n        /**\n           * Gibt alle Personen als BO zurÃ¼ck\n           * \n           * @public\n           */\n        getPersonen() {\n          return this.#fetchAdvanced(this.#getPersonenURL()).then((responseJSON) => {\n            let personenBOs = PersonBO.fromJSON(responseJSON);\n            // console.info(customerBOs);\n            return new Promise(function (resolve) {\n              resolve(personenBOs);\n            })           \n          })\n        }\n        /**\n         * Adds a person and returns a Promise, which resolves to a new PersonBO object\n         *  \n         * @param {PersonBO} personBO to be added. The ID of the new customer is set by the backend\n         * @public\n         */\n        addPerson(personBO) {\n          return this.#fetchAdvanced(this.#addPersonURL(), {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json, text/plain',\n              'Content-type': 'application/json',\n            },\n            body: JSON.stringify(personBO)\n          }).then((responseJSON) => {\n            // We always get an array of CustomerBOs.fromJSON, but only need one object\n            let responsePersonBO = PersonBO.fromJSON(responseJSON)[0];\n            // console.info(accountBOs);\n            return new Promise(function (resolve) {\n              resolve(responsePersonBO);\n            })\n          })\n        }\n\n        /**\n         * Gibt eine Person mit einer bestimmten ID als BO zurÃ¼ck\n         * \n         * @param {Number} personID to be retrieved\n         * @public\n         */\n        getPerson(personID) {\n          return this.#fetchAdvanced(this.#getPersonURL(personID)).then((responseJSON) => {\n            // We always get an array of PersonBOs.fromJSON, but only need one object\n            let responsePersonBO = PersonBO.fromJSON(responseJSON)[0];\n            // console.info(responsePersonBO);\n            return new Promise(function (resolve) {\n              resolve(responsePersonBO);\n            })\n          })\n        }\n\n        /**\n         * Updated eine Person und gibt Promise zurÃ¼ck, resolves as PersonBO.\n         \n         */\n        updatePerson(id, name, vorname, semester, studiengang, alter, geschlecht, lerngruppe) {\n          return this.#fetchAdvanced(this.#updatePersonURL(id, name, vorname, semester, studiengang, alter, geschlecht, lerngruppe), {\n            method: 'PUT',\n            headers: {\n              'Accept': 'application/json, text/plain',\n              'Content-type': 'application/json',\n            }\n          })\n        }\n\n        /**\n         * Gibt eine Person mit einer bestimmten ID als BO zurÃ¼ck\n         * \n         * @param {Number} google_user_id to be retrieved\n         * @public\n         */\n        getPersonByGoogleID(google_user_id) {\n          return this.#fetchAdvanced(this.#getPersonByGoogleIDURL(google_user_id)).then((responseJSON) => {\n            // We always get an array of PersonBOs.fromJSON, but only need one object\n            let personBO = PersonBO.fromJSON(responseJSON);\n            console.info(personBO);\n            return new Promise(function (resolve){\n                resolve(personBO)\n            })\n          })\n        }\n \n        /**\n         * Gibt Promise zurÃ¼ck\n         * \n         * @param {Number} personID to be deleted\n         * @public\n         */\n        deletePerson(personID) {\n          return this.#fetchAdvanced(this.#deletePersonURL(personID), {\n            method: 'DELETE'\n          }).then((responseJSON) => {\n            // We always get an array of PersonBOs.fromJSON\n            let responsePersonBO = PersonBO.fromJSON(responseJSON)[0];\n            // console.info(personBOs);\n            return new Promise(function (resolve) {\n              resolve(responsePersonBO);\n            })\n          })\n        }\n\n        /**\n         * Gibt Promise zurÃ¼ck\n         * \n         * @param {Number} personID to be deleted\n         * @public\n         */\n        searchPerson(personName) {\n          return this.#fetchAdvanced(this.#searchPersonURL(personName)).then((responseJSON) => {\n            let personBOs = PersonBO.fromJSON(responseJSON);\n            // console.info(personBOs);\n            return new Promise(function (resolve) {\n              resolve(personBOs);\n            })\n          })\n        }\n        //Lerngruppenbezogene\n        /**\n           * Gibt alle Lerngruppen als BO zurÃ¼ck\n           * \n           * @public\n           */\n          getLerngruppen() {\n            return this.#fetchAdvanced(this.#getLerngruppenURL()).then((responseJSON) => {\n              let lerngruppenBOs = LerngruppeBO.fromJSON(responseJSON);\n              // console.info(customerBOs);\n              return new Promise(function (resolve) {\n                resolve(lerngruppenBOs);\n              })           \n            })\n          }\n          /**\n           * Adds a lerngruppe and returns a Promise, which resolves to a new LerngruppeBO object\n           *  \n           * @param {LerngruppeBO} lerngruppeBO to be added. The ID of the new lerngruppe is set by the backend\n           * @public\n           */\n          addLerngruppe(lerngruppeBO) {\n            return this.#fetchAdvanced(this.#addLerngruppeURL(), {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json, text/plain',\n                'Content-type': 'application/json',\n              },\n              body: JSON.stringify(lerngruppeBO)\n            }).then((responseJSON) => {\n              // We always get an array of LerngruppeBOs.fromJSON, but only need one object\n              let responseLerngruppeBO = LerngruppeBO.fromJSON(responseJSON)[0];\n              // console.info(LerngruppeBOs);\n              return new Promise(function (resolve) {\n                resolve(responseLerngruppeBO);\n              })\n            })\n          }\n  \n          /**\n           * Gibt eine Lerngruppe mit einer bestimmten ID als BO zurÃ¼ck\n           * \n           * @param {Number} lerngruppeID to be retrieved\n           * @public\n           */\n          getLerngruppe(lerngruppeID) {\n            return this.#fetchAdvanced(this.#getLerngruppeURL(lerngruppeID)).then((responseJSON) => {\n              // We always get an array of LerngruppeBOs.fromJSON, but only need one object\n              let responseLerngruppeBO = LerngruppeBO.fromJSON(responseJSON)[0];\n              // console.info(responseLerngruppeBO);\n              return new Promise(function (resolve) {\n                resolve(responseLerngruppeBO);\n              })\n            })\n          }\n  \n          /**\n           * Updated eine Lerngruppe und gibt Promise zurÃ¼ck, resolves as LerngruppeBO.\n           * \n           * @param {LerngruppeBO} lerngruppeBO to be updated\n           * @public\n           */\n          updateLerngruppe(lerngruppeBO) {\n            return this.#fetchAdvanced(this.#updateLerngruppeURL(lerngruppeBO.getID()), {\n              method: 'PUT',\n              headers: {\n                'Accept': 'application/json, text/plain',\n                'Content-type': 'application/json',\n              },\n              body: JSON.stringify(lerngruppeBO)\n            }).then((responseJSON) => {\n              // We always get an array of LerngruppeBOs.fromJSON\n              let responseLerngruppeBO = LerngruppeBO.fromJSON(responseJSON)[0];\n              // console.info(LerngruppeBOs);\n              return new Promise(function (resolve) {\n                resolve(responseLerngruppeBO);\n              })\n            })\n          }\n   \n          /**\n           * Gibt Promise zurÃ¼ck\n           * \n           * @param {Number} lerngruppeID to be deleted\n           * @public\n           */\n          deleteLerngruppe(lerngruppeID) {\n            return this.#fetchAdvanced(this.#deleteLerngruppeURL(lerngruppeID), {\n              method: 'DELETE'\n            }).then((responseJSON) => {\n              // We always get an array of LerngruppeBOs.fromJSON\n              let responseLerngruppeBO = LerngruppeBO.fromJSON(responseJSON)[0];\n              // console.info(LerngruppeBOs);\n              return new Promise(function (resolve) {\n                resolve(responseLerngruppeBO);\n              })\n            })\n          }\n\n\n        //Profilbezogene\n        /**\n           * Gibt alle Profile als BO zurÃ¼ck\n           * \n           * @public\n           */\n          getProfile() {\n            return this.#fetchAdvanced(this.#getProfileURL()).then((responseJSON) => {\n              let profileBOs = ProfilBO.fromJSON(responseJSON);\n              // console.info(profilBOs);\n              return new Promise(function (resolve) {\n                resolve(profileBOs);\n              })           \n            })\n          }\n        /**\n         * Adds a person and returns a Promise, which resolves to a new PersonBO object\n         *  \n         * @param {PersonBO} personBO to be added. The ID of the new customer is set by the backend\n         * @public\n         */\n        addProfil(profilBO) {\n          return this.#fetchAdvanced(this.#addProfilURL(), {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json, text/plain',\n              'Content-type': 'application/json',\n            },\n            body: JSON.stringify(profilBO)\n          }).then((responseJSON) => {\n            // We always get an array of ProfilBOs.fromJSON, but only need one object\n            let responseProfilBO = ProfilBO.fromJSON(responseJSON)[0];\n            // console.info(accountBOs);\n            return new Promise(function (resolve) {\n              resolve(responseProfilBO);\n            })\n          })\n        }\n        /**\n         * Gibt ein Profil-Objekt zurÃ¼ck\n         * @param {Number} profilID to be retrieved\n         * @public\n          */\n         getProfil(profilID) {\n          return this.#fetchAdvanced(this.#getProfilURL(profilID,{method: 'GET'})).then((responseJSON) => {\n            let profilBOs = ProfilBO.fromJSON(responseJSON);\n            //console.info(ProfilBOs)\n            return new Promise(function (resolve) {\n              resolve(profilBOs);\n            })\n          })\n        }\n\n        /**\n         * Updated ein Profil und gibt Promise zurÃ¼ck, resolves as ProfilBO.\n         * \n         * @param {ProfilBO} profilBO to be updated\n         * @public\n         */\n        updateProfil(profilBO) {\n          return this.#fetchAdvanced(this.#updateProfilURL(profilBO.getID()), {\n            method: 'PUT',\n            headers: {\n              'Accept': 'application/json, text/plain',\n              'Content-type': 'application/json',\n            },\n            body: JSON.stringify(profilBO)\n          }).then((responseJSON) => {\n            // We always get an array of ProfilBOs.fromJSON\n            let responseProfilBO = ProfilBO.fromJSON(responseJSON)[0];\n            // console.info(ProfilBOs);\n            return new Promise(function (resolve) {\n              resolve(responseProfilBO);\n            })\n          })\n        }\n        /**\n         * Gibt Promise zurÃ¼ck\n         * \n         * @param {Number} profilID to be deleted\n         * @public\n         */\n        deleteProfil(profilID) {\n          return this.#fetchAdvanced(this.#deleteProfilURL(profilID), {\n            method: 'DELETE'\n          }).then((responseJSON) => {\n            // We always get an array of ProfilBOs.fromJSON\n            let responseProfilBO = ProfilBO.fromJSON(responseJSON)[0];\n            // console.info(profilBOs);\n            return new Promise(function (resolve) {\n              resolve(responseProfilBO);\n            })\n          })\n        }\n\n        //Lernvorliebenbezogene\n\n        /**\n         * Gibt eine Lernvorliebe mit einer bestimmten ID als BO zurÃ¼ck\n         * \n         * @param {Number} lernvorliebenID to be retrieved\n         * @public\n         */\n        getLernvorlieben(lernvorliebenID) {\n          return this.#fetchAdvanced(this.#getLernvorliebenURL(lernvorliebenID)).then((responseJSON) => {\n            // We always get an array of LernvorliebenBOs.fromJSON, but only need one object\n            let responseLernvorliebenBO = LernvorliebenBO.fromJSON(responseJSON)[0];\n            // console.info(responseLernvorliebenBO);\n            return new Promise(function (resolve) {\n              resolve(responseLernvorliebenBO);\n            })\n          })\n        }\n        /**\n         * Adds a lernvorlieben and returns a Promise, which resolves to a new LernvorliebenBO object\n         *  \n         * @param {LernvorliebenBO} lernvorliebenBO to be added. The ID of the new lernvorliebe is set by the backend\n         * @public\n         */\n        addLernvorlieben(lernvorliebenBO) {\n          return this.#fetchAdvanced(this.#addLernvorliebenURL(), {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json, text/plain',\n              'Content-type': 'application/json',\n            },\n            body: JSON.stringify(lernvorliebenBO)\n          }).then((responseJSON) => {\n            // We always get an array of LernvorliebenBOs.fromJSON, but only need one object\n            let responseLernvorliebenBO = LernvorliebenBO.fromJSON(responseJSON)[0];\n            // console.info(LernvorliebenBOs);\n            return new Promise(function (resolve) {\n              resolve(responseLernvorliebenBO);\n            })\n          })\n        }\n        /**\n         * Gibt Promise zurÃ¼ck\n         * \n         * @param {Number} lernvorliebenID to be deleted\n         * @public\n         */\n        deleteLernvorlieben(lernvorliebenID) {\n          return this.#fetchAdvanced(this.#deleteLernvorliebenURL(lernvorliebenID), {\n            method: 'DELETE'\n          }).then((responseJSON) => {\n            // We always get an array of LernvorliebenBOs.fromJSON\n            let responseLernvorliebenBO = LernvorliebenBO.fromJSON(responseJSON)[0];\n            // console.info(LernvorliebenBOs);\n            return new Promise(function (resolve) {\n              resolve(responseLernvorliebenBO);\n            })\n          })\n        }\n\n        //Vorschlagbezogene\n        /**\n         * Gibt alle Vorschlaege zurÃ¼ck\n         * @param {Number} mainpersonID to be retrieved\n         * @param {Number} lernfachID to be retrieved\n         * @public\n          */\n        getVorschlaegeByPersonByLernfach(mainpersonID, lernfachID) {\n          return this.#fetchAdvanced(this.#getVorschlaegeByPersonByLernfachURL(mainpersonID, lernfachID, {method: 'GET'})).then((responseJSON) => {\n            let vorschlaegeBOs = VorschlagBO.fromJSON(responseJSON);\n            //console.info(vorschlaegeBOs)\n            return new Promise(function (resolve) {\n              resolve(vorschlaegeBOs);\n            })\n          })\n        }\n\n      \n        //Nachrichtbezogene\n        /** \n        * Gibt alle Nachrichten einer Person zurÃ¼ck\n         * @param {Number} personID to be retrieved\n         * @public\n          */\n\n        getNachrichten(personID) {\n          return this.#fetchAdvanced(this.#getNachrichtenByPersonURL(personID,{method: 'GET'})).then((responseJSON) => {\n            let nachrichtenBOs = NachrichtBO.fromJSON(responseJSON);\n            //console.info(nachrichtenBOs)\n            return new Promise(function (resolve) {\n              resolve(nachrichtenBOs);\n            })\n          })\n        }\n\n       /**\n         * Adds a Nachricht and returns a Promise, which resolves to a new NachrichtenBO object\n         *  \n         * @param {NachrichtBO} nachrichtBO to be added. The ID of the new nachricht is set by the backend\n         * @public\n         */\n\n        addNachricht(nachrichtBO) {\n          return this.#fetchAdvanced(this.#addNachrichtURL(), {\n          method: 'POST',\n            headers: {\n              'Accept': 'application/json, text/plain',\n              'Content-type': 'application/json',\n            },\n            body: JSON.stringify(nachrichtBO)\n          }).then((responseJSON) => {\n            // We always get an array of NachrichtBOs.fromJSON, but only need one object\n            let responseNachrichtBO = NachrichtBO.fromJSON(responseJSON)[0];\n            // console.info(NachrichtBOs);\n            return new Promise(function (resolve) {\n              resolve(responseNachrichtBO);\n            })\n          })\n        }\n\n         /**\n           * Gibt alle Nachrichten als BO zurÃ¼ck\n           * \n           * @public\n           */\n\n        getNachrichten() {\n          return this.#fetchAdvanced(this.#getNachrichtenURL()).then((responseJSON) => {\n            let nachrichtenBOs = NachrichtBO.fromJSON(responseJSON);\n            return new Promise(function (resolve) {\n              resolve(nachrichtenBOs);\n            })           \n          })\n        }\n\n         /** \n        * gibt die Nachrichten mit der bestimmten konversationsID als BO zurÃ¼ck\n         * @param {Number} konversationID to be retrieved\n         * @public\n          */\n    \n        getNachrichtenByKonversation(konversationID){\n\t\t      return this.#fetchAdvanced(this.#getNachrichtenByKonversationURL(konversationID)).then((responseJSON) => {\n\t\t\t      let nachrichtenBOs = NachrichtBO.fromJSON(responseJSON);\n\t\t\t      //console.info(nachrichtenBOs)\n\t\t\t      return new Promise(function (resolve){\n\t\t\t  \t    resolve(nachrichtenBOs)\n\t\t\t      })\n\t\t      })\n\t      }\n\n\n          /**\n         * Gibt Promise zurÃ¼ck, LÃ¶scht Nachricht mit bestimmter ID\n         * \n         * @param {Number} id to be deleted\n         * @public\n         */\n\n\n        deleteNachricht(id) {\n          return this.#fetchAdvanced(this.#deleteNachrichtURL(id), {\n            method: 'DELETE'\n          }).then((responseJSON) => {\n            // We always get an array of NachrichtenBOs.fromJSON\n            let responseNachrichtBO = NachrichtBO.fromJSON(responseJSON)[0];\n            // console.info(NachrichtBOs);\n            return new Promise(function (resolve) {\n              resolve(responseNachrichtBO);\n            })\n          })\n        }\n\n         /** \n         * gibt die Nachrichten mit der bestimmten konversationsID und PersonID als BO zurÃ¼ck\n         * @param {Number} konversationId to be retrieved\n         * @param {Number} personID \n         * @public\n         */\n    \n          getNachrichtenByKonversationByPerson(konversationID, personID) {\n            return this.#fetchAdvanced(this.#getNachrichtenByKonversationByPersonURL(konversationID, personID, {method: 'GET'})).then((responseJSON) => {\n              let nachrichtenBOs = NachrichtBO.fromJSON(responseJSON);\n              //console.info(nachrichtenBOs)\n              return new Promise(function (resolve) {\n                resolve(nachrichtenBOs);\n              })\n            })\n          }\n \n          /** \n           * lÃ¶scht Nachrichten einer konversation\n           * @param {Number} konversationId to be retrieved\n           * @param {Number} personID \n           * @public\n           */\n      \n          deleteNachrichtenByKonversation(konversationID) {\n            return this.#fetchAdvanced(this.#deleteNachrichtenByKonversationURL(konversationID, {method: 'DELETE'})).then((responseJSON) => {\n              let nachrichtenBOs = NachrichtBO.fromJSON(responseJSON);\n              //console.info(nachrichtenBOs)\n              return new Promise(function (resolve) {\n                resolve(nachrichtenBOs);\n              })\n            })\n          }\n\n           /** \n          * gibt die Nachrichten mit dem bestimmten Inhalt als BO zurÃ¼ck\n          * @param {String} inhalt to be retrieved\n          * @public\n          */\n    \n        getNachrichtByInhalt(inhalt){\n          return this.#fetchAdvanced(this.#getNachrichtenByInhaltURL(inhalt)).then((responseJSON) => {\n          let nachrichtenBOs = NachrichtBO.fromJSON(responseJSON);\n          console.info(nachrichtenBOs)\n          return new Promise(function (resolve){\n            resolve(nachrichtenBOs)\n             })\n           })\n          }\n\n          //Konversations bezogen\n\n           /**\n           * Gibt alle Konversationen als BO zurÃ¼ck\n           * \n           * @public\n           */\n\n        getKonversationen() {\n          return this.#fetchAdvanced(this.#getKonversationenURL()).then((responseJSON) => {\n            let konversationenBOs = KonversationBO.fromJSON(responseJSON);\n            return new Promise(function (resolve) {\n              resolve(konversationenBOs);\n            })           \n          })\n        }\n\n         /** \n        * gibt die Konversation mit der bestimmten ID als BO zurÃ¼ck\n         * @param {Number} id to be retrieved\n         * @public\n          */\n    \n          getKonversation(id){\n            return this.#fetchAdvanced(this.#getKonversationURL(id)).then((responseJSON) => {\n              let konversationenBOs = KonversationBO.fromJSON(responseJSON);\n              //console.info(konversationenBOs)\n              return new Promise(function (resolve){\n                resolve(konversationenBOs)\n              })\n            })\n          }\n\n           /**\n           * Gibt alle Konversationen einer Person als BO zurÃ¼ck\n           * @param {Number} personid to be retrieved\n           * @public\n           */\n\n          getKonversationenByPerson(personid) {\n            return this.#fetchAdvanced(this.#getKonversationenByPersonURL(personid)).then((responseJSON) => {\n              let konversationenBOs = KonversationBO.fromJSON(responseJSON);\n              return new Promise(function (resolve) {\n                resolve(konversationenBOs);\n              })           \n            })\n          }\n          /** \n          * Adds a KOnversation and returns a Promise, which resolves to a new KonversationBO object\n          *  \n          * @param {KonversationBO} konversationBO to be added. The ID of the new nachricht is set by the backend\n          * @public\n          */\n \n         addKonversation(konversationBO) {\n           return this.#fetchAdvanced(this.#addKonversationURL(), {\n           method: 'POST',\n             headers: {\n               'Accept': 'application/json, text/plain',\n               'Content-type': 'application/json',\n             },\n             body: JSON.stringify(konversationBO)\n           }).then((responseJSON) => {\n             // We always get an array of NachrichtBOs.fromJSON, but only need one object\n             let responseKonversationBO = KonversationBO.fromJSON(responseJSON)[0];\n             // console.info(KonversationBOs);\n             return new Promise(function (resolve) {\n               resolve(responseKonversationBO);\n             })\n           })\n         }\n\n          /**\n         * Gibt Promise zurÃ¼ck, LÃ¶scht Konversation mit bestimmter ID\n         * \n         * @param {Number} id to be deleted\n         * @public\n         */\n\n\n        deleteKonversation(id) {\n          return this.#fetchAdvanced(this.#deleteKonversationURL(id), {\n            method: 'DELETE'\n          }).then((responseJSON) => {\n            // We always get an array of KonversationBOs.fromJSON\n            let responseKonversationBO = KonversationBO.fromJSON(responseJSON)[0];\n            // console.info(KonversationBOs);\n            return new Promise(function (resolve) {\n              resolve(responseKonversationBO);\n            })\n          })\n        }\n\n         /**\n         * Gibt Promise zurÃ¼ck, LÃ¶scht Nachricht mit bestimmter ID\n         * \n         * @param {String} name to be retrived \n         * @public\n         */\n\n\n          getKonversationByName(name){\n            return this.#fetchAdvanced(this.#getKonversationByNameURL(name)).then((responseJSON) => {\n            let konversationBOs = KonversationBO.fromJSON(responseJSON);\n            console.info(konversationBOs)\n            return new Promise(function (resolve){\n              resolve(konversationBOs)\n               })\n             })\n            }\n\n          //setzt den Zustand einer Konversation mit der bestimmten ID auf einen neuen Zustand\n\t        setKonversation(id) { \n\t\t      //immer Zustand 1 holen\n\t\t        return this.#fetchAdvanced(this.#setKonversationURL(id),{method: 'PUT'}).then((responseJSON) => {\n\t\t\t      let konversationBOs = KonversationBO.fromJSON(responseJSON);\n\t\t\t      console.info(konversationBOs)\n\t\t\t      return new Promise(function (resolve){\n\t\t\t      \tresolve(konversationBOs);\n\t\t           \t})\n\t        \t  })\n          \t}\n\n             //Teilnahme Chat bezogene\n\n          /**\n           * Gibt alle Teilnahmen eines Chats als BO zurÃ¼ck\n           * \n           * @public\n           */\n\n           getTeilnahmeChat() {\n            return this.#fetchAdvanced(this.#getTeilnahmeChatURL()).then((responseJSON) => {\n            let teilnahmechatBOs = TeilnahmeChatBO.fromJSON(responseJSON);\n            return new Promise(function (resolve) {\n              resolve(teilnahmechatBOs);\n               })           \n              })\n            }\n\n          /** \n           * gibt die Teilnehmer mit der bestimmten ID als BO zurÃ¼ck\n           * @param {Number} id to be retrieved\n           * @public\n          */\n  \n          getTeilnahmeChatById(id){\n            return this.#fetchAdvanced(this.#getTeilnahmeChatByIdURL(id)).then((responseJSON) => {\n            let teilnahmechatBOs = TeilnahmeChatBO.fromJSON(responseJSON);\n            //console.info(teilnahmechatBOs)\n            return new Promise(function (resolve){\n              resolve(teilnahmechatBOs)\n               })\n             })\n            }\n\n            /**\n             * setzt den Zustand einer Konversation mit der bestimmten ID auf einen neuen Zustand\n             * \n             * @param {Number} id to be deleted\n             * @public\n             */\n\n             setTeilnahmeChat(id) { \n             //immer Zustand 1 holen\n               return this.#fetchAdvanced(this.#setTeilnahmeChatURL(id),{method: 'PUT'}).then((responseJSON) => {\n               let teilnahmechatBOs = TeilnahmeChatBO.fromJSON(responseJSON);\n               console.info(teilnahmechatBOs)\n               return new Promise(function (resolve){\n                 resolve(teilnahmechatBOs);\n                 })\n                })\n              }\n\n            /** \n             * Adds a Teilnahme and returns a Promise, which resolves to a new TeilnahmeChatBO object\n             *  \n             * @param {TeilnahmeChatBO} teilnahmechatBO to be added. The ID of the new teilnahemChat is set by the backend\n             * @public\n            */\n\n            addTeilnahmeChat(teilnahmechatBO) {\n              return this.#fetchAdvanced(this.#addTeilnahmeChatURL(), {\n               method: 'POST',\n               headers: {\n                  'Accept': 'application/json, text/plain',\n                  'Content-type': 'application/json',\n                 },\n               body: JSON.stringify(teilnahmechatBO)\n               }).then((responseJSON) => {\n               // We always get an array of TeilnahmeChatBOs.fromJSON, but only need one object\n               let responseTeilnahmeChatBO = TeilnahmeChatBO.fromJSON(responseJSON)[0];\n               // console.info(TeilnahmeChatBOs);\n                 return new Promise(function (resolve) {\n                  resolve(responseTeilnahmeChatBO);\n                     })\n                   })\n               }\n\n             /** \n             * lÃ¶scht Nachrichten einer konversation\n             * @param {Number} id to be retrieved\n             * @public\n             */\n    \n            deleteTeilnahmeChat(id) {\n              return this.#fetchAdvanced(this.#deleteTeilnahmeChatURL(id), {\n                method: 'DELETE'\n                }).then((responseJSON) => {\n                // We always get an array of TeilnahmeChatBOs.fromJSON\n                let responseTeilnahmeChatBO = TeilnahmeChatBO.fromJSON(responseJSON)[0];\n                // console.info(KonversationBOs);\n                return new Promise(function (resolve) {\n                  resolve(responseTeilnahmeChatBO);\n                })\n              })\n            }\n\n             /** \n              * Gibt alle TeilnahmenChat einer Person zurÃ¼ck\n              * @param {Number} personid to be retrieved\n              * @public\n              */\n\n              getTeilnahmeChatByStudentId(personid) {\n                return this.#fetchAdvanced(this.#getTeilnahmeChatByStudentIdURL(personid,{method: 'GET'})).then((responseJSON) => {\n                let teilnahmechatBOs = TeilnahmeChatBO.fromJSON(responseJSON);\n                //console.info(teilnahmechatBOs)\n                return new Promise(function (resolve) {\n                  resolve(teilnahmechatBOs);\n                  })\n                })\n              }\n              \n             /** \n              * gibt die Nachrichten mit der bestimmten konversationsID als BO zurÃ¼ck\n              * @param {Number} id to be retrieved\n              * @public\n             */\n  \n            getTeilnahmeChatByKonversationId(id){\n               return this.#fetchAdvanced(this.#getTeilnahmeChatByKonversationIdURL(id)).then((responseJSON) => {\n               let teilnahmechatBOs = TeilnahmeChatBO.fromJSON(responseJSON);\n              //console.info(teilnahmechatBOs)\n              return new Promise(function (resolve){\n               resolve(teilnahmechatBOs)\n                })\n              })\n             }\n\n            //Teilnahme Gruppe bezogen\n\n            /**\n           * Gibt alle Teilnahmen einer Gruppe als BO zurÃ¼ck\n           * \n           * @public\n           */\n\n           getTeilnahmeGruppe() {\n            return this.#fetchAdvanced(this.#getTeilnahmeGruppeURL()).then((responseJSON) => {\n            let teilnahmegruppeBOs = TeilnahmeGruppeBO.fromJSON(responseJSON);\n            return new Promise(function (resolve) {\n              resolve(teilnahmegruppeBOs);\n               })           \n              })\n            }\n\n            /** \n             * Adds a Teilnahme and returns a Promise, which resolves to a new TeilnahmeGruppeBO object\n             *  \n             * @param {TeilnahmeGruppeBO} teilnahmegruppeBO to be added. The ID of the new teilnahemgruppe is set by the backend\n             * @public\n            */\n\n             addTeilnahmeGruppe(teilnahmegruppeBO) {\n              return this.#fetchAdvanced(this.#addTeilnahmeGruppeURL(), {\n               method: 'POST',\n               headers: {\n                  'Accept': 'application/json, text/plain',\n                  'Content-type': 'application/json',\n                 },\n               body: JSON.stringify(teilnahmegruppeBO)\n               }).then((responseJSON) => {\n               // We always get an array of TeilnahmeGruppeBOs.fromJSON, but only need one object\n               let responseTeilnahmeGruppeBO = TeilnahmeGruppeBO.fromJSON(responseJSON)[0];\n               // console.info(TeilnahmeGruppeBOs);\n                 return new Promise(function (resolve) {\n                  resolve(responseTeilnahmeGruppeBO);\n                     })\n                   })\n               }\n\n              /** \n               * gibt die Teilnehmer mit der bestimmten ID als BO zurÃ¼ck\n               * @param {Number} id to be retrieved\n               * @public\n              */\n  \n              getTeilnahmeGruppeById(id){\n                return this.#fetchAdvanced(this.#getTeilnahmeGruppeByIdURL(id)).then((responseJSON) => {\n                let teilnahmegruppeBOs = TeilnahmeGruppeBO.fromJSON(responseJSON);\n                //console.info(teilnahmegruppeBOs)\n                return new Promise(function (resolve){\n                 resolve(teilnahmegruppeBOs)\n                  })\n                })\n              }\n\n\n\n\n\n\n\n\n\n}","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/pages/SignIn.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/LoadingProgress.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ContextErrorMessage.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/pages/About.js",["117"],"import React from 'react'\nimport { makeStyles, Paper, Typography, Link } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1)\n  },\n  content: {\n    margin: theme.spacing(1),\n  }\n}));\n\n/**\n * Shows the about page with the impressum\n */\n\n\nfunction About() {\n\n    const classes = useStyles();\n  \n    return (\n      <Paper elevation={0} className={classes.root}>\n        <div className={classes.content}>\n          <Typography variant='h6'>\n            App zum Auffinden von Lernpartnern\n          </Typography>\n          <Typography variant='body2'>\n            Â© Hochschule der Medien 2020, all rights reserved.\n          </Typography>\n        </div>\n      </Paper>\n    )\n  }\n  \n  export default About;","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/ProfilBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/LerngruppeBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/VorschlagBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernvorliebenBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/NachrichtBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeChatBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/PersonBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/KonversationBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeGruppeBO.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/BusinessObject.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/NamedBusinessObject.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/layout/Header.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfileDropDown.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/MeinProfil.js",["118"],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/api/index.js",[],"/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppeForm.js",["119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Paper, makeStyles, Link, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, InputAdornment, Grid, Typography } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { TeachingbeeAPI, GroupBO } from '../../api';\n\n//import {LernpartnerAPI} from '../../api';\n\nimport { withRouter } from 'react-router-dom';\nimport ContextErrorMessage from './ContextErrorMessage';\nimport LoadingProgress from './LoadingProgress';\n//import ProfilBO from '../../api/ProfilBO';\n\n\nclass GruppeForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            gruppenName: null,\n            gruppenNameValidationFailed: null,\n            gruppenNameEdited: null,\n            addingInProgress: false,\n            updatingInProgress: false,\n            addingError: null,\n            updatingError: null\n\n        };\n\n        // save this state for canceling\n        this.baseState = this.state;\n    }\n\n\n  /** Renders the component */\n  render() {\n    const { classes } = this.props;\n    //const { gruppenName, gruppenNameValidationFailed, gruppenNameEdited, addingInProgress, addingError,\n    //updatingInProgress, updatingError } = this.state;\n\n    return (\n        <Paper className={classes.root}>\n        <div className={classes.content}>\n          <Typography variant='h6'>\n            Gruppennprofile\n          </Typography>\n        </div>\n      </Paper>\n    );\n  }\n}\n\n/** Component specific styles */\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n\n  content: {\n    margin: theme.spacing(1),\n    }\n});\n\nexport default withStyles(styles)(GruppeForm);","/Users/cassandrakonitzer/Documents/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/RegistrierungForm.js",["138","139"],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"148","line":13,"column":8,"nodeType":"146","messageId":"147","endLine":13,"endColumn":25},{"ruleId":"144","severity":1,"message":"149","line":15,"column":8,"nodeType":"146","messageId":"147","endLine":15,"endColumn":19},{"ruleId":"150","severity":1,"message":"151","line":133,"column":7,"nodeType":"152","messageId":"153","endLine":133,"endColumn":26},{"ruleId":"154","severity":1,"message":"155","line":554,"column":9,"nodeType":"156","messageId":"157","endLine":561,"endColumn":10},{"ruleId":"144","severity":1,"message":"158","line":2,"column":41,"nodeType":"146","messageId":"147","endLine":2,"endColumn":45},{"ruleId":null,"fatal":true,"severity":2,"message":"159","line":175,"column":56},{"ruleId":"144","severity":1,"message":"160","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":17},{"ruleId":"144","severity":1,"message":"161","line":3,"column":29,"nodeType":"146","messageId":"147","endLine":3,"endColumn":39},{"ruleId":"144","severity":1,"message":"158","line":3,"column":41,"nodeType":"146","messageId":"147","endLine":3,"endColumn":45},{"ruleId":"144","severity":1,"message":"162","line":3,"column":47,"nodeType":"146","messageId":"147","endLine":3,"endColumn":53},{"ruleId":"144","severity":1,"message":"163","line":3,"column":55,"nodeType":"146","messageId":"147","endLine":3,"endColumn":65},{"ruleId":"144","severity":1,"message":"164","line":3,"column":67,"nodeType":"146","messageId":"147","endLine":3,"endColumn":73},{"ruleId":"144","severity":1,"message":"165","line":3,"column":75,"nodeType":"146","messageId":"147","endLine":3,"endColumn":86},{"ruleId":"144","severity":1,"message":"166","line":3,"column":88,"nodeType":"146","messageId":"147","endLine":3,"endColumn":101},{"ruleId":"144","severity":1,"message":"167","line":3,"column":103,"nodeType":"146","messageId":"147","endLine":3,"endColumn":120},{"ruleId":"144","severity":1,"message":"168","line":3,"column":122,"nodeType":"146","messageId":"147","endLine":3,"endColumn":135},{"ruleId":"144","severity":1,"message":"169","line":3,"column":137,"nodeType":"146","messageId":"147","endLine":3,"endColumn":146},{"ruleId":"144","severity":1,"message":"170","line":3,"column":148,"nodeType":"146","messageId":"147","endLine":3,"endColumn":162},{"ruleId":"144","severity":1,"message":"171","line":3,"column":164,"nodeType":"146","messageId":"147","endLine":3,"endColumn":168},{"ruleId":"144","severity":1,"message":"172","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":17},{"ruleId":"144","severity":1,"message":"173","line":5,"column":10,"nodeType":"146","messageId":"147","endLine":5,"endColumn":24},{"ruleId":"144","severity":1,"message":"174","line":5,"column":26,"nodeType":"146","messageId":"147","endLine":5,"endColumn":33},{"ruleId":"144","severity":1,"message":"175","line":9,"column":10,"nodeType":"146","messageId":"147","endLine":9,"endColumn":20},{"ruleId":"144","severity":1,"message":"176","line":10,"column":8,"nodeType":"146","messageId":"147","endLine":10,"endColumn":27},{"ruleId":"144","severity":1,"message":"177","line":11,"column":8,"nodeType":"146","messageId":"147","endLine":11,"endColumn":23},{"ruleId":"144","severity":1,"message":"178","line":3,"column":123,"nodeType":"146","messageId":"147","endLine":3,"endColumn":127},{"ruleId":"144","severity":1,"message":"179","line":168,"column":32,"nodeType":"146","messageId":"147","endLine":168,"endColumn":45},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'RegistrierungForm' is defined but never used.","'GruppenForm' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-dupe-class-members","Duplicate name 'getNachrichten'.","MethodDefinition","unexpected","'Link' is defined but never used.","Parsing error: Identifier 'showRegistrierungForm' has already been declared.\n\n\u001b[0m \u001b[90m 173 |\u001b[39m       \u001b[36mconst\u001b[39m { classes \u001b[33m,\u001b[39m currentPerson\u001b[33m,\u001b[39m showRegistrierungForm } \u001b[33m=\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mprops\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 174 |\u001b[39m       \u001b[90m// Use the states customer\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 175 |\u001b[39m       \u001b[36mconst\u001b[39m { personProfil\u001b[33m,\u001b[39m personName\u001b[33m,\u001b[39m personVorname\u001b[33m,\u001b[39m showRegistrierungForm\u001b[33m,\u001b[39m personSemester\u001b[33m,\u001b[39m personStudiengang\u001b[33m,\u001b[39m personLernfaecher\u001b[33m,\u001b[39m personLernvorlieben\u001b[33m,\u001b[39m loadingInProgress\u001b[33m,\u001b[39m error} \u001b[33m=\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mstate\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m     |\u001b[39m                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 176 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 177 |\u001b[39m       \u001b[90m// console.log(this.props);\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 178 |\u001b[39m       \u001b[36mreturn\u001b[39m (\u001b[0m","'PropTypes' is defined but never used.","'makeStyles' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogActions' is defined but never used.","'TextField' is defined but never used.","'InputAdornment' is defined but never used.","'Grid' is defined but never used.","'CloseIcon' is defined but never used.","'TeachingbeeAPI' is defined but never used.","'GroupBO' is defined but never used.","'withRouter' is defined but never used.","'ContextErrorMessage' is defined but never used.","'LoadingProgress' is defined but never used.","'Card' is defined but never used.","'currentPerson' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/index.js":"1","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/App.js":"2","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/firebaseconfig.js":"3","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/Theme.js":"4","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernpartnerAPI.js":"5","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/pages/About.js":"6","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/pages/SignIn.js":"7","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/LoadingProgress.js":"8","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ContextErrorMessage.js":"9","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/layout/Header.js":"10","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/PersonBO.js":"11","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/VorschlagBO.js":"12","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernvorliebenBO.js":"13","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/LerngruppeBO.js":"14","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/NachrichtBO.js":"15","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/ProfilBO.js":"16","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/KonversationBO.js":"17","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeGruppeBO.js":"18","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeChatBO.js":"19","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfileDropDown.js":"20","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/NamedBusinessObject.js":"21","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/BusinessObject.js":"22","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/index.js":"23","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/MeinProfil.js":"24","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/VorschlagListeEintrag.js":"25","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/Profil.js":"26","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppeForm.js":"27","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/RegistrierungForm.js":"28"},{"size":146,"mtime":1620224527838,"results":"29","hashOfConfig":"30"},{"size":6176,"mtime":1624392757914,"results":"31","hashOfConfig":"30"},{"size":579,"mtime":1624106011963,"results":"32","hashOfConfig":"30"},{"size":1706,"mtime":1623504199816,"results":"33","hashOfConfig":"30"},{"size":38162,"mtime":1624392757916,"results":"34","hashOfConfig":"30"},{"size":844,"mtime":1624260518669,"results":"35","hashOfConfig":"30"},{"size":1816,"mtime":1623504199846,"results":"36","hashOfConfig":"30"},{"size":862,"mtime":1622130118194,"results":"37","hashOfConfig":"30"},{"size":2113,"mtime":1622130118194,"results":"38","hashOfConfig":"30"},{"size":1582,"mtime":1624392757925,"results":"39","hashOfConfig":"30"},{"size":2597,"mtime":1623504199823,"results":"40","hashOfConfig":"30"},{"size":1348,"mtime":1623504199829,"results":"41","hashOfConfig":"30"},{"size":2140,"mtime":1623504199819,"results":"42","hashOfConfig":"30"},{"size":1078,"mtime":1622970492683,"results":"43","hashOfConfig":"30"},{"size":1315,"mtime":1623866638467,"results":"44","hashOfConfig":"30"},{"size":1253,"mtime":1623504199825,"results":"45","hashOfConfig":"30"},{"size":1003,"mtime":1623504199818,"results":"46","hashOfConfig":"30"},{"size":1228,"mtime":1624053264340,"results":"47","hashOfConfig":"30"},{"size":1040,"mtime":1624053264339,"results":"48","hashOfConfig":"30"},{"size":3271,"mtime":1622574851849,"results":"49","hashOfConfig":"30"},{"size":375,"mtime":1622130118189,"results":"50","hashOfConfig":"30"},{"size":761,"mtime":1621760028845,"results":"51","hashOfConfig":"30"},{"size":329,"mtime":1622130118193,"results":"52","hashOfConfig":"30"},{"size":6103,"mtime":1624392757918,"results":"53","hashOfConfig":"30"},{"size":5446,"mtime":1624053264345,"results":"54","hashOfConfig":"30"},{"size":5289,"mtime":1624384063749,"results":"55","hashOfConfig":"30"},{"size":2002,"mtime":1624392757922,"results":"56","hashOfConfig":"30"},{"size":10879,"mtime":1624392757924,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1h9qmix",{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":3,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"112"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/index.js",[],["120","121"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/App.js",["122","123","124","125","126"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/firebaseconfig.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/Theme.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernpartnerAPI.js",["127"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/pages/About.js",["128"],"import React from 'react'\nimport { makeStyles, Paper, Typography, Link } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1)\n  },\n  content: {\n    margin: theme.spacing(1),\n  }\n}));\n\n/**\n * Shows the about page with the impressum\n */\n\n\nfunction About() {\n\n    const classes = useStyles();\n  \n    return (\n      <Paper elevation={0} className={classes.root}>\n        <div className={classes.content}>\n          <Typography variant='h6'>\n            App zum Auffinden von Lernpartnern\n          </Typography>\n          <Typography variant='body2'>\n            Â© Hochschule der Medien 2020, all rights reserved.\n          </Typography>\n        </div>\n      </Paper>\n    )\n  }\n  \n  export default About;","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/pages/SignIn.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/LoadingProgress.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ContextErrorMessage.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/layout/Header.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/PersonBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/VorschlagBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/LernvorliebenBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/LerngruppeBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/NachrichtBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/ProfilBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/KonversationBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeGruppeBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeChatBO.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfileDropDown.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/NamedBusinessObject.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/BusinessObject.js",[],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/api/index.js",[],["129","130"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/MeinProfil.js",["131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/VorschlagListeEintrag.js",["151","152","153"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'\nimport Profil from './Profil';\n//import { withStyles } from '@material-ui/core';\n//import { withRouter } from 'react-router-dom';\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n//import InputLabel from '@material-ui/core/InputLabel';\n//import MenuItem from '@material-ui/core/MenuItem';\n//import FormControl from '@material-ui/core/FormControl';\n//import Select from '@material-ui/core/Select';\n//import ContextErrorMessage from './dialogs/ContextErrorMessage';\n//import LoadingProgress from './dialogs/LoadingProgress';\n\n/**\n * Es wird ein einzelner Vorschlag fÃ¼r einen passenden Lernpartner oder /-gruppe mit allen not wendigen Informationen dargestellt\n * \n * HierfÃ¼r werden Profilname, Alter, Geschlecht, Semester, Lernfach und der Prozentsatz des Matches angezeigt\n * \n */\n\nclass VorschlagListeEintrag extends Component {\n    constructor(props){\n        super(props);\n\n        // initiiere einen leeren state\n        this.state = {\n            vorschlag: props.vorschlag,\n            //match: null,\n            profil: null,\n            person: null,\n            profilID: null,\n            personName: null,\n            personVorname: null,\n            showProfil: false,\n            showAnfrageForm: false,\n            loadingInProgress: false,\n            error: null\n        };\n    }\n\n    /** Handles onChange events of the underlying ExpansionPanel */\n    expansionPanelStateChanged = () => {\n    this.props.onExpandedStateChange(this.props.vorschlag);\n    }\n    \n    //Handles the onClick event of the show profil button\n    showProfilButtonClicked = (event) => {\n      event.stopPropagation();\n      this.setState({\n        showProfil: true\n      });\n    }\n\n    /** Handles the onClick event of the send Anfrage button */\n    sendAnfrageButtonClicked = (event) => {\n      event.stopPropagation();\n      this.setState({\n        showAnfrageForm: true\n      });\n    }\n\n    // API Anbindung um Profil vom Backend zu bekommen \n    getPerson = () => {\n      LernpartnerAPI.getAPI().getPerson(this.props.vorschlag.getmain_person_id())\n      .then(personBO =>\n          this.setState({\n            person: personBO,\n            personName: personBO.name,\n            personVorname: personBO.vorname,\n            loadingInProgress: false,\n            error: null,\n          }))\n          .catch(e =>\n              this.setState({\n                person: null,\n                personName: null,\n                personVorname: null,\n                loadingInProgress: false,\n                error: e,\n              }));\n      this.setState({\n        loadingInProgress: true,\n        error: null\n      });\n    }\n\n\n    render(){\n\n          const { classes, expandedState } = this.props;\n          const {vorschlag, profil, profilID, personName, personVorname, showProfil, showAnfrageForm } = this.state;\n\n          return (\n            <div>\n              <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  id={`vorschlag${vorschlag.getId()}accountpanel-header`}\n                >\n                  <Grid container spacing={1} justify='flex-start' alignItems='center'>\n                    <Grid item>\n          <Typography variant='body1' className={classes.heading}>{personName}, {personVorname}, {vorschlag.getmatch()}\n                      </Typography>\n                    </Grid>\n                    <Grid item>\n                      <ButtonGroup variant='text' size='small'>\n                        <Button color='primary' onClick={this.showProfilButtonClicked}>\n                          Profil ansehen\n                        </Button>\n                        <Button color='secondary' onClick={this.sendAnfrageButtonClicked}>\n                          Kontaktanfrage\n                        </Button>\n                      </ButtonGroup>\n                    </Grid>\n                    <Grid item xs />\n                    <Grid item>\n                      <Typography variant='body2' color={'textSecondary'}>Profil und Kontaktanfrage</Typography>\n                    </Grid>\n                  </Grid>\n                </AccordionSummary>\n                <Profil show={showProfil} profil={profil}/>\n                <AnfrageForm show={showAnfrageForm} profil={profil}/>\n              </Accordion>\n            </div>\n          );\n        }\n}\n\n\nconst styles = theme => ({\n  root: {\n      width: '100%',\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n      padding: theme.spacing(1),\n  },\n  content: {\n      margin: theme.spacing(1),\n    },\n  table: {\n      minWidth: 700,\n    },\n  formControl: {\n      margin: theme.spacing(1),\n      minWidth: 200,\n      textAlign: \"left\"\n  },\n  button: {\n      margin: theme.spacing(1),\n      },\n  laden: {\n    padding: 0\n  },\n  breite: {\n    width: 220\n  }\n  });\n\n/** PropTypes */\nVorschlagListeEintrag.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  vorschlag: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired\n}\n\n\nexport default withStyles(styles)(VorschlagListeEintrag);",["154","155"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/Profil.js",["156"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Typography, TableContainer, Table, TableHead, TableCell, Paper, TableRow, TableBody, Link, Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { withRouter } from 'react-router-dom';\nimport {LernpartnerAPI} from '../api';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\nimport ProfilBO from '../api/ProfilBO';\nimport PersonBO from '..api/PersonBO';\n\nclass Profil extends Component {\n\n    constructor(props){\n        super(props);\n\n        // initiiere einen leeren state\n        this.state = {\n            profil: null,\n            gruppe: false,\n            personVorname: null,\n            personName: null,\n            personSemester: 0,\n            personStudiengang: null,\n            lerngruppe: false,\n            personProfilID: None,\n            personLernfaecher: null,\n            personLernvorliebenID: null,\n            loadingInProgress: false,\n            loadingError: null,\n        };\n    }\n\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\n    componentDidMount() {\n        this.getPerson();\n  }\n\n/**   showVorschlagButtonClick = (event) => {\n      event.stopPropagation();\n      this.setState({\n        showVorschlag: true\n      });\n    }**/\n\n\n\n\n    // API Anbindung um Profil vom Backend zu bekommen\n    getPerson = () => {\n      LernpartnerAPI.getAPI().getPerson(this.props.person.getID())\n      .then(personBO =>\n          this.setState({\n            person: personBO,\n            personName: personBO.name,\n            personVorname: personBO.vorname,\n            personSemester: personBO.semester,\n            personStudiengang: personBO.studiengang,\n            personProfilID: personBO.personenprofil,\n            loadingInProgress: false,\n            error: null,\n          }))\n          .catch(e =>\n              this.setState({\n            person: null,\n            personName: null,\n            personVorname: null,\n            personSemester: null,\n            personStudiengang: null,\n            personProfilID: null,\n            loadingInProgress: false,\n            error: e,\n              }));\n      this.setState({\n        loadingInProgress: true,\n        error: null\n      });\n    }\n\n     getProfil = () => {\n    LernpartnerAPI.getAPI().getProfil(personProfilID).then(profilBO =>\n      this.setState({\n            profil: profilBOs,\n            profilLernfaecher: profilBO.lernfaecher,\n            profilLernvorliebenID: profilBO.lernvorlieben,\n            loadingInProgress: false,\n            error: null\n      })).catch(e =>\n        this.setState({ // Reset state with error from catch\n          profil: null,\n          profilLernfaecher: null,\n          profilLernvorliebenID: false,\n          loadingInProgress: false,\n          error: e,\n        })\n      );\n\n    // set loading to true\n    this.setState({\n      loadingInProgress: true,\n      loadingError: null\n    });\n  }\n\n\n     getLernvorlieben = () => {\n    LernpartnerAPI.getAPI().getLernvorlieben(personLernvorliebenID).then(lernvorliebenBO =>\n      this.setState({\n            profil: profilBOs,\n            profilLernfaecher: profilBO.lernfaecher,\n            profilLernvorlieben: profilBO.lernvorlieben,\n            loadingInProgress: false,\n            error: null\n      })).catch(e =>\n        this.setState({ // Reset state with error from catch\n          profil: null,\n          profilLernfaecher: null,\n          profilLernvorlieben: false,\n          loadingInProgress: false,\n          error: e,\n        })\n      );\n\n    // set loading to true\n    this.setState({\n      loadingInProgress: true,\n      loadingError: null\n    });\n  }\n\n   /** Renders the component */\n  render() {\n    const { classes } = this.props;\n    // Use the states customer\n    const { personProfil, personName, personVorname, personSemester, personStudiengang, personLernfaecher, personLernvorlieben, loadingInProgress, error} = this.state;\n\n    // console.log(this.props);\n    return (\n      <div className={classes.root}>\n    \"\"\"  <Button color=\"primary\" onClick= {this.showVorschlagButtonClick}>Zurueck zu den Vorschlaegen</Button>\"\"\"\n      <Typography variant='body1' color={'textSecondary'}>\n\n                            <b>Semester: </b> {personSemester} <br />\n                            <b>Studiengang: </b>{personStudiengang}<br />\n                            <b>LernfÃ¤cher: </b>{personLernfaecher}<br />\n                            <b>Lernvorlieben: </b>{personLernvorlieben}<br />\n    );\n  }\n}\n\nconst styles = theme => ({\n  root: {\n      width: '100%',\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n      padding: theme.spacing(1),\n  },\n  content: {\n      margin: theme.spacing(1),\n    },\n  table: {\n      minWidth: 700,\n    },\n  formControl: {\n      margin: theme.spacing(1),\n      minWidth: 200,\n      textAlign: \"left\"\n  },\n\n  laden: {\n    padding: 0\n  },\n  breite: {\n    width: 220\n  }\n});\n\n\n/** PropTypes */\nProfil.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  person: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired\n}\n\n\nexport default withStyles(styles)(Profil);\n\n","/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppeForm.js",["157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175"],"/Users/mariavetter/Documents/Dokumente - Marias MacBook Pro/GitHub/SoPra-LernpartnerApp/frontend/src/components/dialogs/RegistrierungForm.js",["176","177"],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"186","line":13,"column":8,"nodeType":"184","messageId":"185","endLine":13,"endColumn":25},{"ruleId":"182","severity":1,"message":"187","line":15,"column":8,"nodeType":"184","messageId":"185","endLine":15,"endColumn":19},{"ruleId":"188","severity":1,"message":"189","line":133,"column":7,"nodeType":"190","messageId":"191","endLine":133,"endColumn":26},{"ruleId":"182","severity":1,"message":"192","line":163,"column":39,"nodeType":"184","messageId":"185","endLine":163,"endColumn":56},{"ruleId":"193","severity":1,"message":"194","line":554,"column":9,"nodeType":"195","messageId":"196","endLine":561,"endColumn":10},{"ruleId":"182","severity":1,"message":"197","line":2,"column":41,"nodeType":"184","messageId":"185","endLine":2,"endColumn":45},{"ruleId":"178","replacedBy":"198"},{"ruleId":"180","replacedBy":"199"},{"ruleId":"182","severity":1,"message":"200","line":3,"column":34,"nodeType":"184","messageId":"185","endLine":3,"endColumn":48},{"ruleId":"182","severity":1,"message":"201","line":3,"column":50,"nodeType":"184","messageId":"185","endLine":3,"endColumn":55},{"ruleId":"182","severity":1,"message":"202","line":3,"column":57,"nodeType":"184","messageId":"185","endLine":3,"endColumn":66},{"ruleId":"182","severity":1,"message":"203","line":3,"column":68,"nodeType":"184","messageId":"185","endLine":3,"endColumn":77},{"ruleId":"182","severity":1,"message":"204","line":3,"column":79,"nodeType":"184","messageId":"185","endLine":3,"endColumn":84},{"ruleId":"182","severity":1,"message":"205","line":3,"column":86,"nodeType":"184","messageId":"185","endLine":3,"endColumn":94},{"ruleId":"182","severity":1,"message":"206","line":3,"column":96,"nodeType":"184","messageId":"185","endLine":3,"endColumn":105},{"ruleId":"182","severity":1,"message":"197","line":3,"column":107,"nodeType":"184","messageId":"185","endLine":3,"endColumn":111},{"ruleId":"182","severity":1,"message":"207","line":3,"column":113,"nodeType":"184","messageId":"185","endLine":3,"endColumn":117},{"ruleId":"182","severity":1,"message":"208","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":27},{"ruleId":"182","severity":1,"message":"209","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":23},{"ruleId":"188","severity":1,"message":"189","line":118,"column":7,"nodeType":"190","messageId":"191","endLine":118,"endColumn":26},{"ruleId":"182","severity":1,"message":"210","line":164,"column":15,"nodeType":"184","messageId":"185","endLine":164,"endColumn":27},{"ruleId":"182","severity":1,"message":"211","line":164,"column":29,"nodeType":"184","messageId":"185","endLine":164,"endColumn":39},{"ruleId":"182","severity":1,"message":"212","line":164,"column":41,"nodeType":"184","messageId":"185","endLine":164,"endColumn":54},{"ruleId":"182","severity":1,"message":"213","line":164,"column":131,"nodeType":"184","messageId":"185","endLine":164,"endColumn":148},{"ruleId":"182","severity":1,"message":"214","line":164,"column":150,"nodeType":"184","messageId":"185","endLine":164,"endColumn":155},{"ruleId":"215","severity":2,"message":"216","line":169,"column":10,"nodeType":"217","messageId":"218","endLine":169,"endColumn":27},{"ruleId":"219","severity":2,"message":"220","line":169,"column":36,"nodeType":"184","messageId":"221","endLine":169,"endColumn":57},{"ruleId":"219","severity":2,"message":"222","line":169,"column":74,"nodeType":"184","messageId":"221","endLine":169,"endColumn":87},{"ruleId":"182","severity":1,"message":"223","line":7,"column":63,"nodeType":"184","messageId":"185","endLine":7,"endColumn":79},{"ruleId":"182","severity":1,"message":"224","line":94,"column":37,"nodeType":"184","messageId":"185","endLine":94,"endColumn":45},{"ruleId":"215","severity":2,"message":"225","line":125,"column":18,"nodeType":"217","messageId":"218","endLine":125,"endColumn":29},{"ruleId":"178","replacedBy":"226"},{"ruleId":"180","replacedBy":"227"},{"ruleId":null,"fatal":true,"severity":2,"message":"228","line":152,"column":7},{"ruleId":"182","severity":1,"message":"229","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":17},{"ruleId":"182","severity":1,"message":"230","line":3,"column":29,"nodeType":"184","messageId":"185","endLine":3,"endColumn":39},{"ruleId":"182","severity":1,"message":"197","line":3,"column":41,"nodeType":"184","messageId":"185","endLine":3,"endColumn":45},{"ruleId":"182","severity":1,"message":"231","line":3,"column":47,"nodeType":"184","messageId":"185","endLine":3,"endColumn":53},{"ruleId":"182","severity":1,"message":"232","line":3,"column":55,"nodeType":"184","messageId":"185","endLine":3,"endColumn":65},{"ruleId":"182","severity":1,"message":"233","line":3,"column":67,"nodeType":"184","messageId":"185","endLine":3,"endColumn":73},{"ruleId":"182","severity":1,"message":"234","line":3,"column":75,"nodeType":"184","messageId":"185","endLine":3,"endColumn":86},{"ruleId":"182","severity":1,"message":"235","line":3,"column":88,"nodeType":"184","messageId":"185","endLine":3,"endColumn":101},{"ruleId":"182","severity":1,"message":"236","line":3,"column":103,"nodeType":"184","messageId":"185","endLine":3,"endColumn":120},{"ruleId":"182","severity":1,"message":"237","line":3,"column":122,"nodeType":"184","messageId":"185","endLine":3,"endColumn":135},{"ruleId":"182","severity":1,"message":"238","line":3,"column":137,"nodeType":"184","messageId":"185","endLine":3,"endColumn":146},{"ruleId":"182","severity":1,"message":"239","line":3,"column":148,"nodeType":"184","messageId":"185","endLine":3,"endColumn":162},{"ruleId":"182","severity":1,"message":"207","line":3,"column":164,"nodeType":"184","messageId":"185","endLine":3,"endColumn":168},{"ruleId":"182","severity":1,"message":"240","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":17},{"ruleId":"182","severity":1,"message":"241","line":5,"column":10,"nodeType":"184","messageId":"185","endLine":5,"endColumn":24},{"ruleId":"182","severity":1,"message":"242","line":5,"column":26,"nodeType":"184","messageId":"185","endLine":5,"endColumn":33},{"ruleId":"182","severity":1,"message":"243","line":9,"column":10,"nodeType":"184","messageId":"185","endLine":9,"endColumn":20},{"ruleId":"182","severity":1,"message":"208","line":10,"column":8,"nodeType":"184","messageId":"185","endLine":10,"endColumn":27},{"ruleId":"182","severity":1,"message":"209","line":11,"column":8,"nodeType":"184","messageId":"185","endLine":11,"endColumn":23},{"ruleId":"182","severity":1,"message":"244","line":3,"column":123,"nodeType":"184","messageId":"185","endLine":3,"endColumn":127},{"ruleId":"182","severity":1,"message":"245","line":168,"column":32,"nodeType":"184","messageId":"185","endLine":168,"endColumn":45},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'RegistrierungForm' is defined but never used.","'GruppenForm' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'showRegistrierung' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'getNachrichten'.","MethodDefinition","unexpected","'Link' is defined but never used.",["246"],["247"],"'TableContainer' is defined but never used.","'Table' is defined but never used.","'TableHead' is defined but never used.","'TableCell' is defined but never used.","'Paper' is defined but never used.","'TableRow' is defined but never used.","'TableBody' is defined but never used.","'Grid' is defined but never used.","'ContextErrorMessage' is defined but never used.","'LoadingProgress' is defined but never used.","'personProfil' is assigned a value but never used.","'personName' is assigned a value but never used.","'personVorname' is assigned a value but never used.","'loadingInProgress' is assigned a value but never used.","'error' is assigned a value but never used.","react/jsx-no-undef","'RegistrierungForm' is not defined.","JSXIdentifier","undefined","no-undef","'showRegistrierungForm' is not defined.","undef","'currentPerson' is not defined.","'AccordionDetails' is defined but never used.","'profilID' is assigned a value but never used.","'AnfrageForm' is not defined.",["246"],["247"],"Parsing error: Unexpected token, expected \"}\"\n\n\u001b[0m \u001b[90m 150 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 151 |\u001b[39m \u001b[36mconst\u001b[39m styles \u001b[33m=\u001b[39m theme \u001b[33m=>\u001b[39m ({\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 152 |\u001b[39m   root\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m     |\u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 153 |\u001b[39m       width\u001b[33m:\u001b[39m \u001b[32m'100%'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 154 |\u001b[39m       marginTop\u001b[33m:\u001b[39m theme\u001b[33m.\u001b[39mspacing(\u001b[35m2\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 155 |\u001b[39m       marginBottom\u001b[33m:\u001b[39m theme\u001b[33m.\u001b[39mspacing(\u001b[35m2\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m","'PropTypes' is defined but never used.","'makeStyles' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogActions' is defined but never used.","'TextField' is defined but never used.","'InputAdornment' is defined but never used.","'CloseIcon' is defined but never used.","'TeachingbeeAPI' is defined but never used.","'GroupBO' is defined but never used.","'withRouter' is defined but never used.","'Card' is defined but never used.","'currentPerson' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> a1db2113bb52e31fa909b4c780cd501ec7650ac2
