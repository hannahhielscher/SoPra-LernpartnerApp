[{"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/index.js":"1","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/App.js":"2","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/Theme.js":"3","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/firebaseconfig.js":"4","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/KonversationListe.js":"5","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/pages/SignIn.js":"6","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/Profil.js":"7","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/layout/Header.js":"8","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/GruppenListe.js":"9","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/LoadingProgress.js":"10","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/ContextErrorMessage.js":"11","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LernpartnerAPI.js":"12","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/pages/About.js":"13","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/LernfaecherForm.js":"14","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/RegistrierungForm.js":"15","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/MeinProfil.js":"16","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/KonversationListeEintrag.js":"17","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LerngruppeBO.js":"18","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/NachrichtBO.js":"19","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/VorschlagBO.js":"20","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/PersonBO.js":"21","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeGruppeBO.js":"22","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LernvorliebenBO.js":"23","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/ProfilBO.js":"24","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeChatBO.js":"25","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/KonversationBO.js":"26","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LernfachBO.js":"27","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/VorschlagListe.js":"28","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfileDropDown.js":"29","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/GruppenListeEintrag.js":"30","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/MeinProfilForm.js":"31","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/index.js":"32","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/BusinessObject.js":"33","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/NamedBusinessObject.js":"34","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/VorschlagListeEintrag.js":"35","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppenForm.js":"36","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppeVerlassenDialog.js":"37","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppenBearbeitenForm.js":"38","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/MultiSelectLernfaecher.js":"39","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/AnfrageForm.js":"40","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/ChatVerlassenForm.js":"41","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/NachrichtListe.js":"42","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/NachrichtListeEintrag.js":"43","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/AnfrageEingangForm.js":"44","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/AnfrageEingangFormEintrag.js":"45"},{"size":146,"mtime":1620807576504,"results":"46","hashOfConfig":"47"},{"size":6455,"mtime":1625226344936,"results":"48","hashOfConfig":"47"},{"size":1706,"mtime":1623434614996,"results":"49","hashOfConfig":"47"},{"size":579,"mtime":1624551192607,"results":"50","hashOfConfig":"47"},{"size":5723,"mtime":1625230834949,"results":"51","hashOfConfig":"47"},{"size":1816,"mtime":1623433312638,"results":"52","hashOfConfig":"47"},{"size":6022,"mtime":1624999942503,"results":"53","hashOfConfig":"47"},{"size":1881,"mtime":1625221362251,"results":"54","hashOfConfig":"47"},{"size":5520,"mtime":1625158225222,"results":"55","hashOfConfig":"47"},{"size":862,"mtime":1622112082063,"results":"56","hashOfConfig":"47"},{"size":2113,"mtime":1622112193821,"results":"57","hashOfConfig":"47"},{"size":46761,"mtime":1625230834946,"results":"58","hashOfConfig":"47"},{"size":844,"mtime":1624551192605,"results":"59","hashOfConfig":"47"},{"size":4063,"mtime":1625169812265,"results":"60","hashOfConfig":"47"},{"size":12593,"mtime":1624822229798,"results":"61","hashOfConfig":"47"},{"size":11248,"mtime":1625228514693,"results":"62","hashOfConfig":"47"},{"size":5640,"mtime":1625230835296,"results":"63","hashOfConfig":"47"},{"size":1027,"mtime":1624999942494,"results":"64","hashOfConfig":"47"},{"size":1315,"mtime":1623938783709,"results":"65","hashOfConfig":"47"},{"size":1447,"mtime":1624708701524,"results":"66","hashOfConfig":"47"},{"size":2525,"mtime":1624633454200,"results":"67","hashOfConfig":"47"},{"size":1034,"mtime":1624999942496,"results":"68","hashOfConfig":"47"},{"size":3591,"mtime":1624999942494,"results":"69","hashOfConfig":"47"},{"size":1373,"mtime":1625078245020,"results":"70","hashOfConfig":"47"},{"size":1231,"mtime":1625078245022,"results":"71","hashOfConfig":"47"},{"size":813,"mtime":1624793283841,"results":"72","hashOfConfig":"47"},{"size":766,"mtime":1624708701522,"results":"73","hashOfConfig":"47"},{"size":5203,"mtime":1625078245031,"results":"74","hashOfConfig":"47"},{"size":3271,"mtime":1622538283974,"results":"75","hashOfConfig":"47"},{"size":8375,"mtime":1625176854324,"results":"76","hashOfConfig":"47"},{"size":21586,"mtime":1625229127160,"results":"77","hashOfConfig":"47"},{"size":433,"mtime":1624999942497,"results":"78","hashOfConfig":"47"},{"size":761,"mtime":1621758115765,"results":"79","hashOfConfig":"47"},{"size":375,"mtime":1622112904258,"results":"80","hashOfConfig":"47"},{"size":10358,"mtime":1625230834950,"results":"81","hashOfConfig":"47"},{"size":15256,"mtime":1625230658549,"results":"82","hashOfConfig":"47"},{"size":3919,"mtime":1624633454231,"results":"83","hashOfConfig":"47"},{"size":15769,"mtime":1625176031518,"results":"84","hashOfConfig":"47"},{"size":1769,"mtime":1625130961905,"results":"85","hashOfConfig":"47"},{"size":11152,"mtime":1625230834952,"results":"86","hashOfConfig":"47"},{"size":3891,"mtime":1625229860143,"results":"87","hashOfConfig":"47"},{"size":7612,"mtime":1625226366994,"results":"88","hashOfConfig":"47"},{"size":4830,"mtime":1625226309967,"results":"89","hashOfConfig":"47"},{"size":4321,"mtime":1625230834951,"results":"90","hashOfConfig":"47"},{"size":10063,"mtime":1625230834947,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"cx8xr9",{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/index.js",[],["193","194"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/App.js",["195","196","197"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/Theme.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/firebaseconfig.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/KonversationListe.js",["198"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/pages/SignIn.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/Profil.js",["199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Typography, Button, TableContainer, Table, TableHead, TableCell, Paper, TableRow, TableBody, Link, Grid } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport {LernpartnerAPI} from '../api';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\n\n\nclass Profil extends Component {\n\n    constructor(props){\n        super(props);\n\n        // initiiere einen leeren state\n        this.state = {\n            user: props.user,\n            profil: null,\n            lernvorlieben: null,\n            gruppe: false,\n            tageszeiten: null,\n            tage: null,\n            frequenz: null,\n            lernart: null,\n            gruppengroesse: null,\n            lernort: null,\n            gruppe: null,\n            personVorname: null,\n            personName: null,\n            personSemester: 0,\n            personStudiengang: null,\n            lerngruppe: false,\n            personProfilID: null,\n            personLernfaecher: null,\n            personLernvorliebenID: null,\n            loadingInProgress: false,\n            loadingError: null,\n        };\n    }\n\n\n\n/**   showVorschlagButtonClick = (event) => {\n      event.stopPropagation();\n      this.setState({\n        showVorschlag: true\n      });\n    }**/\n\n\n\n/**\n    // API Anbindung um Profil vom Backend zu bekommen\n    getPerson = () => {\n      LernpartnerAPI.getAPI().getPerson(this.props.person.getID())\n      .then(personBO =>\n          this.setState({\n            person: personBO,\n            personName: personBO.name,\n            personVorname: personBO.vorname,\n            personSemester: personBO.semester,\n            personStudiengang: personBO.studiengang,\n            personProfilID: personBO.personenprofil,\n            loadingInProgress: false,\n            error: null,\n          }))\n          .catch(e =>\n              this.setState({\n            person: null,\n            personName: null,\n            personVorname: null,\n            personSemester: null,\n            personStudiengang: null,\n            personProfilID: null,\n            loadingInProgress: false,\n            error: e,\n              }));\n      this.setState({\n        loadingInProgress: true,\n        error: null\n      });\n    }\n*/\n\n     getProfil = () => {\n    LernpartnerAPI.getAPI().getProfil(this.props.user.id).then(profilBO =>\n      this.setState({\n            profil: profilBO,\n            gruppe: profilBO.gruppe,\n            //profilLernfaecher: profilBO.lernfaecher,\n            profilLernvorliebenID: profilBO.lernvorlieben,\n            loadingInProgress: false,\n            error: null\n      })).catch(e =>\n        this.setState({ // Reset state with error from catch\n          profil: null,\n          gruppe: null,\n          //profilLernfaecher: null,\n          profilLernvorliebenID: null,\n          loadingInProgress: false,\n          error: e,\n        })\n      );\n\n    // set loading to true\n    this.setState({\n      loadingInProgress: true,\n      loadingError: null\n    });\n  }\n\n\n     getLernvorlieben = () => {\n    LernpartnerAPI.getAPI().getLernvorlieben(this.props.user.profil).then(lernvorliebenBO =>\n      this.setState({\n            lernvorlieben: lernvorliebenBO,\n            tageszeiten: lernvorliebenBO.tageszeiten_bez,\n            tage: lernvorliebenBO.tage_bez,\n            frequenz: lernvorliebenBO.frequenz_bez,\n            lernart: lernvorliebenBO.lernart_bez,\n            gruppengroesse: lernvorliebenBO.gruppengroesse_bez,\n            lernort: lernvorliebenBO.lernort_bez,\n            loadingInProgress: false,\n            error: null\n      })).catch(e =>\n        this.setState({ // Reset state with error from catch\n          lernvorlieben: null,\n          loadingInProgress: false,\n          error: e,\n        })\n      );\n\n    // set loading to true\n    this.setState({\n      loadingInProgress: true,\n      loadingError: null\n    });\n  }\n\n\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\n    componentDidMount() {\n        this.getProfil();\n        this.getLernvorlieben();\n  }\n\n\n   /** Renders the component */\n  render() {\n    const { classes, show } = this.props;\n    // Use the states customer\n    const { user, profil, lernvorlieben, tageszeiten, tage, frequenz, lernart, lernort, gruppengroesse, gruppe, personLernvorliebenID, loadingInProgress, error} = this.state;\n    console.log(user)\n\n    // console.log(this.props);\n    return (\n      <div className={classes.root}>\n            {\n            gruppe ?\n                <>\n                    <b> {user.vorname} {user.name} </b> <br />\n                    <b>Semester: </b> {user.semester} <br />\n                    <b>Studiengang: </b> {user.studiengang} <br />\n                    <b>Alter: </b> {user.alter} <br />\n                    <b>Geschlecht: </b> {user.geschlecht} <br />\n\n                </>\n\n                :\n                <>\n                    <b> Profilinformationen: </b> <br /><br />\n                    Tageszeiten: {tageszeiten}<br />\n                    Tage: {tage}<br />\n                    Frequenz: {frequenz}<br />\n                    Lernart: {lernart}<br />\n                    Lernort: {lernort}\n                </>\n           }\n\n\n\n\n\n      </div>\n    );\n  }\n}\n\nconst styles = theme => ({\n  root: {\n      width: '100%',\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n      padding: theme.spacing(1),\n  },\n  content: {\n      margin: theme.spacing(1),\n    },\n  table: {\n      minWidth: 700,\n    },\n  formControl: {\n      margin: theme.spacing(1),\n      minWidth: 200,\n      textAlign: \"left\"\n  },\n\n  laden: {\n    padding: 0\n  },\n  breite: {\n    width: 220\n  }\n});\n\n\n/** PropTypes */\nProfil.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired\n}\n\n\nexport default withStyles(styles)(Profil);\n\n","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/layout/Header.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/GruppenListe.js",["221","222","223","224","225","226"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'\nimport { withStyles, Button, TextField, InputAdornment, IconButton, Grid, Typography } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\nimport GruppenListeEintrag from './GruppenListeEintrag';\n//import SaveIcon from '@material-ui/icons/Save';\n//import Table from '@material-ui/core/Table';\n//import TableBody from '@material-ui/core/TableBody';\n//import TableCell from '@material-ui/core/TableCell';\n//import TableContainer from '@material-ui/core/TableContainer';\n//import TableHead from '@material-ui/core/TableHead';\n//import TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\n\n/**\n * Es werden alle Vorschläge des aktuell eingeloggten Studenten angezeigt\n *\n * @see See [VorschlagListeEintrag](#vorschaglisteeintrag)\n *\n * Hierfür werden alle Vorschläge des aktuell eingeloggten Student geladen und in die Componente VorschlagListeEintrag gemappt\n *\n */\n\n\nclass GruppenListe extends Component {\n\n    constructor(props){\n        super(props);\n\n        let expandedID = null;\n\n        if (this.props.location.expandLerngruppe) {\n          expandedID = this.props.location.expandLerngruppe.getID();\n        }\n\n        // Init an empty state\n        this.state = {\n          lerngruppen: [],\n          error: null,\n          loadingInProgress: false,\n          expandedLerngruppeID: expandedID,\n          //showCustomerForm: false\n        };\n\n    }\n\n    /** Fetches all LerngruppenBOs from the backend */\n    getLerngruppen = () => {\n        LernpartnerAPI.getAPI().getLerngruppe(this.props.currentPerson.id)\n            .then(lerngruppeBOs =>\n                this.setState({               // Set new state when LerngruppeBOs have been fetched\n                    lerngruppen: lerngruppeBOs,\n                    //name: lerngruppeBO.name\n                    loadingInProgress: false,   // disable loading indicator\n                    error: null\n                })).catch(e =>\n                    this.setState({             // Reset state with error from catch\n                        lerngruppen: [],\n                        loadingInProgress: false, // disable loading indicator\n                        error: e\n                    })\n                );\n\n        // set loading to true\n        this.setState({\n            loadingInProgress: true,\n            error: null\n        });\n    }\n\n    /**\n     * Handles onExpandedStateChange events from the GruppeListeEintrag component. Toggels the expanded state of\n     * the GruppeListeEintrag of the given LerngruppeBO.\n     *\n     * @param {lerngruppe} LerngruppeBO of the GruppeListeEintrag to be toggeled\n     */\n    onExpandedStateChange = lerngruppe => {\n        // console.log(vorschlagID);\n        // Set expandend Lerngruppe Eintrag to null by default\n        let newID = null;\n\n        // If same lerngruppe entry is clicked, collapse it else expand a new one\n        if (lerngruppe.getID() !== this.state.expandedLerngruppeID) {\n        // Expand the lerngruppe entry with lerngruppeID\n        newID = lerngruppe.getID();\n        }\n        // console.log(newID);\n        this.setState({\n        expandedLerngruppeID: newID,\n        });\n    }\n\n   /**\n   * Handles lerngruppeVerlassen events from the GruppenListeEintrag component\n   */\n    lerngruppeVerlassen = () => {\n        this.getLerngruppen();\n        this.setState({\n            lerngruppen: this.state.lerngruppen,\n            //showCustomerForm: false\n        });\n    }\n\n    /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\n    componentDidMount() {\n        this.getLerngruppen();\n    }\n\n    render() {\n        const { classes, currentPerson } = this.props;\n        const { lerngruppen, personID, expandedLerngruppeID, loadingInProgress, error }  = this.state;\n        console.log(lerngruppen)\n\n        return (\n            <div className={classes.root}>\n                <Grid container spacing={1} justify='flex-start' alignItems='center'>\n                    <Grid item >\n                        <Typography>\n                            <h1>Lerngruppen</h1>\n                        </Typography>\n                    </Grid>\n                </Grid>\n                {\n                    lerngruppen.map(lerngruppe =>\n                    <GruppenListeEintrag key={lerngruppe.getID()} lerngruppe={lerngruppe} currentPerson={currentPerson} expandedState={expandedLerngruppeID === lerngruppe.getID()}\n                      onExpandedStateChange={this.onExpandedStateChange}\n                      onTeilnahmeGruppeDeleted={this.lerngruppeVerlassen}\n                    />)\n                }\n                <LoadingProgress show={loadingInProgress} />\n                <ContextErrorMessage error={error} contextErrorMsg={`Sorry, deine Lerngruppen konnten nicht geladen werden!`} onReload={this.getLerngruppen} />\n            </div>\n        );\n      }\n    }\n\n/** Component specific styles */\nconst styles = theme => ({\n  root: {\n      width: '100%',\n  },\n  content: {\n      margin: theme.spacing(1),\n  }\n});\n\n/** PropTypes */\nGruppenListe.propTypes = {\n    /** @ignore */\n    classes: PropTypes.object.isRequired,\n    /** @ignore */\n    location: PropTypes.object.isRequired,\n}\n\n\nexport default withRouter(withStyles(styles)(GruppenListe));","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/LoadingProgress.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/ContextErrorMessage.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LernpartnerAPI.js",["227"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/pages/About.js",["228"],"import React from 'react'\nimport { makeStyles, Paper, Typography, Link } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1)\n  },\n  content: {\n    margin: theme.spacing(1),\n  }\n}));\n\n/**\n * Shows the about page with the impressum\n */\n\n\nfunction About() {\n\n    const classes = useStyles();\n  \n    return (\n      <Paper elevation={0} className={classes.root}>\n        <div className={classes.content}>\n          <Typography variant='h6'>\n            App zum Auffinden von Lernpartnern\n          </Typography>\n          <Typography variant='body2'>\n            © Hochschule der Medien 2020, all rights reserved.\n          </Typography>\n        </div>\n      </Paper>\n    )\n  }\n  \n  export default About;","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/LernfaecherForm.js",["229","230","231"],"import React, { Component } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport { LernpartnerAPI } from '../../api';\nimport VorschlagListe from '../VorschlagListe';\nimport ContextErrorMessage from './ContextErrorMessage';\nimport LoadingProgress from './LoadingProgress';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n  \nclass LernfaecherForm extends Component {\n  \n  constructor(props){\n    super(props);\n\n    // initiiere einen leeren state\n    this.state = {\n        profil: null,\n        lernfaecher: [],\n        lernfach: null,\n        showVorschlagListe: false,\n        loadingInProgress: false,\n        error: null\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({lernfach: event.target.value});\n    \n  }\n\n  getProfil = () => {\n    LernpartnerAPI.getAPI().getProfil(this.props.currentPerson.getprofil())\n    .then(profilBO =>\n        this.setState({\n          profil: profilBO,\n          lernfaecher: profilBO.lernfaecher,\n          loadingInProgress: false,\n          error: null,\n        }))\n        .catch(e =>\n            this.setState({\n              profil: null,\n              lernfaecher: null,\n              loadingInProgress: false,\n              error: e,\n            }));\n        this.setState({\n          loadingInProgress: true,\n          error: null\n        });\n  }\n\n  getLernfaecher = () => {\n    LernpartnerAPI.getAPI().getLernfaecherByProfil(this.props.currentPerson.getprofil())\n    .then(lernfaecherBOs =>\n      this.setState({\n            lernfaecher: lernfaecherBOs,\n            lernfaechernamen: lernfaecherBOs.map(lernfach=> lernfach.bezeichnung),\n            loadingInProgress: false,\n            error: null\n      }))\n      .catch(e =>\n        this.setState({ // Reset state with error from catch\n          lernfaecher: null,\n          loadingInProgress: false,\n          error: e,\n        })\n      );\n\n    // set loading to true\n    this.setState({\n      loadingInProgress: true,\n      loadingError: null\n    });\n  }\n\n  //Handles the onClick event of the show profil button\n  bestaetigenButtonClicked = (event) => {\n    this.setState({\n      showVorschlagListe: true\n    });\n  }\n\n  componentDidMount() {\n    this.getLernfaecher();\n  }\n\n  render() {\n    const { classes, currentPerson } = this.props;\n    const { profil, lernfaecher, lernfach, showVorschlagListe, loadingInProgress, error } = this.state;\n    \n    console.log(profil)\n    console.log(showVorschlagListe)\n    return (\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-native-simple\">Lernfach auswählen:</InputLabel>\n          <Select\n            native\n            value= {lernfach}\n            onChange={this.handleChange}\n          >\n           {lernfaecher.map(lernfach =>\n            <option key={lernfach.id} value={lernfach.id}>{lernfach.bezeichnung}</option>\n          )};\n           \n          </Select>\n        </FormControl>\n        <Button color=\"primary\" onClick= {this.bestaetigenButtonClicked}>Bestätigen</Button>\n        <VorschlagListe show={showVorschlagListe} currentPerson={currentPerson} lernfach={lernfach} />\n        <LoadingProgress show={loadingInProgress}></LoadingProgress>\n        <ContextErrorMessage error={error} contextErrorMsg = {'Hier ist ein Fehler aufgetreten'} onReload={this.getProfil} />\n      </div>\n    );\n  } \n}\n\n/** Component specific styles */\nconst styles = theme => ({\n  formControl: {\n    marginBottom: theme.spacing(1),\n    minWidth: 120,\n  }\n});\n\nexport default withRouter(withStyles(useStyles)(LernfaecherForm));","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/RegistrierungForm.js",["232","233"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Card,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    } from '@material-ui/core';\n\nimport { LernpartnerAPI } from '../../api';\nimport { withRouter } from 'react-router-dom';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ContextErrorMessage from './ContextErrorMessage';\nimport LoadingProgress from './LoadingProgress';\n/** \n * Renders a landing page for users who are not signed in. Provides a sign in button \n * for using an existing google account to sign in. The component uses firebase to \n * do redirect based signin process.\n * \n * @see See Googles [firebase authentication](https://firebase.google.com/docs/web/setup)\n * @see See Googles [firebase API reference](https://firebase.google.com/docs/reference/js)\n * \n */\nclass RegistrierungForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        // Init the state\n        this.state = {\n            name: '',\n            nameValidationFailed: false,\n            nameEdited: false,\n\n            vorname: null,\n            vornameValidationFailed: false,\n            vornameEdited: false,\n\n            alter: null,\n            alterValidationFailed: false,\n            alterEdited: false,\n\n            geschlecht: null,\n            geschlechtValidationFailed: false,\n            geschlechtEdited: false,\n\n            semester: null,\n            semesterValidationFailed: false,\n            semesterEdited: false,\n\n            studiengang: null,\n            studiengangValidationFailed: false,\n            studiengangEdited: false,\n\n            lerngruppe: null,\n            lerngruppeValidationFailed: false,\n            lerngruppeEdited: false,\n\n            addingError: null,\n            addingInProgress: false,\n\n            updatingError: null,\n            updatingInProgress: false,\n            \n            \n        };\n        // save this state for canceling\n        this.baseState = this.state;\n        this.handleChangeStudiengang = this.handleChangeStudiengang.bind(this);\n        this.handleChangeLerngruppe = this.handleChangeLerngruppe.bind(this);\n        }\n    \n\n    /** Updates the person */\n    registrieren = () => {\n        let person = this.props.currentPerson;\n        person.name = this.state.name\n        person.vorname = this.state.vorname\n        person.semester = this.state.semester\n        person.studiengang = this.state.studiengang\n        person.alter = this.state.alter\n        person.geschlecht = this.state.geschlecht\n        person.lerngruppe = this.state.lerngruppe\n        LernpartnerAPI.getAPI().updatePerson(person.id, this.state.name, this.state.vorname, this.state.semester, this.state.studiengang, this.state.alter, this.state.geschlecht,\n          this.state.lerngruppe).then(person => {\n            // Backend call sucessfull\n            // reinit the dialogs state for a new empty customer\n            this.setState(this.baseState);\n            this.props.onClose(person); // call the parent with the customer object from backend\n        }).catch(e =>\n            this.setState({\n                updatingInProgress: false,    // disable loading indicator \n                updatingError: e              // show error message\n            })\n        );\n\n        // set loading to true\n        this.setState({\n            updatingInProgress: true,       // show loading indicator\n            updatingError: null             // disable error message\n      });\n    }\n\t/** \n\t * Handles the click event of the sign in button an calls the prop onSignIn handler\n\t \n\thandleSignInButtonClicked = () => {\n\t\tthis.props.onSignIn();\n\t}\n    */\n   /** Handles value changes of the forms textfields and validates them */\n    textFieldValueChange = (event) => {\n        const value = event.target.value;\n\n        let error = false;\n        if (value.trim().length === 0) {\n        error = true;\n        }\n\n        this.setState({\n        [event.target.id]: event.target.value,\n        [event.target.id + 'ValidationFailed']: error,\n        [event.target.id + 'Edited']: true\n        });\n    }\n\n    //Setzen der Werte aus der Validierung\n    setStateValueChange(event, error) {\n      this.setState({\n          [event.target.id]: event.target.value,\n          [event.target.id + 'ValidationFailed']: error,\n          [event.target.id + 'Edited']: true\n      });\n  }\n\n    // Validierung der Textfeldaenderungen nur numerische Werte\n    numberValueChange = (event) => {\n        const value = event.target.value;\n        const re = /^[0-9]{1,10}$/;\n\n        let error = false;\n        if (value.trim().length === 0) {\n            error = true;\n        }\n        if (re.test(event.target.value) === false) {\n            error = true;\n        }\n        this.setStateValueChange(event, error);\n    }\n\n    //Setzen des Status, bei schließen des Dialogs\n    handleClose = () => {\n        this.setState(this.baseState);\n        this.props.onClose(null);\n    }\n\n    handleChangeStudiengang(event) {\n      this.setState({studiengang: event.target.value});\n    }\n\n    handleChangeLerngruppe(event) {\n      this.setState({lerngruppe: event.target.value});\n    }\n\n  \n\t/** Renders the sign in page, if user objext is null */\n\t/** Renders the component */\n    render() {\n        const { classes, show, currentPerson, } = this.props;\n        const { name, nameValidationFailed, vorname, vornameValidationFailed, semester, semesterValidationFailed, studiengang, studiengangValidationFailed,\n          alter, alterValidationFailed, geschlecht, geschlechtValidationFailed, lerngruppe, lerngruppeValidationFailed, addingInProgress,\n          updatingInProgress, updatingError} = this.state;\n    \n        let title = 'Registriere dich zuerst, bevor du die App nutzen kannst!';\n        let header = 'Bitte gib deine Daten ein:';\n    \n        return (\n            show ?\n            <Dialog open={show}>\n              <DialogTitle id='form-dialog-title'>{title}\n                  <IconButton className={classes.closeButton} onClick={this.handleClose}>\n                      <CloseIcon />\n                  </IconButton>\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  {header}\n                </DialogContentText>\n                <form className={classes.root} noValidate autoComplete='off'>\n\n                  <TextField className={classes.textfield} autoFocus type='text' required fullWidth margin='normal' id='name' label='Nachname:' value={name}\n                    onChange={this.textFieldValueChange} error={nameValidationFailed}\n                    helperText={nameValidationFailed ? 'The last name must contain at least one character' : ' '} />\n\n                  <TextField className={classes.textfield} autoFocus type='text' required fullWidth margin='normal' id='vorname' label='Vorname:' value={vorname} \n                    onChange={this.textFieldValueChange} error={vornameValidationFailed} \n                    helperText={vornameValidationFailed ? 'The first name must contain at least one character' : ' '} />\n                  \n                  <TextField className={classes.textfield} autoFocus type='text' required fullWidth margin='normal' id='semester' label='Semester:' value={semester} \n                    onChange={this.numberValueChange} error={semesterValidationFailed} \n                    helperText={geschlechtValidationFailed ? 'The semester must contain at least one character' : ' '} /> \n                    \n                  <FormControl required fullWidth margin='normal' className={classes.formControl}>\n                            <InputLabel>Studiengang</InputLabel>\n                             <Select  error={studiengangValidationFailed} value={studiengang} onChange={this.handleChangeStudiengang}>\n                                <MenuItem value='Audiovisuelle Medien'>Audiovisuelle Medien</MenuItem>\n                                <MenuItem value='Crossmedia-Redaktion/Public Relations'>Crossmedia-Redaktion/Public Relations</MenuItem>\n                                <MenuItem value='Deutsch-chinesischer Studiengang Medien und Technologie'>Deutsch-chinesischer Studiengang Medien und Technologie</MenuItem>\n                                <MenuItem value='Informationsdesign'>Informationsdesign</MenuItem>\n                                <MenuItem value='Infomationswissenschaften'>Infomationswissenschaften</MenuItem>\n                                <MenuItem value='Integriertes Produktdesign'>Integriertes Produktdesign</MenuItem>\n                                <MenuItem value='Mediapublishing'>Mediapublishing</MenuItem>\n                                <MenuItem value='Medieninformatik'>Medieninformatik</MenuItem>\n                                <MenuItem value='Medienwirtschaft'>Medienwirtschaft</MenuItem>\n                                <MenuItem value='Mobile Medien'>Mobile Medien</MenuItem>\n                                <MenuItem value='Online-Medien-Management'>Online-Medien-Management</MenuItem>\n                                <MenuItem value='Print Media Technologies'>Print Media Technologies</MenuItem>\n                                <MenuItem value='Verpackungstechnik'>Verpackungstechnik</MenuItem>\n                                <MenuItem value='Werbung & Marktkommunikation'>Werbung & Marktkommunikation</MenuItem>\n                                <MenuItem value='Wirtschaftsinformatik und digitale Medien'>Wirtschaftsinformatik und digitale Medien</MenuItem>\n                                <MenuItem value='Wirtschaftsingenieurwesen Medien'>Wirtschaftsingenieurwesen Medien</MenuItem>\n                            </Select>\n                   </FormControl>\n                   \n                  <TextField className={classes.textfield} autoFocus type='text' required fullWidth margin='normal' id='alter' label='Alter:' value={alter} \n                    onChange={this.numberValueChange} error={alterValidationFailed} \n                    helperText={alterValidationFailed ? 'The age must contain at least one character' : ' '} />\n\n                  <TextField className={classes.textfield} autoFocus type='text' required fullWidth margin='normal' id='geschlecht' label='Geschlecht:' value={geschlecht} \n                    onChange={this.textFieldValueChange} error={geschlechtValidationFailed} \n                    helperText={geschlechtValidationFailed ? 'The gender must contain at least one character' : ' '} /> \n                  \n                  <FormControl className={classes.formControl}>\n                            <InputLabel>Interesse an einer Lerngruppe?</InputLabel>\n                             <Select required error={lerngruppeValidationFailed} value={lerngruppe} onChange={this.handleChangeLerngruppe}>\n                                <MenuItem value='1'>Ja!</MenuItem>\n                                <MenuItem value='0'>Nein!</MenuItem>\n                            </Select>\n                   </FormControl>\n\n                </form>\n                <LoadingProgress show={addingInProgress || updatingInProgress} />\n                {\n\n                  <ContextErrorMessage error={updatingError}\n                      contextErrorMsg={`Du konntest leider nicht registriert werden :/`}\n                      onReload={this.registrieren} />\n\n                }\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.handleClose} color='secondary'>\n                            Abbrechen\n                </Button>\n                {\n                    <Button disabled={nameValidationFailed || vornameValidationFailed || semesterValidationFailed || studiengangValidationFailed || alterValidationFailed || geschlechtValidationFailed || lerngruppeValidationFailed } variant='contained'\n                          onClick={this.registrieren} color='primary'>\n                          Jetzt registrieren\n                    </Button>\n                }\n              </DialogActions>\n            </Dialog>\n            : null\n        );\n      }\n    \n}\n\n/** Component specific styles */\nconst styles = theme => ({\n\troot: {\n\t\tmargin: theme.spacing(2)\n\t}\n});\n\n/** PropTypes */\nRegistrierungForm.propTypes = {\n\t/** @ignore */\n  classes: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired,\n\t/** \n\t * Handler function, which is called if the user wants to sign in.\n\t */\n  \n\tonSignIn: PropTypes.func.isRequired,\n}\n\nexport default withRouter(withStyles(styles)(RegistrierungForm));","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/MeinProfil.js",["234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/KonversationListeEintrag.js",["254","255","256","257","258"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid, Link } from '@material-ui/core';\nimport Nachricht from './NachrichtListe';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useParams } from \"react-router-dom\";\n//import KonversationListe from './KonversationListe';\nimport LernpartnerAPI from '../api/LernpartnerAPI';\nimport ChatVerlassenForm from './dialogs/ChatVerlassenForm';\n\n\n\n/** \n * \n * Es wird ein einzelne Konversationen von einer Person dargestellt\n * \n * Hierfür wird der Name der Konversation angezeigt\n * \n */\n\nclass KonversationListeEintrag extends Component {\n\n    constructor(props){\n        super(props);\n\n        // initiiere einen leeren state\n        this.state = {\n            konversation: props.konversation,\n            konversationID: props.konversation.id,\n\n            currentPersonName: \" und \" + props.currentPerson.vorname + \" \" + props.currentPerson.name,\n            nameNeu: null,\n            str: props.konversation.name,\n            showKonversation: false,\n            showChatVerlassenForm: false, \n            teilnahmeChat: null,\n            //showProfil: false,\n        };\n    }\n\n// API Anbindung um Konversationen des Students vom Backend zu bekommen \n  getTeilnahmeChat = () => {\n    LernpartnerAPI.getAPI().getTeilnahmeChatByKonversationAndPerson(this.state.konversationID, this.props.currentPerson.getID())\n    .then(teilnahmeBO =>\n        this.setState({\n            teilnahmeChat: teilnahmeBO,\n            error: null,\n            loadingInProgress: false,\n        })).catch(e =>\n            this.setState({\n                teilnahmeChat: null,\n                error: e,\n                loadingInProgress: false,\n            }));\n    this.setState({\n        error: null,\n        loadingInProgress: true,\n        loadingKonversationenError: null\n    });\n  }\n    \n\n/** Handles onChange events of the underlying ExpansionPanel */\nexpansionPanelStateChanged = () => {\n  this.props.onExpandedStateChange(this.state.konversation);\n  }\n\n//Handles the onClick event of the show Konversation button\nshowKonversationButtonClicked = (event) => {\n  this.setState({\n    showKonversation: true\n  });\n}\n\n//Handles the onClick event of the show Konversation button\nverlassenButtonClicked = (event) => {\n  this.setState({\n    showChatVerlassenForm: true\n  });\n}\n\nnameAnpassen = () => {\n    this.setState({\n        nameNeu: this.state.konversation.name.replace(this.state.currentPersonName,''),\n    });\n}\n\n/** Handles the onClose event of the CustomerDeleteDialog */\nverlasseChatFormClosed = (teilnahmeChat) => {\n   // if customer is not null, delete it\n  if (teilnahmeChat) {\n    this.props.onTeilnahmeChatDeleted(teilnahmeChat);\n  } else {\n  // Don´t show the dialog\n    this.setState({\n        showChatVerlassenForm: false\n    });\n}\n}\n\n\n// Lifecycle methode, wird aufgerufen wenn componente in den DOM eingesetzt wird\n  componentDidMount() {\n    this.nameAnpassen();\n    this.getTeilnahmeChat();\n  }\n    \n\nrender() {\n  const { classes, expandedState, currentPerson} = this.props;\n  const { teilnahmeChat, konversation, konversationID, currentPersonName, nameNeu, showKonversation, showChatVerlassenForm } = this.state;\n  console.log(currentPerson)\n  console.log(konversation)\n  console.log(currentPersonName)\n  console.log(konversation.getname())\n  console.log(nameNeu)\n  console.log(currentPerson)\n  console.log(teilnahmeChat)\n\n  return(\n    <div>\n        <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            id={`konversation${konversation.getID()}accountpanel-header`}\n          >\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\n              <Typography variant='body1'>\n                  {nameNeu}\n              </Typography>\n            </Grid>\n              <Typography variant='body1'>\n                  Optionen\n              </Typography>\n              </AccordionSummary>\n                <AccordionDetails>\n                <ButtonGroup variant='text' size='small'>\n                <Link component={RouterLink} to={{\n                pathname: '/chat',\n                konversation: konversation\n                }} >\n                  \n                <Button color='primary' onClick={this.showKonversationButtonClicked}>\n                          Chat ansehen\n                </Button>\n                </Link>\n                        \n                <Button color='secondary' onClick={this.verlassenButtonClicked}>\n                        Chat verlassen\n                </Button>\n                </ButtonGroup>\n              </AccordionDetails>\n              </Accordion>\n             <ChatVerlassenForm show={showChatVerlassenForm} teilnahmeChat={teilnahmeChat} onClose={this.verlasseChatFormClosed}/>\n            </div>\n            \n        );\n  \n}\n  \n    \n}\n\n/** Component specific styles */\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  customerFilter: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  }\n});\n\n/** PropTypes */\nKonversationListeEintrag.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  /** @ignore */\n  location: PropTypes.object.isRequired,\n  currentPerson: PropTypes.object.isRequired,\n  konversation: PropTypes.object.isRequired,\n}\n\n\n\nexport default withStyles(styles)(KonversationListeEintrag);","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LerngruppeBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/NachrichtBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/VorschlagBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/PersonBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeGruppeBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LernvorliebenBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/ProfilBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeChatBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/KonversationBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LernfachBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/VorschlagListe.js",["259","260","261","262","263","264"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'\nimport { withStyles, Button, TextField, InputAdornment, IconButton, Grid, Typography } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\nimport VorschlagListeEintrag from './VorschlagListeEintrag';\n//import SaveIcon from '@material-ui/icons/Save';\n//import Table from '@material-ui/core/Table';\n//import TableBody from '@material-ui/core/TableBody';\n//import TableCell from '@material-ui/core/TableCell';\n//import TableContainer from '@material-ui/core/TableContainer';\n//import TableHead from '@material-ui/core/TableHead';\n//import TableRow from '@material-ui/core/TableRow';\n//import Paper from '@material-ui/core/Paper';\n\n\n\n/**\n * Es werden alle Vorschläge des aktuell eingeloggten Studenten angezeigt\n * \n * @see See [VorschlagListeEintrag](#vorschaglisteeintrag)\n * \n * Hierfür werden alle Vorschläge des aktuell eingeloggten Student geladen und in die Componente VorschlagListeEintrag gemappt\n * \n */\n\n\nclass VorschlagListe extends Component {\n\n    constructor(props){\n        super(props);\n\n        // console.log(props);\n        let expandedID = null;\n\n        if (this.props.location.expandVorschlag) {\n        expandedID = this.props.location.expandVorschlag.getID();\n        }\n\n        // initiiere einen leeren state\n        this.state = {\n            vorschlaege : [],\n            //currentPersonName: null,\n            error: null,\n            loadingInProgress: false, \n            expandedVorschlagID: expandedID,\n        };\n    }\n\n\n    // API Anbindung um Vorschläge des Students vom Backend zu bekommen \n    getVorschlaege = () => {\n            LernpartnerAPI.getAPI().getVorschlaegeByPersonByLernfach(this.props.currentPerson.id, this.props.lernfach)\n            .then(vorschlagBOs =>\n                this.setState({\n                    vorschlaege: vorschlagBOs,\n                    error: null,\n                    loadingInProgress: false,\n                })).catch(e =>\n                    this.setState({\n                        vorschlaege: [],\n                        error: e,\n                        loadingInProgress: false,\n                    }));\n            this.setState({\n                error: null,\n                loadingInProgress: true,\n                loadingVorschlaegeError: null\n            });\n    }\n\n    // Lifecycle methode, wird aufgerufen wenn componente in den DOM eingesetzt wird\n    componentDidMount() {\n        \n\n    }\n    \n    /** \n     * Handles onExpandedStateChange events from the VorschlagListeEintrag component. Toggels the expanded state of \n     * the VorschlagListeEintrag of the given VorschlagBO.\n     * \n     * @param {vorschlag} VorschlagBO of the VorschlagListeEintrag to be toggeled\n     */\n    onExpandedStateChange = vorschlag => {\n        // console.log(vorschlagID);\n        // Set expandend Vorschlag Eintrag to null by default\n        let newID = null;\n\n        // If same vorschlag entry is clicked, collapse it else expand a new one\n        if (vorschlag.getID() !== this.state.expandedVorschlagID) {\n        // Expand the customer entry with customerID\n        newID = vorschlag.getID();\n        }\n        // console.log(newID);\n        this.setState({\n        expandedVorschlagID: newID,\n        });\n    }\n\n    render() {\n        const { show, classes, currentPerson, lernfach } = this.props;\n        const { vorschlaege, expandedVorschlagID, error, loadingInProgress}  = this.state;\n        //console.log(lernfach)\n        return (\n          show ?\n          <div className={classes.root}>\n            <h1>Hier sind alle Matches für dein ausgewähltes Lernfach:</h1>\n            <Button color=\"primary\" onClick= {this.getVorschlaege}>Matches generieren</Button>\n            { \n              // Show the list of VorschlagListeEintrag components\n              // Do not use strict comparison, since expandedVorschlagID maybe a string if given from the URL parameters\n  \n              vorschlaege.map(vorschlag =>\n                <VorschlagListeEintrag key={vorschlag.getID()} vorschlag={vorschlag} currentPerson={currentPerson} expandedState={expandedVorschlagID === vorschlag.getID()}\n                  onExpandedStateChange={this.onExpandedStateChange}\n                />)\n            }\n            <LoadingProgress show={loadingInProgress} />\n            <ContextErrorMessage error={error} contextErrorMsg={`Sorry, deine Vorschläge konnten nicht geladen werden!`} onReload={this.getVorschlaege} />\n          </div>\n          : null\n        );\n      }\n    }\n\n\n/** Component specific styles */\nconst styles = theme => ({\n    root: {\n      width: '100%',\n    },\n    customerFilter: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(1),\n    }\n  });\n\n/** PropTypes */\nVorschlagListe.propTypes = {\n    /** @ignore */\n    classes: PropTypes.object.isRequired,\n    /** @ignore */\n    location: PropTypes.object.isRequired,\n    show: PropTypes.bool.isRequired,\n}\n\n\n\nexport default withRouter(withStyles(styles)(VorschlagListe));","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfileDropDown.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/GruppenListeEintrag.js",["265","266","267","268","269","270","271","272","273","274","275"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n//import LernpartnerAPI from '../api/LernpartnerAPI'\nimport Profil from './Profil';\nimport { withRouter } from 'react-router-dom';\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid, List, ListItem } from '@material-ui/core';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n//import InputLabel from '@material-ui/core/InputLabel';\n//import MenuItem from '@material-ui/core/MenuItem';\n//import FormControl from '@material-ui/core/FormControl';\n//import Select from '@material-ui/core/Select';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\nimport GruppeVerlassenDialog from './dialogs/GruppeVerlassenDialog';\nimport GruppenBearbeitenForm from './dialogs/GruppenBearbeitenForm';\n\n//import LernpartnerAPI from '../api/LernpartnerAPI'\nimport { LernpartnerAPI } from '../api';\n\n\n/**\n * Es wird ein einzelner Vorschlag für einen passenden Lernpartner oder /-gruppe mit allen not wendigen Informationen dargestellt\n *\n * Hierfür werden Profilname, Alter, Geschlecht, Semester, Lernfach und der Prozentsatz des Matches angezeigt\n *\n */\n\nclass GruppenListeEintrag extends Component {\n    constructor(props){\n        super(props);\n\n        // initiiere einen leeren state\n        this.state = {\n            lerngruppe: this.props.lerngruppe,\n            profil: null,\n            lernvorlieben: null,\n            gruppeName: this.props.lerngruppe.name,\n            teilnahmeGruppe: null,\n            profilID: this.props.lerngruppe.profil,\n            gruppeLernvorliebenID: null,\n            showProfil: false,\n            showLerngruppeVerlassenDialog: false,\n            //showTeilnehmer: false,\n            //showNachrichtenListe: false,\n            showGruppenBearbeitenForm: false,\n            loadingInProgress: false,\n            error: null,\n            showLerngruppeForm: false\n        };\n    }\n\n    /** Handles onChange events of the underlying ExpansionPanel */\n    expansionPanelStateChanged = () => {\n    this.props.onExpandedStateChange(this.props.lerngruppe);\n    }\n\n    /** Handles the onClick event of the Profil ansehen button */\n    showProfilButtonClicked = (event) => {\n        event.stopPropagation();\n        this.setState({\n            showProfil: true\n        });\n    }\n\n        /** TeilnahmeGruppe holen fürs Verlassen */\n  getTeilnahmeGruppe = () => {\n    LernpartnerAPI.getAPI().getTeilnahmeGruppeByPersonByGruppe(this.props.currentPerson.getID(), this.props.lerngruppe.id)\n    .then(teilnahmeGruppeBO => {\n      this.setState({\n        teilnahmeGruppe: teilnahmeGruppeBO,              // disable loading indicator                 // no error message\n      });\n    }).catch(e =>\n      this.setState({\n        teilnahmeGruppe: null,              // disable loading indicator                     // show error message\n      })\n    );\n    }\n\n    getGruppenProfil = () => {\n\t\tLernpartnerAPI.getAPI().getProfil(this.state.profilID)\n\t\t\t.then(profilBO =>\n\t\t\t\tthis.setState({\n                    profil: profilBO,\n                    gruppeLernvorliebenID: profilBO.lernvorlieben_id,\n                    error: null,\n                    loadingInProgress: false,\n                })).then (()=> {\n                    this.getGruppenLernvorlieben();\n                })\n                .catch(e =>\n                    this.setState({\n                        profil: null,\n                        gruppeLernvorliebenID: null,\n                        error: e,\n                        loadingInProgress: false,\n                 }));\n\n      // set loading to true\n      this.setState({\n        loadingInProgress: true,\n        loadingError: null\n      });\n    }\n\n   getGruppenLernvorlieben = () => {\n   //console.log(profil)\n    LernpartnerAPI.getAPI().getLernvorlieben(this.state.gruppeLernvorliebenID)\n    .then(lernvorliebenBO =>\n      this.setState({\n            lernvorlieben: lernvorliebenBO,\n            loadingInProgress: false,\n            error: null\n      }))\n      .catch(e =>\n        this.setState({ // Reset state with error from catch\n          lernvorlieben: null,\n          loadingInProgress: false,\n          error: e,\n        })\n      );\n\n    // set loading to true\n    this.setState({\n      loadingInProgress: true,\n      loadingError: null\n    });\n  }\n\n\n\n\n    /** Handles the onClick event of the delete customer button */\n    verlasseLerngruppeButtonClicked = (event) => {\n        event.stopPropagation();\n        this.setState({\n            showLerngruppeVerlassenDialog: true\n        });\n    }\n\n    /** Handles the onClose event of the CustomerDeleteDialog */\n    verlasseLerngruppeDialogClosed = (teilnahmeGruppe) => {\n        // if customer is not null, delete it\n        if (teilnahmeGruppe) {\n            this.props.onTeilnahmeGruppeDeleted(teilnahmeGruppe);\n        };\n\n        // Don´t show the dialog\n        this.setState({\n            showLerngruppeVerlassenDialog: false\n        });\n    }\n\n\n  bearbeitenButtonClicked = (event) => {\n    this.setState({\n      showGruppenBearbeitenForm: true\n    });\n  }\n\n  bearbeitenFormClosed = (profil) => {\n    this.getGruppenProfil();\n    if (profil) {\n        this.setState({\n            profil: profil,\n            showGruppenBearbeitenForm: false,\n        });\n    } else {\n        this.setState({\n          showGruppenBearbeitenForm: false\n        })\n\n    }\n  }\n\n\n\n     /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\n   componentDidMount() {\n       this.getTeilnahmeGruppe();\n       this.getGruppenProfil();\n   }\n\n  \n    render(){\n\n          const { classes, expandedState, currentPerson } = this.props;\n          //const { lerngruppe, gruppeName, profilID, teilnahmeGruppe, showProfil, showLerngruppeVerlassenDialog, showLerngruppeForm } = this.state;\n\n\n          const { lerngruppe, lernvorlieben, gruppeName, profilID, profil, teilnahmeGruppe, showProfil, showLerngruppeVerlassenDialog, showGruppenBearbeitenForm, showLerngruppeForm, loadingInProgress, error } = this.state;\n            console.log(lerngruppe)\n            console.log(profil)\n            console.log(lernvorlieben)\n            console.log(profilID)\n\n          return (\n            <div>\n              <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  id={`lerngruppe${lerngruppe.getID()}accountpanel-header`}>\n                  <Grid container spacing={1} justify='flex-start' alignItems='center'>\n                    <Typography variant='body1'>\n                        {lerngruppe.getname()}\n                    </Typography>\n                  </Grid>\n                    <Button style={{ width : 250, color: \"red\"}} color='secondary' onClick={this.verlasseLerngruppeButtonClicked}>\n                        Gruppe verlassen\n                    </Button>\n                    \n                    \n                  </AccordionSummary>\n                 <AccordionDetails>\n                  <List>\n                    <ListItem>\n                  <Button color=\"primary\" onClick= {this.bearbeitenButtonClicked}>Gruppenprofil bearbeiten</Button>\n                  </ListItem>\n                  <ListItem>\n                  <Profil user={lerngruppe}/>\n                  </ListItem>\n                  </List>\n                </AccordionDetails>\n              </Accordion>\n              \n              <GruppeVerlassenDialog show={showLerngruppeVerlassenDialog} teilnahmeGruppe={teilnahmeGruppe} currentPerson={currentPerson} onClose={this.verlasseLerngruppeDialogClosed}/>\n              <GruppenBearbeitenForm show={showGruppenBearbeitenForm} lerngruppe={lerngruppe} currentProfil ={profil} lernvorlieben={lernvorlieben}  onClose={this.bearbeitenFormClosed}/>\n\n            </div>\n          );\n        }\n}\n\n/** PropTypes */\nGruppenListeEintrag.propTypes = {\n  classes: PropTypes.object.isRequired,\n  vorschlag: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired,\n  expandedState: PropTypes.bool.isRequired,\n  onExpandedStateChange: PropTypes.func.isRequired,\n  onTeilnahmeGruppeDeleted: PropTypes.func.isRequired\n}\n\n\nexport default (GruppenListeEintrag);","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/MeinProfilForm.js",["276","277","278","279","280","281","282","283","284","285","286","287"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/index.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/BusinessObject.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/NamedBusinessObject.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/VorschlagListeEintrag.js",["288","289","290","291","292","293"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppenForm.js",["294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppeVerlassenDialog.js",["312"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ContextErrorMessage from './ContextErrorMessage';\nimport LoadingProgress from './LoadingProgress';\nimport LernpartnerAPI from '../../api/LernpartnerAPI'\n\n\nclass GruppeVerlassenDialog extends Component {\n\n  constructor(props) {\n    super(props);\n\n    // Init the state\n    this.state = {\n      verlassenInProgress: false,\n      verlassenError: null\n    };\n  }\n\n  /** Gruppe verlassen */\n  verlasseGruppe = () => {\n    LernpartnerAPI.getAPI().deleteTeilnahmeGruppe(this.props.teilnahmeGruppe.getID())\n    .then(teilnahmeGruppe => {\n      this.setState({\n        verlassenInProgress: false,              // disable loading indicator\n        verlassenError: null                     // no error message\n      });\n      this.props.onClose(this.props.teilnahmeGruppe);  // call the parent with the deleted customer\n    }).catch(e =>\n      this.setState({\n        verlassenInProgress: false,              // disable loading indicator\n        verlassenError: e                        // show error message\n      })\n    );\n\n    // set loading to true\n    this.setState({\n      verlassenInProgress: true,                 // show loading indicator\n      verlassenError: null                       // disable error message\n    });\n  }\n\n  /** Handles the close / cancel button click event */\n  handleClose = () => {\n    // console.log(event);\n    this.props.onClose(null);\n  }\n\n  /** Renders the component */\n  render() {\n    const { classes, teilnahmeGruppe, lerngruppeID, show } = this.props;\n    const { verlassenInProgress, verlassenError } = this.state;\n    //console.log(verlassenInProgress)\n    console.log(teilnahmeGruppe)\n    //console.log(teilnahmeGruppe.id)\n\n    return (\n      show ?\n        <Dialog open={show} onClose={this.handleClose}>\n          <DialogTitle id='delete-dialog-title'>Gruppe verlassen\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\n              <CloseIcon />\n            </IconButton>\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              <p>Möchtest du wirklich die Gruppe verlassen?</p>\n              <p style={{color: \"red\", fontSize: 14}}>!!!Achtung: Wenn du die Gruppe verlässt, verlässt du auch automatisch den Chat!!!</p>\n            </DialogContentText>\n            <LoadingProgress show={verlassenInProgress} />\n            <ContextErrorMessage error={verlassenError} contextErrorMsg={`Die Gruppe konnte nicht verlassen werden.`}\n              onReload={this.verlasseGruppe} />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color='secondary'>\n              Abbrechen\n            </Button>\n            <Button variant='contained' onClick={this.verlasseGruppe} color='primary'>\n              Verlassen\n            </Button>\n          </DialogActions>\n        </Dialog>\n        : null\n    );\n  }\n}\n\n\n/** Component specific styles */\nconst styles = theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  }\n});\n\n/** PropTypes */\nGruppeVerlassenDialog.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  /** The CustomerBO to be deleted */\n  teilnahmeGruppe: PropTypes.object.isRequired,\n  /** If true, the dialog is rendered */\n  show: PropTypes.bool.isRequired,\n  /**\n   * Handler function which is called, when the dialog is closed.\n   * Sends the deleted CustomerBO as parameter or null, if cancel was pressed.\n   *\n   * Signature: onClose(CustomerBO customer);\n   */\n  onClose: PropTypes.func.isRequired,\n}\n\nexport default withStyles(styles)(GruppeVerlassenDialog);\n","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/GruppenBearbeitenForm.js",["313","314","315","316","317","318"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Card,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    } from '@material-ui/core';\n\nimport { LernpartnerAPI } from '../../api';\nimport { withRouter } from 'react-router-dom';\nimport MultiSelectLernfaecher from './MultiSelectLernfaecher';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ContextErrorMessage from './ContextErrorMessage';\nimport LoadingProgress from './LoadingProgress';\n\n\n/**\n * Dieses Form zeigt ein Dialog zum erstellen/updaten von ProjektBO's. Falls ein Projekt bereits besteht wird das Formular als edit konfiguriert.\n * Falls das Projekt Objekt null ist wird das Formular zum erstellen eines PojektBO's konfiguriert.\n * Dafuer wird auf die API zugegriffen (Backend zugriff)\n *\n * @see See Matieral-UIs [Dialog] (https://material-ui.com/components/dialogs)\n */\n\nclass GruppenBearbeitenForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        //initiiere den state\n        this.state = {\n\n            lerngruppe: this.props.lerngruppe,\n            lernvorlieben: this.props.lernvorlieben,\n            name: null,\n            nameValidationFailed: false,\n            nameEdited: false,\n\n\n            tageszeiten: null,\n            tageszeitenValidationFailed: false,\n            tageszeitenEdited: false,\n\n            tage: null,\n            tageValidationFailed: false,\n            tageEdited: false,\n\n            frequenz: null,\n            frequenzValidationFailed: false,\n            frequenzEdited: false,\n\n            lernart: null,\n            lernartValidationFailed: false,\n            lernartEdited: false,\n\n            gruppengroesse: null,\n            gruppengroesseValidationFailed: false,\n            gruppengroesseEdited: false,\n\n            lernort: null,\n            lernortValidationFailed: false,\n            lernortEdited: false,\n\n            lernfaecher: [],\n            lernfaecherValidationFailed: false,\n            lernfaecherEdited: false,\n\n            gruppe: 1,\n\n            updatingError: null,\n            updatingInProgress: false,\n\n\n        };\n        // State speichern falls cancel\n        this.baseState = this.state;\n        this.handleChangeTageszeiten = this.handleChangeTageszeiten.bind(this);\n        this.handleChangeTage = this.handleChangeTage.bind(this);\n        this.handleChangeFrequenz = this.handleChangeFrequenz.bind(this);\n        this.handleChangeLernart = this.handleChangeLernart.bind(this);\n        this.handleChangeGruppengroesse = this.handleChangeGruppengroesse.bind(this);\n        this.handleChangeLernort = this.handleChangeLernort.bind(this);\n        this.onChangeLernfaecher = this.onChangeLernfaecher.bind(this);\n\n    }\n\n\n\n    /** Updates the person */\n    updatenGruppe = () => {\n        let lerngruppe = this.props.lerngruppe;\n        lerngruppe.id = this.state.lerngruppe.id\n        lerngruppe.name = this.state.name\n        lerngruppe.profil = this.state.lerngruppe.profil\n\n        LernpartnerAPI.getAPI().updateLerngruppe(this.state.lerngruppe.id, this.state.name, this.state.lerngruppe.profil).then(lerngruppe => {\n            // Backend call sucessfull\n            // reinit the dialogs state for a new empty customer\n            this.setState(this.baseState);\n            this.props.onClose(lerngruppe); // call the parent with the customer object from backend\n        }).catch(e =>\n            this.setState({\n                updatingInProgress: false,    // disable loading indicator\n                updatingError: e              // show error message\n            })\n        );\n\n        // set loading to true\n        this.setState({\n            updatingInProgress: true,       // show loading indicator\n            updatingError: null             // disable error message\n      });\n    }\n\n/** Updates the profil */\nupdatenProfil = () => {\n  let profil = this.props.currentProfil;\n  LernpartnerAPI.getAPI().updateProfil(profil.id, this.state.gruppe, this.state.lernfaecher, profil.lernvorlieben_id\n  ).then(profil => {\n      // Backend call sucessfull\n      // reinit the dialogs state for a new empty customer\n      this.setState(this.baseState);\n      this.props.onClose(profil); // call the parent with the customer object from backend\n  }).catch(e =>\n      this.setState({\n          updatingInProgress: false,    // disable loading indicator\n          updatingError: e              // show error message\n      })\n  );\n\n  // set loading to true\n  this.setState({\n      updatingInProgress: true,       // show loading indicator\n      updatingError: null             // disable error message\n});\n}\n\n\n  /** Updates the person */\n    updatenLernvorlieben = () => {\n        let lernvorlieben = this.props.lernvorlieben;\n        lernvorlieben.tageszeiten_id = this.state.tageszeiten\n        lernvorlieben.tage_id = this.state.tage\n        lernvorlieben.frequenz_id = this.state.frequenz\n        lernvorlieben.lernart_id = this.state.lernart\n        lernvorlieben.gruppengroesse_id = this.state.gruppengroesse\n        lernvorlieben.lernort_id = this.state.lernort\n\n        LernpartnerAPI.getAPI().updateLernvorlieben(lernvorlieben.id, this.state.tageszeiten, this.state.tage, this.state.frequenz, this.state.lernart, this.state.gruppengroesse, this.state.lernort)\n        .then(lernvorlieben => {\n            // Backend call sucessfull\n            // reinit the dialogs state for a new empty customer\n            this.setState(this.baseState);\n            this.props.onClose(lernvorlieben); // call the parent with the customer object from backend\n        }).catch(e =>\n            this.setState({\n                updatingInProgress: false,    // disable loading indicator\n                updatingError: e              // show error message\n            })\n        );\n\n        // set loading to true\n        this.setState({\n            updatingInProgress: true,       // show loading indicator\n            updatingError: null             // disable error message\n      });\n    }\n\n\n\t/**\n\t * Handles the click event of the sign in button an calls the prop onSignIn handler\n\n\thandleSignInButtonClicked = () => {\n\t\tthis.props.onSignIn();\n\t}\n    */\n   /** Handles value changes of the forms textfields and validates them */\n    textFieldValueChange = (event) => {\n        const value = event.target.value;\n\n        let error = false;\n        if (value.trim().length === 0) {\n        error = true;\n        }\n\n        this.setState({\n        [event.target.id]: event.target.value,\n        [event.target.id + 'ValidationFailed']: error,\n        [event.target.id + 'Edited']: true\n        });\n    }\n\n    //Setzen der Werte aus der Validierung\n    setStateValueChange(event, error) {\n      this.setState({\n          [event.target.id]: event.target.value,\n          [event.target.id + 'ValidationFailed']: error,\n          [event.target.id + 'Edited']: true\n      });\n  }\n\n    // Validierung der Textfeldaenderungen nur numerische Werte\n    numberValueChange = (event) => {\n        const value = event.target.value;\n        const re = /^[0-9]{1,10}$/;\n\n        let error = false;\n        if (value.trim().length === 0) {\n            error = true;\n        }\n        if (re.test(event.target.value) === false) {\n            error = true;\n        }\n        this.setStateValueChange(event, error);\n    }\n\n    //Setzen des Status, bei schließen des Dialogs\n      handleClose = () => {\n        this.setState(this.baseState);\n        this.props.onClose(null);\n    }\n\n\n    handleChangeTageszeiten(event) {\n      this.setState({tageszeiten: event.target.value});\n    }\n\n    handleChangeTage(event) {\n      this.setState({tage: event.target.value});\n    }\n\n    handleChangeFrequenz(event) {\n      this.setState({frequenz: event.target.value});\n    }\n\n    handleChangeLernart(event) {\n      this.setState({lernart: event.target.value});\n    }\n\n    handleChangeGruppengroesse(event) {\n      this.setState({gruppengroesse: event.target.value});\n    }\n\n    handleChangeLernort(event) {\n      this.setState({lernort: event.target.value});\n    }\n\n    onChangeLernfaecher(newLernfaecher) {\n      console.log(newLernfaecher)\n      this.setState({\n        lernfaecher: newLernfaecher\n      \n    })\n  }\n\n\n\n\t/** Renders the sign in page, if user objext is null */\n\t/** Renders the component */\n    render() {\n        const { classes, show, currentProfil, currentPerson, lerngruppe, lernvorlieben } = this.props;\n        console.log(currentProfil)\n        const { name, nameValidationFailed, tageszeiten, tageszeitenValidationFailed, tage, tageValidationFailed, frequenz, frequenzValidationFailed, lernart, lernartValidationFailed, gruppengroesse, gruppengroesseValidationFailed,\n          lernort, lernortValidationFailed, lernfaecher, lernfaecherValidationFailed, addingInProgress, updatingInProgress, updatingError} = this.state;\n\n\n        let title = 'Gruppenprofil bearbeiten';\n        let header = 'Bitte gib die neuen Daten ein:';\n\n        return (\n            show ?\n            <Dialog open={show}>\n              <DialogTitle id='form-dialog-title'>{title}\n                  <IconButton className={classes.closeButton} onClick={this.handleClose}>\n                      <CloseIcon />\n                  </IconButton>\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  {header}\n                </DialogContentText>\n                <form className={classes.root} noValidate autoComplete='off'>\n\n                  <TextField className={classes.textfield} autoFocus type='text' required fullWidth margin='normal' id='name' label='Gruppenname:' value={name}\n                    onChange={this.textFieldValueChange} error={nameValidationFailed}\n                    helperText={nameValidationFailed ? 'The last name must contain at least one character' : ' '} />\n                  <br/>\n                   <FormControl required fullWidth margin='normal' className={classes.formControl}>\n                            <InputLabel>Welche Tageszeit präferierst du?</InputLabel>\n                             <Select required error={tageszeitenValidationFailed} value={tageszeiten} onChange={this.handleChangeTageszeiten}>\n                                <MenuItem value='1'>Morgens</MenuItem>\n                                <MenuItem value='2'>Mittags</MenuItem>\n                                <MenuItem value='3'>Abends</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/>\n\n                   <FormControl required fullWidth margin='normal' className={classes.formControl}>\n                            <InputLabel>Welche Tage präferierst du?</InputLabel>\n                             <Select required error={tageValidationFailed} value={tage} onChange={this.handleChangeTage}>\n                                <MenuItem value='1'>Unter der Woche</MenuItem>\n                                <MenuItem value='2'>Am Wochenende</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/>\n\n                   <FormControl required fullWidth margin='normal' className={classes.formControl}>\n                            <InputLabel>Welche Frequenz präferierst du?</InputLabel>\n                             <Select required error={frequenzValidationFailed} value={frequenz} onChange={this.handleChangeFrequenz}>\n                                <MenuItem value='1'>Wöchentlich</MenuItem>\n                                <MenuItem value='2'>Mehrmals die Woche</MenuItem>\n                                <MenuItem value='3'>Alle zwei Wochen</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/>\n\n                   <FormControl required fullWidth margin='normal' className={classes.formControl}>\n                            <InputLabel>Welche Lernart präferierst du?</InputLabel>\n                             <Select required error={lernartValidationFailed} value={lernart} onChange={this.handleChangeLernart}>\n                                <MenuItem value='1'>Visuell</MenuItem>\n                                <MenuItem value='2'>Auditiv</MenuItem>\n                                <MenuItem value='3'>Motorisch</MenuItem>\n                                <MenuItem value='4'>Kommunikativ</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/>\n\n                   <FormControl required fullWidth margin='normal' className={classes.formControl}>\n                            <InputLabel>Welche Gruppengroesse präferierst du?</InputLabel>\n                             <Select required error={gruppengroesseValidationFailed} value={gruppengroesse} onChange={this.handleChangeGruppengroesse}>\n                                <MenuItem value='1'>Bis zu 3 Personen</MenuItem>\n                                <MenuItem value='2'>3-5 Personen</MenuItem>\n                                <MenuItem value='3'>Über 5 Personen</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/>\n\n                   <FormControl required fullWidth margin='normal' className={classes.formControl}>\n                            <InputLabel>Welchen Lernort präferierst du?</InputLabel>\n                             <Select required error={lernortValidationFailed} value={lernort} onChange={this.handleChangeLernort}>\n                                <MenuItem value='1'>Remote</MenuItem>\n                                <MenuItem value='2'>Hochschule</MenuItem>\n                                <MenuItem value='3'>Bibliothek</MenuItem>\n                                <MenuItem value='4'>Cafe</MenuItem>\n                            </Select>\n                   </FormControl>\n                   <br/>\n\n                   <FormControl required fullWidth margin='normal' className={classes.formControl}>\n                        <MultiSelectLernfaecher onChangeLernfaecher = {this.onChangeLernfaecher}/>\n                    \n                    </FormControl>\n                   <br/>\n\n\n\n                </form>\n                <LoadingProgress show={addingInProgress || updatingInProgress} />\n                {\n\n                  <ContextErrorMessage error={updatingError}\n                      contextErrorMsg={`Dein Profil konnte nicht bearbeitet werden :/`}\n                      onReload={this.updatenGruppe} />\n\n                }\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.handleClose} color='secondary'>\n                            Abbrechen\n                </Button>\n                {\n                    <Button disabled={nameValidationFailed || tageszeitenValidationFailed || tageValidationFailed || frequenzValidationFailed || lernartValidationFailed || gruppengroesseValidationFailed || lernortValidationFailed || lernfaecherValidationFailed } variant='contained'\n                          onClick={ () => {this.updatenGruppe(); this.updatenProfil(); this.updatenLernvorlieben();}} color='primary'>\n                          Änderungen abschließen\n                    </Button>\n                }\n              </DialogActions>\n            </Dialog>\n            : null\n        );\n      }\n\n}\n\n/** Component specific styles */\nconst styles = theme => ({\n\troot: {\n\t\tmargin: theme.spacing(2)\n\t}\n});\n\n/** PropTypes */\nGruppenBearbeitenForm.propTypes = {\n\t/** @ignore */\n  classes: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired,\n\t/**\n\t * Handler function, which is called if the user wants to sign in.\n\t */\n\n\tonSignIn: PropTypes.func.isRequired,\n}\n\nexport default withStyles(styles)(GruppenBearbeitenForm);","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/MultiSelectLernfaecher.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/AnfrageForm.js",["319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/ChatVerlassenForm.js",["339"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/NachrichtListe.js",["340","341","342","343"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/NachrichtListeEintrag.js",["344","345","346"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/AnfrageEingangForm.js",["347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/AnfrageEingangFormEintrag.js",["376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399"],{"ruleId":"400","replacedBy":"401"},{"ruleId":"402","replacedBy":"403"},{"ruleId":"404","severity":1,"message":"405","line":1,"column":17,"nodeType":"406","messageId":"407","endLine":1,"endColumn":26},{"ruleId":"404","severity":1,"message":"408","line":13,"column":8,"nodeType":"406","messageId":"407","endLine":13,"endColumn":25},{"ruleId":"404","severity":1,"message":"409","line":19,"column":8,"nodeType":"406","messageId":"407","endLine":19,"endColumn":14},{"ruleId":"404","severity":1,"message":"410","line":9,"column":18,"nodeType":"406","messageId":"407","endLine":9,"endColumn":29},{"ruleId":"404","severity":1,"message":"411","line":3,"column":22,"nodeType":"406","messageId":"407","endLine":3,"endColumn":32},{"ruleId":"404","severity":1,"message":"412","line":3,"column":34,"nodeType":"406","messageId":"407","endLine":3,"endColumn":40},{"ruleId":"404","severity":1,"message":"413","line":3,"column":42,"nodeType":"406","messageId":"407","endLine":3,"endColumn":56},{"ruleId":"404","severity":1,"message":"414","line":3,"column":58,"nodeType":"406","messageId":"407","endLine":3,"endColumn":63},{"ruleId":"404","severity":1,"message":"415","line":3,"column":65,"nodeType":"406","messageId":"407","endLine":3,"endColumn":74},{"ruleId":"404","severity":1,"message":"416","line":3,"column":76,"nodeType":"406","messageId":"407","endLine":3,"endColumn":85},{"ruleId":"404","severity":1,"message":"417","line":3,"column":87,"nodeType":"406","messageId":"407","endLine":3,"endColumn":92},{"ruleId":"404","severity":1,"message":"418","line":3,"column":94,"nodeType":"406","messageId":"407","endLine":3,"endColumn":102},{"ruleId":"404","severity":1,"message":"419","line":3,"column":104,"nodeType":"406","messageId":"407","endLine":3,"endColumn":113},{"ruleId":"404","severity":1,"message":"420","line":3,"column":115,"nodeType":"406","messageId":"407","endLine":3,"endColumn":119},{"ruleId":"404","severity":1,"message":"421","line":3,"column":121,"nodeType":"406","messageId":"407","endLine":3,"endColumn":125},{"ruleId":"404","severity":1,"message":"422","line":4,"column":10,"nodeType":"406","messageId":"407","endLine":4,"endColumn":20},{"ruleId":"404","severity":1,"message":"423","line":6,"column":8,"nodeType":"406","messageId":"407","endLine":6,"endColumn":27},{"ruleId":"404","severity":1,"message":"424","line":7,"column":8,"nodeType":"406","messageId":"407","endLine":7,"endColumn":23},{"ruleId":"425","severity":1,"message":"426","line":27,"column":13,"nodeType":"427","messageId":"428","endLine":27,"endColumn":19},{"ruleId":"404","severity":1,"message":"429","line":150,"column":22,"nodeType":"406","messageId":"407","endLine":150,"endColumn":26},{"ruleId":"404","severity":1,"message":"430","line":152,"column":19,"nodeType":"406","messageId":"407","endLine":152,"endColumn":25},{"ruleId":"404","severity":1,"message":"431","line":152,"column":27,"nodeType":"406","messageId":"407","endLine":152,"endColumn":40},{"ruleId":"404","severity":1,"message":"432","line":152,"column":89,"nodeType":"406","messageId":"407","endLine":152,"endColumn":103},{"ruleId":"404","severity":1,"message":"433","line":152,"column":113,"nodeType":"406","messageId":"407","endLine":152,"endColumn":134},{"ruleId":"404","severity":1,"message":"434","line":152,"column":136,"nodeType":"406","messageId":"407","endLine":152,"endColumn":153},{"ruleId":"404","severity":1,"message":"435","line":152,"column":155,"nodeType":"406","messageId":"407","endLine":152,"endColumn":160},{"ruleId":"404","severity":1,"message":"412","line":4,"column":22,"nodeType":"406","messageId":"407","endLine":4,"endColumn":28},{"ruleId":"404","severity":1,"message":"436","line":4,"column":30,"nodeType":"406","messageId":"407","endLine":4,"endColumn":39},{"ruleId":"404","severity":1,"message":"437","line":4,"column":41,"nodeType":"406","messageId":"407","endLine":4,"endColumn":55},{"ruleId":"404","severity":1,"message":"438","line":4,"column":57,"nodeType":"406","messageId":"407","endLine":4,"endColumn":67},{"ruleId":"404","severity":1,"message":"417","line":16,"column":8,"nodeType":"406","messageId":"407","endLine":16,"endColumn":13},{"ruleId":"404","severity":1,"message":"439","line":116,"column":30,"nodeType":"406","messageId":"407","endLine":116,"endColumn":38},{"ruleId":"440","severity":1,"message":"441","line":616,"column":9,"nodeType":"442","messageId":"428","endLine":623,"endColumn":10},{"ruleId":"404","severity":1,"message":"420","line":2,"column":41,"nodeType":"406","messageId":"407","endLine":2,"endColumn":45},{"ruleId":"404","severity":1,"message":"443","line":5,"column":8,"nodeType":"406","messageId":"407","endLine":5,"endColumn":22},{"ruleId":"404","severity":1,"message":"444","line":8,"column":8,"nodeType":"406","messageId":"407","endLine":8,"endColumn":20},{"ruleId":"404","severity":1,"message":"445","line":134,"column":7,"nodeType":"406","messageId":"407","endLine":134,"endColumn":13},{"ruleId":"404","severity":1,"message":"446","line":3,"column":123,"nodeType":"406","messageId":"407","endLine":3,"endColumn":127},{"ruleId":"404","severity":1,"message":"447","line":168,"column":32,"nodeType":"406","messageId":"407","endLine":168,"endColumn":45},{"ruleId":"404","severity":1,"message":"413","line":3,"column":34,"nodeType":"406","messageId":"407","endLine":3,"endColumn":48},{"ruleId":"404","severity":1,"message":"414","line":3,"column":50,"nodeType":"406","messageId":"407","endLine":3,"endColumn":55},{"ruleId":"404","severity":1,"message":"415","line":3,"column":57,"nodeType":"406","messageId":"407","endLine":3,"endColumn":66},{"ruleId":"404","severity":1,"message":"416","line":3,"column":68,"nodeType":"406","messageId":"407","endLine":3,"endColumn":77},{"ruleId":"404","severity":1,"message":"418","line":3,"column":86,"nodeType":"406","messageId":"407","endLine":3,"endColumn":94},{"ruleId":"404","severity":1,"message":"419","line":3,"column":96,"nodeType":"406","messageId":"407","endLine":3,"endColumn":105},{"ruleId":"404","severity":1,"message":"420","line":3,"column":107,"nodeType":"406","messageId":"407","endLine":3,"endColumn":111},{"ruleId":"404","severity":1,"message":"421","line":3,"column":113,"nodeType":"406","messageId":"407","endLine":3,"endColumn":117},{"ruleId":"404","severity":1,"message":"448","line":3,"column":119,"nodeType":"406","messageId":"407","endLine":3,"endColumn":128},{"ruleId":"404","severity":1,"message":"423","line":9,"column":8,"nodeType":"406","messageId":"407","endLine":9,"endColumn":27},{"ruleId":"404","severity":1,"message":"424","line":10,"column":8,"nodeType":"406","messageId":"407","endLine":10,"endColumn":23},{"ruleId":"404","severity":1,"message":"449","line":263,"column":15,"nodeType":"406","messageId":"407","endLine":263,"endColumn":19},{"ruleId":"404","severity":1,"message":"450","line":263,"column":21,"nodeType":"406","messageId":"407","endLine":263,"endColumn":35},{"ruleId":"404","severity":1,"message":"451","line":263,"column":37,"nodeType":"406","messageId":"407","endLine":263,"endColumn":52},{"ruleId":"404","severity":1,"message":"452","line":263,"column":80,"nodeType":"406","messageId":"407","endLine":263,"endColumn":92},{"ruleId":"404","severity":1,"message":"453","line":263,"column":169,"nodeType":"406","messageId":"407","endLine":263,"endColumn":186},{"ruleId":"404","severity":1,"message":"454","line":263,"column":188,"nodeType":"406","messageId":"407","endLine":263,"endColumn":196},{"ruleId":"404","severity":1,"message":"433","line":263,"column":217,"nodeType":"406","messageId":"407","endLine":263,"endColumn":238},{"ruleId":"404","severity":1,"message":"434","line":263,"column":439,"nodeType":"406","messageId":"407","endLine":263,"endColumn":456},{"ruleId":"404","severity":1,"message":"435","line":263,"column":458,"nodeType":"406","messageId":"407","endLine":263,"endColumn":463},{"ruleId":"404","severity":1,"message":"455","line":6,"column":8,"nodeType":"406","messageId":"407","endLine":6,"endColumn":17},{"ruleId":"404","severity":1,"message":"456","line":8,"column":10,"nodeType":"406","messageId":"407","endLine":8,"endColumn":19},{"ruleId":"404","severity":1,"message":"457","line":102,"column":11,"nodeType":"406","messageId":"407","endLine":102,"endColumn":18},{"ruleId":"404","severity":1,"message":"458","line":103,"column":26,"nodeType":"406","messageId":"407","endLine":103,"endColumn":40},{"ruleId":"404","severity":1,"message":"459","line":103,"column":56,"nodeType":"406","messageId":"407","endLine":103,"endColumn":72},{"ruleId":"404","severity":1,"message":"436","line":4,"column":30,"nodeType":"406","messageId":"407","endLine":4,"endColumn":39},{"ruleId":"404","severity":1,"message":"437","line":4,"column":41,"nodeType":"406","messageId":"407","endLine":4,"endColumn":55},{"ruleId":"404","severity":1,"message":"438","line":4,"column":57,"nodeType":"406","messageId":"407","endLine":4,"endColumn":67},{"ruleId":"404","severity":1,"message":"421","line":4,"column":69,"nodeType":"406","messageId":"407","endLine":4,"endColumn":73},{"ruleId":"404","severity":1,"message":"411","line":4,"column":75,"nodeType":"406","messageId":"407","endLine":4,"endColumn":85},{"ruleId":"404","severity":1,"message":"454","line":103,"column":47,"nodeType":"406","messageId":"407","endLine":103,"endColumn":55},{"ruleId":"404","severity":1,"message":"422","line":5,"column":10,"nodeType":"406","messageId":"407","endLine":5,"endColumn":20},{"ruleId":"404","severity":1,"message":"460","line":6,"column":10,"nodeType":"406","messageId":"407","endLine":6,"endColumn":20},{"ruleId":"404","severity":1,"message":"410","line":7,"column":18,"nodeType":"406","messageId":"407","endLine":7,"endColumn":29},{"ruleId":"404","severity":1,"message":"423","line":13,"column":8,"nodeType":"406","messageId":"407","endLine":13,"endColumn":27},{"ruleId":"404","severity":1,"message":"424","line":14,"column":8,"nodeType":"406","messageId":"407","endLine":14,"endColumn":23},{"ruleId":"404","severity":1,"message":"457","line":187,"column":19,"nodeType":"406","messageId":"407","endLine":187,"endColumn":26},{"ruleId":"404","severity":1,"message":"461","line":191,"column":46,"nodeType":"406","messageId":"407","endLine":191,"endColumn":56},{"ruleId":"404","severity":1,"message":"462","line":191,"column":93,"nodeType":"406","messageId":"407","endLine":191,"endColumn":103},{"ruleId":"404","severity":1,"message":"463","line":191,"column":163,"nodeType":"406","messageId":"407","endLine":191,"endColumn":181},{"ruleId":"404","severity":1,"message":"434","line":191,"column":183,"nodeType":"406","messageId":"407","endLine":191,"endColumn":200},{"ruleId":"404","severity":1,"message":"435","line":191,"column":202,"nodeType":"406","messageId":"407","endLine":191,"endColumn":207},{"ruleId":"404","severity":1,"message":"446","line":3,"column":123,"nodeType":"406","messageId":"407","endLine":3,"endColumn":127},{"ruleId":"404","severity":1,"message":"422","line":12,"column":10,"nodeType":"406","messageId":"407","endLine":12,"endColumn":20},{"ruleId":"404","severity":1,"message":"431","line":298,"column":62,"nodeType":"406","messageId":"407","endLine":298,"endColumn":75},{"ruleId":"404","severity":1,"message":"464","line":298,"column":77,"nodeType":"406","messageId":"407","endLine":298,"endColumn":94},{"ruleId":"404","severity":1,"message":"465","line":299,"column":17,"nodeType":"406","messageId":"407","endLine":299,"endColumn":30},{"ruleId":"404","severity":1,"message":"466","line":299,"column":32,"nodeType":"406","messageId":"407","endLine":299,"endColumn":48},{"ruleId":"404","severity":1,"message":"467","line":299,"column":50,"nodeType":"406","messageId":"407","endLine":299,"endColumn":54},{"ruleId":"404","severity":1,"message":"450","line":299,"column":56,"nodeType":"406","messageId":"407","endLine":299,"endColumn":70},{"ruleId":"404","severity":1,"message":"451","line":299,"column":72,"nodeType":"406","messageId":"407","endLine":299,"endColumn":87},{"ruleId":"404","severity":1,"message":"468","line":299,"column":89,"nodeType":"406","messageId":"407","endLine":299,"endColumn":107},{"ruleId":"404","severity":1,"message":"430","line":299,"column":109,"nodeType":"406","messageId":"407","endLine":299,"endColumn":115},{"ruleId":"404","severity":1,"message":"469","line":302,"column":55,"nodeType":"406","messageId":"407","endLine":302,"endColumn":82},{"ruleId":"404","severity":1,"message":"409","line":4,"column":8,"nodeType":"406","messageId":"407","endLine":4,"endColumn":14},{"ruleId":"404","severity":1,"message":"430","line":225,"column":30,"nodeType":"406","messageId":"407","endLine":225,"endColumn":36},{"ruleId":"404","severity":1,"message":"470","line":225,"column":61,"nodeType":"406","messageId":"407","endLine":225,"endColumn":67},{"ruleId":"404","severity":1,"message":"471","line":225,"column":90,"nodeType":"406","messageId":"407","endLine":225,"endColumn":100},{"ruleId":"404","severity":1,"message":"472","line":225,"column":121,"nodeType":"406","messageId":"407","endLine":225,"endColumn":135},{"ruleId":"404","severity":1,"message":"462","line":225,"column":171,"nodeType":"406","messageId":"407","endLine":225,"endColumn":181},{"ruleId":"404","severity":1,"message":"473","line":3,"column":78,"nodeType":"406","messageId":"407","endLine":3,"endColumn":95},{"ruleId":"404","severity":1,"message":"446","line":3,"column":123,"nodeType":"406","messageId":"407","endLine":3,"endColumn":127},{"ruleId":"404","severity":1,"message":"411","line":8,"column":5,"nodeType":"406","messageId":"407","endLine":8,"endColumn":15},{"ruleId":"404","severity":1,"message":"474","line":11,"column":10,"nodeType":"406","messageId":"407","endLine":11,"endColumn":24},{"ruleId":"404","severity":1,"message":"475","line":11,"column":26,"nodeType":"406","messageId":"407","endLine":11,"endColumn":33},{"ruleId":"404","severity":1,"message":"422","line":12,"column":10,"nodeType":"406","messageId":"407","endLine":12,"endColumn":20},{"ruleId":"404","severity":1,"message":"476","line":20,"column":8,"nodeType":"406","messageId":"407","endLine":20,"endColumn":27},{"ruleId":"404","severity":1,"message":"431","line":260,"column":13,"nodeType":"406","messageId":"407","endLine":260,"endColumn":26},{"ruleId":"404","severity":1,"message":"430","line":260,"column":28,"nodeType":"406","messageId":"407","endLine":260,"endColumn":34},{"ruleId":"404","severity":1,"message":"471","line":260,"column":36,"nodeType":"406","messageId":"407","endLine":260,"endColumn":46},{"ruleId":"404","severity":1,"message":"477","line":260,"column":166,"nodeType":"406","messageId":"407","endLine":260,"endColumn":187},{"ruleId":"404","severity":1,"message":"478","line":260,"column":231,"nodeType":"406","messageId":"407","endLine":260,"endColumn":248},{"ruleId":"404","severity":1,"message":"479","line":260,"column":278,"nodeType":"406","messageId":"407","endLine":260,"endColumn":288},{"ruleId":"404","severity":1,"message":"480","line":261,"column":41,"nodeType":"406","messageId":"407","endLine":261,"endColumn":55},{"ruleId":"404","severity":1,"message":"481","line":261,"column":91,"nodeType":"406","messageId":"407","endLine":261,"endColumn":104},{"ruleId":"404","severity":1,"message":"482","line":261,"column":140,"nodeType":"406","messageId":"407","endLine":261,"endColumn":153},{"ruleId":"404","severity":1,"message":"483","line":262,"column":5,"nodeType":"406","messageId":"407","endLine":262,"endColumn":23},{"ruleId":"404","severity":1,"message":"484","line":262,"column":25,"nodeType":"406","messageId":"407","endLine":262,"endColumn":38},{"ruleId":"404","severity":1,"message":"485","line":53,"column":39,"nodeType":"406","messageId":"407","endLine":53,"endColumn":51},{"ruleId":"404","severity":1,"message":"446","line":3,"column":123,"nodeType":"406","messageId":"407","endLine":3,"endColumn":127},{"ruleId":"404","severity":1,"message":"422","line":11,"column":10,"nodeType":"406","messageId":"407","endLine":11,"endColumn":20},{"ruleId":"404","severity":1,"message":"447","line":262,"column":47,"nodeType":"406","messageId":"407","endLine":262,"endColumn":60},{"ruleId":"404","severity":1,"message":"471","line":262,"column":62,"nodeType":"406","messageId":"407","endLine":262,"endColumn":72},{"ruleId":"404","severity":1,"message":"431","line":262,"column":74,"nodeType":"406","messageId":"407","endLine":262,"endColumn":87},{"ruleId":"404","severity":1,"message":"486","line":265,"column":45,"nodeType":"406","messageId":"407","endLine":265,"endColumn":56},{"ruleId":"404","severity":1,"message":"473","line":3,"column":78,"nodeType":"406","messageId":"407","endLine":3,"endColumn":95},{"ruleId":"404","severity":1,"message":"436","line":3,"column":112,"nodeType":"406","messageId":"407","endLine":3,"endColumn":121},{"ruleId":"404","severity":1,"message":"446","line":3,"column":123,"nodeType":"406","messageId":"407","endLine":3,"endColumn":127},{"ruleId":"404","severity":1,"message":"487","line":4,"column":5,"nodeType":"406","messageId":"407","endLine":4,"endColumn":16},{"ruleId":"404","severity":1,"message":"488","line":5,"column":5,"nodeType":"406","messageId":"407","endLine":5,"endColumn":15},{"ruleId":"404","severity":1,"message":"489","line":6,"column":5,"nodeType":"406","messageId":"407","endLine":6,"endColumn":11},{"ruleId":"404","severity":1,"message":"490","line":7,"column":5,"nodeType":"406","messageId":"407","endLine":7,"endColumn":13},{"ruleId":"404","severity":1,"message":"411","line":8,"column":5,"nodeType":"406","messageId":"407","endLine":8,"endColumn":15},{"ruleId":"404","severity":1,"message":"474","line":11,"column":10,"nodeType":"406","messageId":"407","endLine":11,"endColumn":24},{"ruleId":"404","severity":1,"message":"475","line":11,"column":26,"nodeType":"406","messageId":"407","endLine":11,"endColumn":33},{"ruleId":"404","severity":1,"message":"422","line":12,"column":10,"nodeType":"406","messageId":"407","endLine":12,"endColumn":20},{"ruleId":"404","severity":1,"message":"491","line":15,"column":8,"nodeType":"406","messageId":"407","endLine":15,"endColumn":20},{"ruleId":"404","severity":1,"message":"492","line":18,"column":8,"nodeType":"406","messageId":"407","endLine":18,"endColumn":16},{"ruleId":"404","severity":1,"message":"493","line":19,"column":8,"nodeType":"406","messageId":"407","endLine":19,"endColumn":16},{"ruleId":"404","severity":1,"message":"494","line":21,"column":8,"nodeType":"406","messageId":"407","endLine":21,"endColumn":29},{"ruleId":"404","severity":1,"message":"495","line":296,"column":32,"nodeType":"406","messageId":"407","endLine":296,"endColumn":40},{"ruleId":"404","severity":1,"message":"496","line":296,"column":86,"nodeType":"406","messageId":"407","endLine":296,"endColumn":99},{"ruleId":"404","severity":1,"message":"497","line":296,"column":101,"nodeType":"406","messageId":"407","endLine":296,"endColumn":121},{"ruleId":"404","severity":1,"message":"483","line":296,"column":154,"nodeType":"406","messageId":"407","endLine":296,"endColumn":172},{"ruleId":"404","severity":1,"message":"484","line":296,"column":174,"nodeType":"406","messageId":"407","endLine":296,"endColumn":187},{"ruleId":"404","severity":1,"message":"458","line":53,"column":37,"nodeType":"406","messageId":"407","endLine":53,"endColumn":51},{"ruleId":"404","severity":1,"message":"498","line":4,"column":59,"nodeType":"406","messageId":"407","endLine":4,"endColumn":66},{"ruleId":"404","severity":1,"message":"499","line":11,"column":10,"nodeType":"406","messageId":"407","endLine":11,"endColumn":20},{"ruleId":"404","severity":1,"message":"500","line":188,"column":39,"nodeType":"406","messageId":"407","endLine":188,"endColumn":51},{"ruleId":"404","severity":1,"message":"501","line":190,"column":81,"nodeType":"406","messageId":"407","endLine":190,"endColumn":97},{"ruleId":"404","severity":1,"message":"499","line":5,"column":10,"nodeType":"406","messageId":"407","endLine":5,"endColumn":20},{"ruleId":"404","severity":1,"message":"501","line":86,"column":27,"nodeType":"406","messageId":"407","endLine":86,"endColumn":43},{"ruleId":"404","severity":1,"message":"502","line":86,"column":80,"nodeType":"406","messageId":"407","endLine":86,"endColumn":99},{"ruleId":"404","severity":1,"message":"412","line":3,"column":22,"nodeType":"406","messageId":"407","endLine":3,"endColumn":28},{"ruleId":"404","severity":1,"message":"410","line":3,"column":30,"nodeType":"406","messageId":"407","endLine":3,"endColumn":41},{"ruleId":"404","severity":1,"message":"473","line":3,"column":91,"nodeType":"406","messageId":"407","endLine":3,"endColumn":108},{"ruleId":"404","severity":1,"message":"503","line":3,"column":110,"nodeType":"406","messageId":"407","endLine":3,"endColumn":123},{"ruleId":"404","severity":1,"message":"436","line":3,"column":125,"nodeType":"406","messageId":"407","endLine":3,"endColumn":134},{"ruleId":"404","severity":1,"message":"446","line":3,"column":136,"nodeType":"406","messageId":"407","endLine":3,"endColumn":140},{"ruleId":"404","severity":1,"message":"504","line":4,"column":5,"nodeType":"406","messageId":"407","endLine":4,"endColumn":14},{"ruleId":"404","severity":1,"message":"505","line":4,"column":16,"nodeType":"406","messageId":"407","endLine":4,"endColumn":32},{"ruleId":"404","severity":1,"message":"506","line":4,"column":34,"nodeType":"406","messageId":"407","endLine":4,"endColumn":50},{"ruleId":"404","severity":1,"message":"507","line":5,"column":5,"nodeType":"406","messageId":"407","endLine":5,"endColumn":9},{"ruleId":"404","severity":1,"message":"508","line":5,"column":11,"nodeType":"406","messageId":"407","endLine":5,"endColumn":19},{"ruleId":"404","severity":1,"message":"509","line":5,"column":21,"nodeType":"406","messageId":"407","endLine":5,"endColumn":33},{"ruleId":"404","severity":1,"message":"510","line":5,"column":35,"nodeType":"406","messageId":"407","endLine":5,"endColumn":58},{"ruleId":"404","severity":1,"message":"487","line":6,"column":5,"nodeType":"406","messageId":"407","endLine":6,"endColumn":16},{"ruleId":"404","severity":1,"message":"488","line":7,"column":5,"nodeType":"406","messageId":"407","endLine":7,"endColumn":15},{"ruleId":"404","severity":1,"message":"489","line":8,"column":5,"nodeType":"406","messageId":"407","endLine":8,"endColumn":11},{"ruleId":"404","severity":1,"message":"490","line":9,"column":5,"nodeType":"406","messageId":"407","endLine":9,"endColumn":13},{"ruleId":"404","severity":1,"message":"411","line":10,"column":5,"nodeType":"406","messageId":"407","endLine":10,"endColumn":15},{"ruleId":"404","severity":1,"message":"474","line":13,"column":10,"nodeType":"406","messageId":"407","endLine":13,"endColumn":24},{"ruleId":"404","severity":1,"message":"475","line":13,"column":26,"nodeType":"406","messageId":"407","endLine":13,"endColumn":33},{"ruleId":"404","severity":1,"message":"422","line":14,"column":10,"nodeType":"406","messageId":"407","endLine":14,"endColumn":20},{"ruleId":"404","severity":1,"message":"491","line":17,"column":8,"nodeType":"406","messageId":"407","endLine":17,"endColumn":20},{"ruleId":"404","severity":1,"message":"511","line":18,"column":8,"nodeType":"406","messageId":"407","endLine":18,"endColumn":22},{"ruleId":"404","severity":1,"message":"512","line":19,"column":8,"nodeType":"406","messageId":"407","endLine":19,"endColumn":23},{"ruleId":"404","severity":1,"message":"492","line":20,"column":8,"nodeType":"406","messageId":"407","endLine":20,"endColumn":16},{"ruleId":"404","severity":1,"message":"493","line":21,"column":8,"nodeType":"406","messageId":"407","endLine":21,"endColumn":16},{"ruleId":"404","severity":1,"message":"513","line":81,"column":43,"nodeType":"406","messageId":"407","endLine":81,"endColumn":57},{"ruleId":"404","severity":1,"message":"483","line":82,"column":60,"nodeType":"406","messageId":"407","endLine":82,"endColumn":78},{"ruleId":"404","severity":1,"message":"484","line":82,"column":80,"nodeType":"406","messageId":"407","endLine":82,"endColumn":93},{"ruleId":"404","severity":1,"message":"409","line":4,"column":8,"nodeType":"406","messageId":"407","endLine":4,"endColumn":14},{"ruleId":"404","severity":1,"message":"410","line":5,"column":30,"nodeType":"406","messageId":"407","endLine":5,"endColumn":41},{"ruleId":"404","severity":1,"message":"438","line":5,"column":43,"nodeType":"406","messageId":"407","endLine":5,"endColumn":53},{"ruleId":"404","severity":1,"message":"514","line":5,"column":55,"nodeType":"406","messageId":"407","endLine":5,"endColumn":61},{"ruleId":"404","severity":1,"message":"515","line":5,"column":63,"nodeType":"406","messageId":"407","endLine":5,"endColumn":74},{"ruleId":"404","severity":1,"message":"516","line":5,"column":76,"nodeType":"406","messageId":"407","endLine":5,"endColumn":89},{"ruleId":"404","severity":1,"message":"473","line":5,"column":91,"nodeType":"406","messageId":"407","endLine":5,"endColumn":108},{"ruleId":"404","severity":1,"message":"503","line":5,"column":110,"nodeType":"406","messageId":"407","endLine":5,"endColumn":123},{"ruleId":"404","severity":1,"message":"436","line":5,"column":125,"nodeType":"406","messageId":"407","endLine":5,"endColumn":134},{"ruleId":"404","severity":1,"message":"421","line":5,"column":142,"nodeType":"406","messageId":"407","endLine":5,"endColumn":146},{"ruleId":"404","severity":1,"message":"504","line":6,"column":5,"nodeType":"406","messageId":"407","endLine":6,"endColumn":14},{"ruleId":"404","severity":1,"message":"505","line":6,"column":16,"nodeType":"406","messageId":"407","endLine":6,"endColumn":32},{"ruleId":"404","severity":1,"message":"506","line":6,"column":34,"nodeType":"406","messageId":"407","endLine":6,"endColumn":50},{"ruleId":"404","severity":1,"message":"510","line":7,"column":35,"nodeType":"406","messageId":"407","endLine":7,"endColumn":58},{"ruleId":"404","severity":1,"message":"487","line":8,"column":5,"nodeType":"406","messageId":"407","endLine":8,"endColumn":16},{"ruleId":"404","severity":1,"message":"488","line":9,"column":5,"nodeType":"406","messageId":"407","endLine":9,"endColumn":15},{"ruleId":"404","severity":1,"message":"489","line":10,"column":5,"nodeType":"406","messageId":"407","endLine":10,"endColumn":11},{"ruleId":"404","severity":1,"message":"490","line":11,"column":5,"nodeType":"406","messageId":"407","endLine":11,"endColumn":13},{"ruleId":"404","severity":1,"message":"411","line":12,"column":5,"nodeType":"406","messageId":"407","endLine":12,"endColumn":15},{"ruleId":"404","severity":1,"message":"517","line":16,"column":8,"nodeType":"406","messageId":"407","endLine":16,"endColumn":22},{"ruleId":"404","severity":1,"message":"518","line":23,"column":8,"nodeType":"406","messageId":"407","endLine":23,"endColumn":19},{"ruleId":"404","severity":1,"message":"429","line":226,"column":28,"nodeType":"406","messageId":"407","endLine":226,"endColumn":32},{"ruleId":"404","severity":1,"message":"519","line":226,"column":34,"nodeType":"406","messageId":"407","endLine":226,"endColumn":47},{"ruleId":"404","severity":1,"message":"520","line":227,"column":19,"nodeType":"406","messageId":"407","endLine":227,"endColumn":33},"no-native-reassign",["521"],"no-negated-in-lhs",["522"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'RegistrierungForm' is defined but never used.","'Profil' is defined but never used.","'ButtonGroup' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'TableContainer' is defined but never used.","'Table' is defined but never used.","'TableHead' is defined but never used.","'TableCell' is defined but never used.","'Paper' is defined but never used.","'TableRow' is defined but never used.","'TableBody' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'withRouter' is defined but never used.","'ContextErrorMessage' is defined but never used.","'LoadingProgress' is defined but never used.","no-dupe-keys","Duplicate key 'gruppe'.","ObjectExpression","unexpected","'show' is assigned a value but never used.","'profil' is assigned a value but never used.","'lernvorlieben' is assigned a value but never used.","'gruppengroesse' is assigned a value but never used.","'personLernvorliebenID' is assigned a value but never used.","'loadingInProgress' is assigned a value but never used.","'error' is assigned a value but never used.","'TextField' is defined but never used.","'InputAdornment' is defined but never used.","'IconButton' is defined but never used.","'personID' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'getNachrichten'.","MethodDefinition","'FormHelperText' is defined but never used.","'NativeSelect' is defined but never used.","'styles' is assigned a value but never used.","'Card' is defined but never used.","'currentPerson' is assigned a value but never used.","'Container' is defined but never used.","'test' is assigned a value but never used.","'lernfaecher_id' is assigned a value but never used.","'lernfaecher_bez' is assigned a value but never used.","'personProfil' is assigned a value but never used.","'personLernfaecher' is assigned a value but never used.","'lernfach' is assigned a value but never used.","'Nachricht' is defined but never used.","'useParams' is defined but never used.","'classes' is assigned a value but never used.","'konversationID' is assigned a value but never used.","'showKonversation' is assigned a value but never used.","'withStyles' is defined but never used.","'gruppeName' is assigned a value but never used.","'showProfil' is assigned a value but never used.","'showLerngruppeForm' is assigned a value but never used.","'lernfaechergesamt' is assigned a value but never used.","'selectedValue' is assigned a value but never used.","'setSelectedValue' is assigned a value but never used.","'data' is assigned a value but never used.","'lernfaecherauswahl' is assigned a value but never used.","'lernfaecherValidationFailed' is assigned a value but never used.","'person' is assigned a value but never used.","'lerngruppe' is assigned a value but never used.","'konversationBO' is assigned a value but never used.","'DialogContentText' is defined but never used.","'TeachingbeeAPI' is defined but never used.","'GroupBO' is defined but never used.","'GruppenListeEintrag' is defined but never used.","'lernfaecherNameEdited' is assigned a value but never used.","'tageszeitenEdited' is assigned a value but never used.","'tageEdited' is assigned a value but never used.","'frequenzEdited' is assigned a value but never used.","'lernartEdited' is assigned a value but never used.","'lernortEdited' is assigned a value but never used.","'updatingInProgress' is assigned a value but never used.","'updatingError' is assigned a value but never used.","'lerngruppeID' is assigned a value but never used.","'lernfaecher' is assigned a value but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'LerngruppeBO' is defined but never used.","'ProfilBO' is defined but never used.","'PersonBO' is defined but never used.","'VorschlagListeEintrag' is defined but never used.","'konvName' is assigned a value but never used.","'teilnahmeChat' is assigned a value but never used.","'teilnahmeChatPartner' is assigned a value but never used.","'Divider' is defined but never used.","'MessageBox' is defined but never used.","'konversation' is assigned a value but never used.","'nachricht_inhalt' is assigned a value but never used.","'expandedNachrichtID' is assigned a value but never used.","'DialogActions' is defined but never used.","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'KonversationBO' is defined but never used.","'TeilnahmeChatBO' is defined but never used.","'konversationen' is assigned a value but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'AnfrageForm' is defined but never used.","'expandedState' is assigned a value but never used.","'teilnahmenChat' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]