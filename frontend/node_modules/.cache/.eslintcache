[{"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/index.js":"1","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/App.js":"2","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/Theme.js":"3","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/firebaseconfig.js":"4","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/layout/Header.js":"5","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/pages/About.js":"6","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/pages/SignIn.js":"7","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LernpartnerAPI.js":"8","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/LoadingProgress.js":"9","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/ContextErrorMessage.js":"10","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/VorschlagListe.js":"11","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/MeinProfil.js":"12","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/KonversationListe.js":"13","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/LernfaecherForm.js":"14","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/RegistrierungForm.js":"15","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfileDropDown.js":"16","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/VorschlagBO.js":"17","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/ProfilBO.js":"18","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LerngruppeBO.js":"19","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/PersonBO.js":"20","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/NachrichtBO.js":"21","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/KonversationBO.js":"22","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LernvorliebenBO.js":"23","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeGruppeBO.js":"24","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeChatBO.js":"25","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/VorschlagListeEintrag.js":"26","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/KonversationListeEintrag.js":"27","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/index.js":"28","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/BusinessObject.js":"29","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/NamedBusinessObject.js":"30","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/Nachricht.js":"31","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/Profil.js":"32"},{"size":146,"mtime":1620807576504,"results":"33","hashOfConfig":"34"},{"size":5915,"mtime":1624262321460,"results":"35","hashOfConfig":"34"},{"size":1706,"mtime":1623434614996,"results":"36","hashOfConfig":"34"},{"size":579,"mtime":1624086408653,"results":"37","hashOfConfig":"34"},{"size":1672,"mtime":1624262321458,"results":"38","hashOfConfig":"34"},{"size":844,"mtime":1624215856548,"results":"39","hashOfConfig":"34"},{"size":1816,"mtime":1623433312638,"results":"40","hashOfConfig":"34"},{"size":38284,"mtime":1624043753964,"results":"41","hashOfConfig":"34"},{"size":862,"mtime":1622112082063,"results":"42","hashOfConfig":"34"},{"size":2113,"mtime":1622112193821,"results":"43","hashOfConfig":"34"},{"size":4960,"mtime":1624258271892,"results":"44","hashOfConfig":"34"},{"size":5363,"mtime":1624258292167,"results":"45","hashOfConfig":"34"},{"size":4249,"mtime":1624257581521,"results":"46","hashOfConfig":"34"},{"size":2934,"mtime":1624257724503,"results":"47","hashOfConfig":"34"},{"size":9946,"mtime":1624259755110,"results":"48","hashOfConfig":"34"},{"size":3271,"mtime":1622538283974,"results":"49","hashOfConfig":"34"},{"size":1348,"mtime":1623484557530,"results":"50","hashOfConfig":"34"},{"size":1253,"mtime":1623433111030,"results":"51","hashOfConfig":"34"},{"size":1078,"mtime":1622969157843,"results":"52","hashOfConfig":"34"},{"size":2597,"mtime":1623433111029,"results":"53","hashOfConfig":"34"},{"size":1315,"mtime":1623938783709,"results":"54","hashOfConfig":"34"},{"size":1003,"mtime":1623484557530,"results":"55","hashOfConfig":"34"},{"size":2140,"mtime":1623484846947,"results":"56","hashOfConfig":"34"},{"size":1228,"mtime":1624043821584,"results":"57","hashOfConfig":"34"},{"size":1040,"mtime":1624043753965,"results":"58","hashOfConfig":"34"},{"size":5446,"mtime":1624044203458,"results":"59","hashOfConfig":"34"},{"size":2237,"mtime":1624216957712,"results":"60","hashOfConfig":"34"},{"size":329,"mtime":1622114445485,"results":"61","hashOfConfig":"34"},{"size":761,"mtime":1621758115765,"results":"62","hashOfConfig":"34"},{"size":375,"mtime":1622112904258,"results":"63","hashOfConfig":"34"},{"size":7536,"mtime":1624218381891,"results":"64","hashOfConfig":"34"},{"size":5314,"mtime":1623482933335,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cx8xr9",{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":8,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":5,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/index.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/App.js",["138","139","140","141"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/Theme.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/firebaseconfig.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/layout/Header.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/pages/About.js",["142"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/pages/SignIn.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LernpartnerAPI.js",["143"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/LoadingProgress.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/ContextErrorMessage.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/VorschlagListe.js",["144","145","146","147","148","149"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'\nimport { withStyles, Button, TextField, InputAdornment, IconButton, Grid, Typography } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\nimport VorschlagListeEintrag from './VorschlagListeEintrag';\n//import SaveIcon from '@material-ui/icons/Save';\n//import Table from '@material-ui/core/Table';\n//import TableBody from '@material-ui/core/TableBody';\n//import TableCell from '@material-ui/core/TableCell';\n//import TableContainer from '@material-ui/core/TableContainer';\n//import TableHead from '@material-ui/core/TableHead';\n//import TableRow from '@material-ui/core/TableRow';\n//import Paper from '@material-ui/core/Paper';\n\n\n\n/**\n * Es werden alle Vorschläge des aktuell eingeloggten Studenten angezeigt\n * \n * @see See [VorschlagListeEintrag](#vorschaglisteeintrag)\n * \n * Hierfür werden alle Vorschläge des aktuell eingeloggten Student geladen und in die Componente VorschlagListeEintrag gemappt\n * \n */\n\n\nclass VorschlagListe extends Component {\n\n    constructor(props){\n        super(props);\n\n        // console.log(props);\n        let expandedID = null;\n\n        if (this.props.location.expandVorschlag) {\n        expandedID = this.props.location.expandVorschlag.getID();\n        }\n\n        // initiiere einen leeren state\n        this.state = {\n            vorschlaege : [],\n            //currentPersonName: null,\n            error: null,\n            loadingInProgress: false, \n            expandedVorschlagID: expandedID,\n        };\n    }\n\n\n    // API Anbindung um Vorschläge des Students vom Backend zu bekommen \n    getVorschlaege = () => {\n            LernpartnerAPI.getAPI().getVorschlaege(this.props.currentPerson.id, this.props.lernfach)\n            .then(vorschlagBOs =>\n                this.setState({\n                    vorschlaege: vorschlagBOs,\n                    error: null,\n                    loadingInProgress: false,\n                })).catch(e =>\n                    this.setState({\n                        vorschlaege: [],\n                        error: e,\n                        loadingInProgress: false,\n                    }));\n            this.setState({\n                error: null,\n                loadingInProgress: true,\n                loadingVorschlaegeError: null\n            });\n    }\n\n    // Lifecycle methode, wird aufgerufen wenn componente in den DOM eingesetzt wird\n    componentDidMount() {\n        this.getVorschlaege();\n\n    }\n    \n    /** \n     * Handles onExpandedStateChange events from the VorschlagListeEintrag component. Toggels the expanded state of \n     * the VorschlagListeEintrag of the given VorschlagBO.\n     * \n     * @param {vorschlag} VorschlagBO of the VorschlagListeEintrag to be toggeled\n     */\n    onExpandedStateChange = vorschlag => {\n        // console.log(vorschlagID);\n        // Set expandend Vorschlag Eintrag to null by default\n        let newID = null;\n\n        // If same vorschlag entry is clicked, collapse it else expand a new one\n        if (vorschlag.getID() !== this.state.expandedVorschlagID) {\n        // Expand the customer entry with customerID\n        newID = vorschlag.getID();\n        }\n        // console.log(newID);\n        this.setState({\n        expandedVorschlagID: newID,\n        });\n    }\n\n    render() {\n        const { classes, lernfach } = this.props;\n        const { vorschlaege, expandedVorschlagID, error, loadingInProgress}  = this.state;\n    \n        return (\n          \n          <div className={classes.root}>\n            <h1>Test: Vorschläge für Lernfach {lernfach}</h1>\n            { \n              // Show the list of VorschlagListeEintrag components\n              // Do not use strict comparison, since expandedVorschlagID maybe a string if given from the URL parameters\n  \n              vorschlaege.map(vorschlag =>\n                <VorschlagListeEintrag key={vorschlag.getID()} vorschlag={vorschlag} expandedState={expandedVorschlagID === vorschlag.getID()}\n                  onExpandedStateChange={this.onExpandedStateChange}\n                />)\n            }\n            <LoadingProgress show={loadingInProgress} />\n            <ContextErrorMessage error={error} contextErrorMsg={`Sorry, deine Vorschläge konnten nicht geladen werden!`} onReload={this.getVorschlaege} />\n          </div>\n        );\n      }\n    }\n\n\n/** Component specific styles */\nconst styles = theme => ({\n    root: {\n      width: '100%',\n    },\n    customerFilter: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(1),\n    }\n  });\n\n/** PropTypes */\nVorschlagListe.propTypes = {\n    /** @ignore */\n    classes: PropTypes.object.isRequired,\n    /** @ignore */\n    location: PropTypes.object.isRequired,\n}\n\n\n\nexport default withRouter(withStyles(styles)(VorschlagListe));","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/MeinProfil.js",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Typography, TableContainer, Table, TableHead, TableCell, Paper, TableRow, TableBody, Link, Grid } from '@material-ui/core';\n//import Button from '@material-ui/core/Button';\nimport { withRouter } from 'react-router-dom';\nimport {LernpartnerAPI} from '../api';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\n\nclass MeinProfil extends Component {\n\n    constructor(props){\n        super(props);\n\n        // initiiere einen leeren state\n        this.state = {\n            profil: null,\n            gruppe: false,\n            personVorname: null,\n            personName: null,\n            personSemester: 0,\n            personStudiengang: null,\n            lerngruppe: false,\n            personProfilID: null,\n            personLernfaecher: null,\n            personLernvorliebenID: null,\n            loadingInProgress: false,\n            loadingError: null\n        };\n    }\n\n\n/**   showVorschlagButtonClick = (event) => {\n      event.stopPropagation();\n      this.setState({\n        showVorschlag: true\n      });\n    }**/\n\n\n    // API Anbindung um Profil vom Backend zu bekommen\n    getPerson = () => {\n      LernpartnerAPI.getAPI().getPersonByGoogleID(this.props.person.getgoogle_user_id)\n      .then(personBO =>\n          this.setState({\n            person: personBO,\n            personName: personBO.name,\n            personVorname: personBO.vorname,\n            personSemester: personBO.semester,\n            personStudiengang: personBO.studiengang,\n            personProfilID: personBO.personenprofil,\n            loadingInProgress: false,\n            error: null,\n          }))\n          .catch(e =>\n              this.setState({\n            person: null,\n            personName: null,\n            personVorname: null,\n            personSemester: null,\n            personStudiengang: null,\n            personProfilID: null,\n            loadingInProgress: false,\n            error: e,\n              }));\n      this.setState({\n        loadingInProgress: true,\n        error: null\n      });\n    }\n\n     getProfil = () => {\n    LernpartnerAPI.getAPI().getProfil(personProfilID).then(profilBO =>\n      this.setState({\n            profil: profilBOs,\n            profilLernfaecher: profilBO.lernfaecher,\n            profilLernvorliebenID: profilBO.lernvorlieben,\n            loadingInProgress: false,\n            error: null\n      })).catch(e =>\n        this.setState({ // Reset state with error from catch\n          profil: null,\n          profilLernfaecher: null,\n          profilLernvorliebenID: false,\n          loadingInProgress: false,\n          error: e,\n        })\n      );\n\n    // set loading to true\n    this.setState({\n      loadingInProgress: true,\n      loadingError: null\n    });\n  }\n\n\n     getLernvorlieben = () => {\n    LernpartnerAPI.getAPI().getLernvorlieben(personLernvorliebenID).then(lernvorliebenBO =>\n      this.setState({\n            profil: profilBOs,\n            profilLernfaecher: profilBO.lernfaecher,\n            profilLernvorlieben: profilBO.lernvorlieben,\n            loadingInProgress: false,\n            error: null\n      })).catch(e =>\n        this.setState({ // Reset state with error from catch\n          profil: null,\n          profilLernfaecher: null,\n          profilLernvorlieben: false,\n          loadingInProgress: false,\n          error: e,\n        })\n      );\n\n    // set loading to true\n    this.setState({\n      loadingInProgress: true,\n      loadingError: null\n    });\n  }\n\n\n\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\n    componentDidMount() {\n        this.getPerson();\n        this.getProfil();\n        this.getLernvorlieben();\n  }\n\n\n\n\n   /** Renders the component */\n    render() {\n      const { classes } = this.props;\n      // Use the states customer\n      const { personProfil, personName, personVorname, personSemester, personStudiengang, personLernfaecher, personLernvorlieben, loadingInProgress, error} = this.state;\n\n      // console.log(this.props);\n      return (\n        <div className={classes.root}>\n        <Button color=\"primary\" onClick= {this.showVorschlagButtonClick}>Mein Profil bearbeiten</Button>\n        <Typography variant='body1' color={'textSecondary'}>\n\n                              <b>Semester: </b> {personSemester} <br />\n                              <b>Studiengang: </b>{personStudiengang}<br />\n                              <b>Lernfächer: </b>{personLernfaecher}<br />\n                              <b>Lernvorlieben: </b>{personLernvorlieben}<br />\n\n        </Typography>\n        </div>\n      );\n    }\n}\n\n  const styles = theme => ({\n  root: {\n      width: '100%',\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n      padding: theme.spacing(1),\n  },\n  content: {\n      margin: theme.spacing(1),\n    },\n  table: {\n      minWidth: 700,\n    },\n  formControl: {\n      margin: theme.spacing(1),\n      minWidth: 200,\n      textAlign: \"left\"\n  },\n\n  laden: {\n    padding: 0\n  },\n  breite: {\n    width: 220\n  }\n  });\n\n\n/** PropTypes */\nProfil.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  person: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired\n}\n\n\nexport default withStyles(styles)(MeinProfil);\n\n","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/KonversationListe.js",["175","176","177"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'\nimport { withStyles, Button, Grid } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\nimport KonversationListeEintrag from './KonversationListeEintrag';\n\n/**\n * Es werden alle Konversationen des aktuell eingeloggten Studenten angezeigt\n * \n * @see See [KonversationListeEintrag]](#konversationlisteeintrag)\n * \n * Hierfür werden alle Konversationen des aktuell eingeloggten Student geladen und in die Componente NachrichtenListeEintrag gemappt\n * \n */\n\nclass KonversationListe extends Component {\n    constructor(props){\n        super(props);\n\n        /**  console.log(props);\n        let expandedID = null;\n\n        if (this.props.location.expandKonversation) {\n        expandedID = this.props.location.expandKonversation.getID();\n        }\n        */\n       \n        // initiiere einen leeren state\n        this.state = {\n            konversationen : [],\n            error: null,\n            loadingInProgress: false, \n            //expandedKonversationID: expandedID,\n        };\n\n      }\n\n      // API Anbindung um Vorschläge des Students vom Backend zu bekommen \n    getKonversationen = () => {\n      LernpartnerAPI.getAPI().getKonversationenByPerson(this.props.currentPerson.getid())\n      .then(konversationenBOs =>\n          this.setState({\n              konversationen: konversationenBOs,\n              error: null,\n              loadingInProgress: false,\n          })).catch(e =>\n              this.setState({\n                  konversationen: [],\n                  error: e,\n                  loadingInProgress: false,\n              }));\n      this.setState({\n          error: null,\n          loadingInProgress: true,\n          loadingKonversationenError: null\n      });\n    }\n    \n\n\n// Lifecycle methode, wird aufgerufen wenn componente in den DOM eingesetzt wird\ncomponentDidMount() {\n  this.getKonversationen();\n  this.setState({\n      currentStudentName: this.props.currentPerson.getname(),\n        })\n}\n\n /** \n     * Handles onExpandedStateChange events from the VorschlagListeEintrag component. Toggels the expanded state of \n     * the VorschlagListeEintrag of the given VorschlagBO.\n     * \n     * @param {konversation} KonversationBO of the KonversationListeEintrag to be toggeled\n     \n  onExpandedStateChange = konversation => {\n    // console.log(konversationID);\n    // Set expandend Konversation Eintrag to null by default\n    let newID = null;\n\n    // If same konversation entry is clicked, collapse it else expand a new one\n    if (konversation.getID() !== this.state.expandedKonversationID) {\n    // Expand the konservation entry with konversationID\n    newID = konversation.getID();\n    }\n    // console.log(newID);\n    this.setState({\n    expandedKonversastionID: newID,\n    });\n}\n*/\n\nrender() {\n  const { classes, currentPerson } = this.props;\n        const { konversationen, error, loadingInProgress}  = this.state; \n\n        return(\n          <div className={classes.root}>\n\n            { \n              // Show the list of KonversationListeEintrag components\n              // Do not use strict comparison, since expandedVorschlagID maybe a string if given from the URL parameters\n  \n              konversationen.map(konversation =>\n                <KonversationListeEintrag key={konversation.getID()} konversation={konversation}\n                />)\n            }\n            <LoadingProgress show={loadingInProgress} />\n            <ContextErrorMessage error={error} contextErrorMsg={`Leider konnten deine Chats nicht geladen werden!`} onReload={this.getKonversationen} />\n          </div>\n\n        );\n\n      }\n}\n\n/** Component specific styles */\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  customerFilter: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  }\n});\n\n/** PropTypes */\nKonversationListe.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  /** @ignore */\n  location: PropTypes.object.isRequired,\n}\n\n\n\nexport default withRouter(withStyles(styles)(KonversationListe));","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/LernfaecherForm.js",["178","179","180","181","182","183","184","185"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/RegistrierungForm.js",["186","187","188"],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/dialogs/ProfileDropDown.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/VorschlagBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/ProfilBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LerngruppeBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/PersonBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/NachrichtBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/KonversationBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/LernvorliebenBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeGruppeBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/TeilnahmeChatBO.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/VorschlagListeEintrag.js",["189","190","191"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'\nimport Profil from './Profil';\n//import { withStyles } from '@material-ui/core';\n//import { withRouter } from 'react-router-dom';\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n//import InputLabel from '@material-ui/core/InputLabel';\n//import MenuItem from '@material-ui/core/MenuItem';\n//import FormControl from '@material-ui/core/FormControl';\n//import Select from '@material-ui/core/Select';\n//import ContextErrorMessage from './dialogs/ContextErrorMessage';\n//import LoadingProgress from './dialogs/LoadingProgress';\n\n/**\n * Es wird ein einzelner Vorschlag für einen passenden Lernpartner oder /-gruppe mit allen not wendigen Informationen dargestellt\n * \n * Hierfür werden Profilname, Alter, Geschlecht, Semester, Lernfach und der Prozentsatz des Matches angezeigt\n * \n */\n\nclass VorschlagListeEintrag extends Component {\n    constructor(props){\n        super(props);\n\n        // initiiere einen leeren state\n        this.state = {\n            vorschlag: props.vorschlag,\n            //match: null,\n            profil: null,\n            person: null,\n            profilID: null,\n            personName: null,\n            personVorname: null,\n            showProfil: false,\n            showAnfrageForm: false,\n            loadingInProgress: false,\n            error: null\n        };\n    }\n\n    /** Handles onChange events of the underlying ExpansionPanel */\n    expansionPanelStateChanged = () => {\n    this.props.onExpandedStateChange(this.props.vorschlag);\n    }\n    \n    //Handles the onClick event of the show profil button\n    showProfilButtonClicked = (event) => {\n      event.stopPropagation();\n      this.setState({\n        showProfil: true\n      });\n    }\n\n    /** Handles the onClick event of the send Anfrage button */\n    sendAnfrageButtonClicked = (event) => {\n      event.stopPropagation();\n      this.setState({\n        showAnfrageForm: true\n      });\n    }\n\n    // API Anbindung um Profil vom Backend zu bekommen \n    getPerson = () => {\n      LernpartnerAPI.getAPI().getPerson(this.props.vorschlag.getmain_person_id())\n      .then(personBO =>\n          this.setState({\n            person: personBO,\n            personName: personBO.name,\n            personVorname: personBO.vorname,\n            loadingInProgress: false,\n            error: null,\n          }))\n          .catch(e =>\n              this.setState({\n                person: null,\n                personName: null,\n                personVorname: null,\n                loadingInProgress: false,\n                error: e,\n              }));\n      this.setState({\n        loadingInProgress: true,\n        error: null\n      });\n    }\n\n\n    render(){\n\n          const { classes, expandedState } = this.props;\n          const {vorschlag, profil, profilID, personName, personVorname, showProfil, showAnfrageForm } = this.state;\n\n          return (\n            <div>\n              <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  id={`vorschlag${vorschlag.getId()}accountpanel-header`}\n                >\n                  <Grid container spacing={1} justify='flex-start' alignItems='center'>\n                    <Grid item>\n          <Typography variant='body1' className={classes.heading}>{personName}, {personVorname}, {vorschlag.getmatch()}\n                      </Typography>\n                    </Grid>\n                    <Grid item>\n                      <ButtonGroup variant='text' size='small'>\n                        <Button color='primary' onClick={this.showProfilButtonClicked}>\n                          Profil ansehen\n                        </Button>\n                        <Button color='secondary' onClick={this.sendAnfrageButtonClicked}>\n                          Kontaktanfrage\n                        </Button>\n                      </ButtonGroup>\n                    </Grid>\n                    <Grid item xs />\n                    <Grid item>\n                      <Typography variant='body2' color={'textSecondary'}>Profil und Kontaktanfrage</Typography>\n                    </Grid>\n                  </Grid>\n                </AccordionSummary>\n                <Profil show={showProfil} profil={profil}/>\n                <AnfrageForm show={showAnfrageForm} profil={profil}/>\n              </Accordion>\n            </div>\n          );\n        }\n}\n\n\nconst styles = theme => ({\n  root: {\n      width: '100%',\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n      padding: theme.spacing(1),\n  },\n  content: {\n      margin: theme.spacing(1),\n    },\n  table: {\n      minWidth: 700,\n    },\n  formControl: {\n      margin: theme.spacing(1),\n      minWidth: 200,\n      textAlign: \"left\"\n  },\n  button: {\n      margin: theme.spacing(1),\n      },\n  laden: {\n    padding: 0\n  },\n  breite: {\n    width: 220\n  }\n  });\n\n/** PropTypes */\nVorschlagListeEintrag.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  vorschlag: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired\n}\n\n\nexport default withStyles(styles)(VorschlagListeEintrag);","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/KonversationListeEintrag.js",["192"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Typography, Grid } from '@material-ui/core';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport Nachricht from './Nachricht';\n\n/** \n * \n * Es wird ein einzelne Konversationen von einer Person dargestellt\n * \n * Hierfür wird der Name der Konversation angezeigt\n * \n */\n\nclass KonversationListeEintrag extends Component {\n\n    constructor(props){\n        super(props);\n\n        // initiiere einen leeren state\n        this.state = {\n            konversation: null,\n            showKonversation: false,\n            showProfil: false,\n            loadingInProgress: false,\n            error: null\n        };\n    }\n\n\n    \n// Lifecycle methode, wird aufgerufen wenn componente in den DOM eingesetzt wird\ncomponentDidMount() {\n  this.getKonversation();\n}\n\n//Handles the onClick event of the show Konversation button\nshowKonversationButtonClicked = (event) => {\n  event.stopPropagation();\n  this.setState({\n    showKonversation: true\n  });\n}\n\nrender() {\n  const { classes } = this.props;\n  const { konversation } = this.state;\n\n  return(\n    <div>\n      <Grid container spacing={1} justify='flex-start' alignItems='center'>\n            <Grid item>\n              <Typography variant='body1' className={classes.heading}>{konversation.getname()}\n                </Typography>\n            </Grid>  \n            <Grid item>\n              <ButtonGroup variant='text' size='small'>\n                <Button color='primary' onClick={this.showKonversationButtonClicked}>\n                    Konversation ansehen\n                </Button>\n              </ButtonGroup>\n            </Grid>\n      </Grid>\n      <Nachricht show={showKonversation} konversationid = {konversation.getid()}/> \n    </div>\n  )\n\n}\n  \n    \n}\n\n/** Component specific styles */\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  customerFilter: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  }\n});\n\n/** PropTypes */\nKonversationListeEintrag.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  /** @ignore */\n  location: PropTypes.object.isRequired,\n}\n\n\n\nexport default withStyles(styles)(KonversationListeEintrag);","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/index.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/BusinessObject.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/api/NamedBusinessObject.js",[],"/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/Nachricht.js",["193"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LernpartnerAPI from '../api/LernpartnerAPI'\nimport { withStyles, Button, TextField, InputAdornment, IconButton, Grid, Typography, Paper, CardActions } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\nimport NachrichtenListeEintrag from './NachrichtenListeEintrag';\nimport Divider from \"@material-ui/core/Divider\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n//import SaveIcon from '@material-ui/icons/Save';\n//import Table from '@material-ui/core/Table';\n//import TableBody from '@material-ui/core/TableBody';\n//import TableCell from '@material-ui/core/TableCell';\n//import TableContainer from '@material-ui/core/TableContainer';\n//import TableHead from '@material-ui/core/TableHead';\n//import TableRow from '@material-ui/core/TableRow';\n\n\n/**\n * Es werden alle Nachrichten des aktuell eingeloggten Studenten angezeigt\n * \n * @see See [NachrichtenListeEintrag]](#nachrichtenlisteeintrag)\n * \n * Hierfür werden alle Nachrichten des aktuell eingeloggten Student geladen und in die Componente NachrichtenListeEintrag gemappt\n * \n */\n\n\nclass Nachricht extends Component {\n\n  constructor(props) {\n    super(props);\n\n   // console.log(props);\n   let expandedID = null;\n\n   if (this.props.location.expandCustomer) {\n     expandedID = this.props.location.expandCustomer.getID();\n   }\n\n   // Init an empty state\n   this.state = {\n     nachrichten: '',\n     inhalt: null,\n     personID: null, \n     konversation_id: null, \n     error: null,\n     loadingInProgress: false,\n     expandedNachrichtID: expandedID,\n   };\n }\n\n //Öffnet das Dialog-Fenster Nachrichtfrom, wenn der Button geklickt wurde\n addButtonClicked = event => {\n    event.stopPropagation();\n    this.setState({\n      showModulForm: true\n    });\n  }\n \n // API Anbindung um alle Nachrichten vom Backend zu bekommen \n getNachrichten= () => {\n  LernpartnerAPI.getAPI()\n    .getNachrichten(this.props.personID.getID(), this.props.konversation_id.getID())\n    .then((nachrichtenBOs) =>\n      this.setState({\n        nachrichten: nachrichten,\n        loadingInProgress: false,\n        loadingError: null,\n      })\n    )\n    .catch((e) =>\n      this.setState({\n        nachrichten: null,\n        loadingInProgress: false,\n        loadingError: e,\n      })\n    );\n  this.setState({\n    loadingInProgress: true,\n    loadingError: null,\n  });\n};\n\naddNachricht = () => {\n    let newNachricht = new NachrichtBO(\n      this.state.inhalt,\n      this.props.personID.getID(),\n      this.props.konversation_id.getID()\n    );\n    LernpartnerAPI.getAPI()\n      .addNachricht(newNachricht)\n      .then((nachricht) => {\n        this.state.nachricht.push(nachricht);\n        this.setState({ inhalt: \"\" });\n        // Backend call sucessfull\n        // reinit the dialogs state for a new empty nachricht\n      })\n      .catch((e) =>\n        this.setState({\n          updatingInProgress: false, // disable loading indicator\n          updatingError: e, // show error message\n        })\n      );\n\n        \n\nthis.setState({\n    loadingInProgress: true,\n    error: null\n  });\n}\n\n// Lifecycle methode, wird aufgerufen wenn componente in den DOM eingesetzt wird\ncomponentDidMount() {\n  this.getNachrichten();\n}\n\n//Wird aufgerufen, wenn das Dialog-Fenster Nachrichtform geschlossen wird\nnachrichtFormClosed = modul => {\n    this.getNachrichten();\n    if (nachricht) {\n      const newNachricht = [...this.state.nachrichten, nachricht];\n      this.setState({\n        nachrichten: newNachricht,\n        filteredNachrichten: [...newNachricht],\n        showNachrichtForm: false\n      });\n    } else {\n      this.setState({\n        showNachrichtForm: false\n      });\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ content: e.target.value });\n  };\n\n  handleClose = () => {\n    this.props.onClose();\n  };\n\n  //nachrichtDeleted = nachricht => {\n   // const newNachricht = this.state.nachrichten.filter(nachrichtFromState => nachrichtFromState.getID() !== nachricht.getID());\n   // this.setState({\n     // nachrichten: newNachricht,\n     // filteredNachrichten: [...newNachricht],\n     // showNachrichtenForm: false\n  //  });}\n\n // Rendert die Componente \n    render() {\n      const { classes, personID, konversation_id } = this.props;\n      const { nachrichten, inhalt, personID, konversation_id, loadingInProgress, error, expandedNachrichtID } = this.state;\n      if (nachrichten) {\n        nachrichten.sort((a, b) => {\n          return a.getID() - b.getID();\n        });\n      }\n  \n      return (\n        <div>\n          <h1 class=\"Chatname\">\n            {konversation_id.getName() + \" \" + konversation_id.getVorname()}\n          </h1>\n          {nachrichten\n            ? nachrichten.map((nachricht) => {\n                {\n                  if (nachricht.getPersonID() != personID.getID()) {\n                    return (\n                      <div id=\"empfänger_text\">\n                        <Grid item\n                          xs\n                          className={classes.outerColumn}\n                          style={{ display: \"flex\", alignItems: \"center\", position: \"rigth\" }}\n                        >\n                          <Typography>{nachricht.getInhalt()}</Typography>\n                        </Grid>\n                        <Divider />\n                      </div>\n                    );\n                  } \n                  \n                  else {\n                    return (\n                      <div id=\"sender_text\">\n                        <Grid\n                          item\n                          className={classes.outerColumn}\n                          container\n                          direction=\"row\"\n                          alignItems=\"center\"\n                          justify=\"flex-end\"\n                          position= \"left\"\n                        >\n                          <Typography>{nachricht.getInhalt()}</Typography>\n                        </Grid>\n                        <Divider />\n                      </div>\n                    );\n                  }\n                }\n              })\n            : null}\n  \n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField\n              id=\"standard-basic\"\n              label=\"schreibe eine Nachricht\"\n              value={inhalt}\n              onChange={this.handleChange}\n            />\n          </form>\n          <Button className={classes.button_style} variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>\n          <ArrowBackIcon/>\n          </Button>\n          <Button color=\"primary\" variant=\"contained\" onClick={this.addNachricht}>\n            senden \n          </Button>\n\n      <LoadingProgress show={loadingInProgress} />\n      <ContextErrorMessage error={error} contextErrorMsg={`Leider konnten deine Nachrichten nicht geladen werden!`} onReload={this.getNachrichten} />\n      \n      </div>\n    );\n\n}}\n\nconst styles = (theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"100ch\",\n    },\n  },\n  outerColumn: {\n    margin: 5,\n    padding: 5,\n    height: 50,\n  },\n  button_style: {\n    margin: 5,\n    padding: 5,\n  }\n});\n\n/** PropTypes */\nNachricht.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  /** @ignore */\n  location: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired\n}\n  \n\nexport default withStyles(styles)(Nachricht);","/Users/hannahhielscher/Desktop/SoPra-LernpartnerApp/frontend/src/components/Profil.js",["194"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Typography, TableContainer, Table, TableHead, TableCell, Paper, TableRow, TableBody, Link, Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { withRouter } from 'react-router-dom';\nimport {LernpartnerAPI} from '../api';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\nimport ProfilBO from '../api/ProfilBO';\nimport PersonBO from '..api/PersonBO';\n\nclass Profil extends Component {\n\n    constructor(props){\n        super(props);\n\n        // initiiere einen leeren state\n        this.state = {\n            profil: null,\n            gruppe: false,\n            personVorname = null,\n            personName = null,\n            personSemester = 0,\n            personStudiengang = null,\n            lerngruppe = false\n            personProfilID = None,\n            personLernfaecher = null,\n            personLernvorliebenID = null\n            loadingInProgress: false,\n            loadingError: null,\n        };\n    }\n\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\n    componentDidMount() {\n        this.getPerson();\n  }\n\n/**   showVorschlagButtonClick = (event) => {\n      event.stopPropagation();\n      this.setState({\n        showVorschlag: true\n      });\n    }**/\n\n\n\n\n    // API Anbindung um Profil vom Backend zu bekommen\n    getPerson = () => {\n      LernpartnerAPI.getAPI().getPerson(this.props.person.getID())\n      .then(personBO =>\n          this.setState({\n            person: personBO,\n            personName: personBO.name,\n            personVorname: personBO.vorname,\n            personSemester: personBO.semester,\n            personStudiengang: personBO.studiengang,\n            personProfilID: personBO.personenprofil,\n            loadingInProgress: false,\n            error: null,\n          }))\n          .catch(e =>\n              this.setState({\n            person: null,\n            personName: null,\n            personVorname: null,\n            personSemester: null,\n            personStudiengang: null,\n            personProfilID: null,\n            loadingInProgress: false,\n            error: e,\n              }));\n      this.setState({\n        loadingInProgress: true,\n        error: null\n      });\n    }\n\n     getProfil = () => {\n    LernpartnerAPI.getAPI().getProfil(personProfilID).then(profilBO =>\n      this.setState({\n            profil: profilBOs,\n            profilLernfaecher: profilBO.lernfaecher,\n            profilLernvorliebenID: profilBO.lernvorlieben,\n            loadingInProgress: false,\n            error: null\n      })).catch(e =>\n        this.setState({ // Reset state with error from catch\n          profil: null,\n          profilLernfaecher: null,\n          profilLernvorliebenID: false,\n          loadingInProgress: false,\n          error: e,\n        })\n      );\n\n    // set loading to true\n    this.setState({\n      loadingInProgress: true,\n      loadingError: null\n    });\n  }\n\n\n     getLernvorlieben = () => {\n    LernpartnerAPI.getAPI().getLernvorlieben(personLernvorliebenID).then(lernvorliebenBO =>\n      this.setState({\n            profil: profilBOs,\n            profilLernfaecher: profilBO.lernfaecher,\n            profilLernvorlieben: profilBO.lernvorlieben,\n            loadingInProgress: false,\n            error: null\n      })).catch(e =>\n        this.setState({ // Reset state with error from catch\n          profil: null,\n          profilLernfaecher: null,\n          profilLernvorlieben: false,\n          loadingInProgress: false,\n          error: e,\n        })\n      );\n\n    // set loading to true\n    this.setState({\n      loadingInProgress: true,\n      loadingError: null\n    });\n  }\n\n   /** Renders the component */\n  render() {\n    const { classes } = this.props;\n    // Use the states customer\n    const { personProfil, personName, personVorname, personSemester, personStudiengang, personLernfaecher, personLernvorlieben, loadingInProgress, error} = this.state;\n\n    // console.log(this.props);\n    return (\n      <div className={classes.root}>\n    \"\"\"  <Button color=\"primary\" onClick= {this.showVorschlagButtonClick}>Zurueck zu den Vorschlaegen</Button>\"\"\"\n      <Typography variant='body1' color={'textSecondary'}>\n\n                            <b>Semester: </b> {personSemester} <br />\n                            <b>Studiengang: </b>{personStudiengang}<br />\n                            <b>Lernfächer: </b>{personLernfaecher}<br />\n                            <b>Lernvorlieben: </b>{personLernvorlieben}<br />\n\n\n      </div>\n    );\n  }\n}\n\n  const styles = theme => ({\n  root: {\n      width: '100%',\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n      padding: theme.spacing(1),\n  },\n  content: {\n      margin: theme.spacing(1),\n    },\n  table: {\n      minWidth: 700,\n    },\n  formControl: {\n      margin: theme.spacing(1),\n      minWidth: 200,\n      textAlign: \"left\"\n  },\n\n  laden: {\n    padding: 0\n  },\n  breite: {\n    width: 220\n  }\n  });\n\n\n/** PropTypes */\nProfil.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  person: PropTypes.object.isRequired,\n  show: PropTypes.bool.isRequired\n}\n\n\nexport default withStyles(styles)(Profil);\n\n",["195","196"],{"ruleId":"197","severity":1,"message":"198","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":26},{"ruleId":"197","severity":1,"message":"201","line":8,"column":8,"nodeType":"199","messageId":"200","endLine":8,"endColumn":22},{"ruleId":"197","severity":1,"message":"202","line":13,"column":8,"nodeType":"199","messageId":"200","endLine":13,"endColumn":25},{"ruleId":"197","severity":1,"message":"203","line":154,"column":39,"nodeType":"199","messageId":"200","endLine":154,"endColumn":46},{"ruleId":"197","severity":1,"message":"204","line":2,"column":41,"nodeType":"199","messageId":"200","endLine":2,"endColumn":45},{"ruleId":"205","severity":1,"message":"206","line":564,"column":9,"nodeType":"207","messageId":"208","endLine":571,"endColumn":10},{"ruleId":"197","severity":1,"message":"209","line":4,"column":22,"nodeType":"199","messageId":"200","endLine":4,"endColumn":28},{"ruleId":"197","severity":1,"message":"210","line":4,"column":30,"nodeType":"199","messageId":"200","endLine":4,"endColumn":39},{"ruleId":"197","severity":1,"message":"211","line":4,"column":41,"nodeType":"199","messageId":"200","endLine":4,"endColumn":55},{"ruleId":"197","severity":1,"message":"212","line":4,"column":57,"nodeType":"199","messageId":"200","endLine":4,"endColumn":67},{"ruleId":"197","severity":1,"message":"213","line":4,"column":69,"nodeType":"199","messageId":"200","endLine":4,"endColumn":73},{"ruleId":"197","severity":1,"message":"214","line":4,"column":75,"nodeType":"199","messageId":"200","endLine":4,"endColumn":85},{"ruleId":"197","severity":1,"message":"215","line":3,"column":34,"nodeType":"199","messageId":"200","endLine":3,"endColumn":48},{"ruleId":"197","severity":1,"message":"216","line":3,"column":50,"nodeType":"199","messageId":"200","endLine":3,"endColumn":55},{"ruleId":"197","severity":1,"message":"217","line":3,"column":57,"nodeType":"199","messageId":"200","endLine":3,"endColumn":66},{"ruleId":"197","severity":1,"message":"218","line":3,"column":68,"nodeType":"199","messageId":"200","endLine":3,"endColumn":77},{"ruleId":"197","severity":1,"message":"219","line":3,"column":79,"nodeType":"199","messageId":"200","endLine":3,"endColumn":84},{"ruleId":"197","severity":1,"message":"220","line":3,"column":86,"nodeType":"199","messageId":"200","endLine":3,"endColumn":94},{"ruleId":"197","severity":1,"message":"221","line":3,"column":96,"nodeType":"199","messageId":"200","endLine":3,"endColumn":105},{"ruleId":"197","severity":1,"message":"204","line":3,"column":107,"nodeType":"199","messageId":"200","endLine":3,"endColumn":111},{"ruleId":"197","severity":1,"message":"213","line":3,"column":113,"nodeType":"199","messageId":"200","endLine":3,"endColumn":117},{"ruleId":"197","severity":1,"message":"222","line":5,"column":10,"nodeType":"199","messageId":"200","endLine":5,"endColumn":20},{"ruleId":"197","severity":1,"message":"223","line":7,"column":8,"nodeType":"199","messageId":"200","endLine":7,"endColumn":27},{"ruleId":"197","severity":1,"message":"224","line":8,"column":8,"nodeType":"199","messageId":"200","endLine":8,"endColumn":23},{"ruleId":"225","severity":2,"message":"226","line":73,"column":39,"nodeType":"199","messageId":"227","endLine":73,"endColumn":53},{"ruleId":"225","severity":2,"message":"228","line":75,"column":21,"nodeType":"199","messageId":"227","endLine":75,"endColumn":30},{"ruleId":"225","severity":2,"message":"229","line":99,"column":46,"nodeType":"199","messageId":"227","endLine":99,"endColumn":67},{"ruleId":"225","severity":2,"message":"228","line":101,"column":21,"nodeType":"199","messageId":"227","endLine":101,"endColumn":30},{"ruleId":"225","severity":2,"message":"230","line":102,"column":32,"nodeType":"199","messageId":"227","endLine":102,"endColumn":40},{"ruleId":"225","severity":2,"message":"230","line":103,"column":34,"nodeType":"199","messageId":"227","endLine":103,"endColumn":42},{"ruleId":"197","severity":1,"message":"231","line":139,"column":15,"nodeType":"199","messageId":"200","endLine":139,"endColumn":27},{"ruleId":"197","severity":1,"message":"232","line":139,"column":29,"nodeType":"199","messageId":"200","endLine":139,"endColumn":39},{"ruleId":"197","severity":1,"message":"233","line":139,"column":41,"nodeType":"199","messageId":"200","endLine":139,"endColumn":54},{"ruleId":"197","severity":1,"message":"234","line":139,"column":131,"nodeType":"199","messageId":"200","endLine":139,"endColumn":148},{"ruleId":"197","severity":1,"message":"235","line":139,"column":150,"nodeType":"199","messageId":"200","endLine":139,"endColumn":155},{"ruleId":"236","severity":2,"message":"237","line":144,"column":10,"nodeType":"238","messageId":"239","endLine":144,"endColumn":16},{"ruleId":"225","severity":2,"message":"240","line":187,"column":1,"nodeType":"199","messageId":"227","endLine":187,"endColumn":7},{"ruleId":"197","severity":1,"message":"209","line":4,"column":22,"nodeType":"199","messageId":"200","endLine":4,"endColumn":28},{"ruleId":"197","severity":1,"message":"213","line":4,"column":30,"nodeType":"199","messageId":"200","endLine":4,"endColumn":34},{"ruleId":"197","severity":1,"message":"241","line":96,"column":20,"nodeType":"199","messageId":"200","endLine":96,"endColumn":33},{"ruleId":"197","severity":1,"message":"198","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":26},{"ruleId":"197","severity":1,"message":"242","line":5,"column":8,"nodeType":"199","messageId":"200","endLine":5,"endColumn":22},{"ruleId":"197","severity":1,"message":"243","line":8,"column":8,"nodeType":"199","messageId":"200","endLine":8,"endColumn":20},{"ruleId":"225","severity":2,"message":"244","line":24,"column":31,"nodeType":"199","messageId":"227","endLine":24,"endColumn":40},{"ruleId":"225","severity":2,"message":"245","line":41,"column":5,"nodeType":"199","messageId":"227","endLine":41,"endColumn":13},{"ruleId":"225","severity":2,"message":"246","line":42,"column":10,"nodeType":"199","messageId":"227","endLine":42,"endColumn":15},{"ruleId":"225","severity":2,"message":"247","line":74,"column":33,"nodeType":"199","messageId":"227","endLine":74,"endColumn":40},{"ruleId":"225","severity":2,"message":"248","line":79,"column":23,"nodeType":"199","messageId":"227","endLine":79,"endColumn":35},{"ruleId":"197","severity":1,"message":"249","line":3,"column":123,"nodeType":"199","messageId":"200","endLine":3,"endColumn":127},{"ruleId":"197","severity":1,"message":"250","line":138,"column":26,"nodeType":"199","messageId":"200","endLine":138,"endColumn":30},{"ruleId":"197","severity":1,"message":"251","line":138,"column":32,"nodeType":"199","messageId":"200","endLine":138,"endColumn":38},{"ruleId":"197","severity":1,"message":"252","line":7,"column":63,"nodeType":"199","messageId":"200","endLine":7,"endColumn":79},{"ruleId":"197","severity":1,"message":"253","line":94,"column":37,"nodeType":"199","messageId":"200","endLine":94,"endColumn":45},{"ruleId":"236","severity":2,"message":"254","line":125,"column":18,"nodeType":"238","messageId":"239","endLine":125,"endColumn":29},{"ruleId":"225","severity":2,"message":"255","line":64,"column":24,"nodeType":"199","messageId":"227","endLine":64,"endColumn":40},{"ruleId":null,"fatal":true,"severity":2,"message":"256","line":156,"column":36},{"ruleId":null,"fatal":true,"severity":2,"message":"257","line":26,"column":13},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'VorschlagListe' is defined but never used.","'RegistrierungForm' is defined but never used.","'Userneu' is assigned a value but never used.","'Link' is defined but never used.","no-dupe-class-members","Duplicate name 'getNachrichten'.","MethodDefinition","unexpected","'Button' is defined but never used.","'TextField' is defined but never used.","'InputAdornment' is defined but never used.","'IconButton' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'TableContainer' is defined but never used.","'Table' is defined but never used.","'TableHead' is defined but never used.","'TableCell' is defined but never used.","'Paper' is defined but never used.","'TableRow' is defined but never used.","'TableBody' is defined but never used.","'withRouter' is defined but never used.","'ContextErrorMessage' is defined but never used.","'LoadingProgress' is defined but never used.","no-undef","'personProfilID' is not defined.","undef","'profilBOs' is not defined.","'personLernvorliebenID' is not defined.","'profilBO' is not defined.","'personProfil' is assigned a value but never used.","'personName' is assigned a value but never used.","'personVorname' is assigned a value but never used.","'loadingInProgress' is assigned a value but never used.","'error' is assigned a value but never used.","react/jsx-no-undef","'Button' is not defined.","JSXIdentifier","undefined","'Profil' is not defined.","'currentPerson' is assigned a value but never used.","'FormHelperText' is defined but never used.","'NativeSelect' is defined but never used.","'component' is not defined.","'setState' is not defined.","'state' is not defined.","'classes' is not defined.","'handleChange' is not defined.","'Card' is defined but never used.","'show' is assigned a value but never used.","'person' is assigned a value but never used.","'AccordionDetails' is defined but never used.","'profilID' is assigned a value but never used.","'AnfrageForm' is not defined.","'showKonversation' is not defined.","Parsing error: Identifier 'personID' has already been declared.\n\n\u001b[0m \u001b[90m 154 |\u001b[39m     render() {\u001b[0m\n\u001b[0m \u001b[90m 155 |\u001b[39m       \u001b[36mconst\u001b[39m { classes\u001b[33m,\u001b[39m personID\u001b[33m,\u001b[39m konversation_id } \u001b[33m=\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mprops\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 156 |\u001b[39m       \u001b[36mconst\u001b[39m { nachrichten\u001b[33m,\u001b[39m inhalt\u001b[33m,\u001b[39m personID\u001b[33m,\u001b[39m konversation_id\u001b[33m,\u001b[39m loadingInProgress\u001b[33m,\u001b[39m error\u001b[33m,\u001b[39m expandedNachrichtID } \u001b[33m=\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mstate\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 157 |\u001b[39m       \u001b[36mif\u001b[39m (nachrichten) {\u001b[0m\n\u001b[0m \u001b[90m 158 |\u001b[39m         nachrichten\u001b[33m.\u001b[39msort((a\u001b[33m,\u001b[39m b) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 159 |\u001b[39m           \u001b[36mreturn\u001b[39m a\u001b[33m.\u001b[39mgetID() \u001b[33m-\u001b[39m b\u001b[33m.\u001b[39mgetID()\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 24 |\u001b[39m             personStudiengang \u001b[33m=\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 25 |\u001b[39m             lerngruppe \u001b[33m=\u001b[39m \u001b[36mfalse\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m             personProfilID \u001b[33m=\u001b[39m \u001b[33mNone\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 27 |\u001b[39m             personLernfaecher \u001b[33m=\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 28 |\u001b[39m             personLernvorliebenID \u001b[33m=\u001b[39m \u001b[36mnull\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 29 |\u001b[39m             loadingInProgress\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m\u001b[0m","no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-global-assign","no-unsafe-negation"]